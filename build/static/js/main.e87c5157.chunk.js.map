{"version":3,"sources":["hoc/Auth.js","components/loader/Loader.js","components/story/StoryModal.js","components/story/Story.js","components/home/newUserModal/NewUserModal.js","components/home/shareModal/ShareModal.js","components/home/Home.js","components/search/poper/Poper.js","components/search/Search.js","components/header/Header.js","components/logout/LogOut.js","images/insta.png","images/slider1.jpg","images/slider2.jpg","images/slider3.jpg","components/SignIn/emailStepper.js","components/SignIn/SignIn.js","components/signup/SignUp.js","components/chat/ChatMessages.js","components/profileImageModal/ProfileImageModal.js","components/editProfile/EditProfile.js","components/profile/Profile.js","components/chat/ChatBlankMessages.js","components/chat/ChatUsers.js","components/chat/Chat.js","Routes.js","store/reducers/index.js","store/reducers/users_reducer.js","store/index.js","index.js"],"names":["authgaurd","ComposedComponent","setIsAuthenticate","props","history","useHistory","useState","isAuth","setIsAuth","isUserAuthenticate","a","fetch","response","json","success","console","log","push","useEffect","Loader","className","fontSize","style","fill","useStyles","makeStyles","theme","root","display","justifyContent","marginTop","previewcard","width","height","margin","media","paddingTop","previewmedia","modalHeader","fontWeight","imageIcon","marginBottom","marginRight","StoryModal","storyModal","setStoryModal","classes","fileName","setFileName","setPreviewSource","setIsProfile","openAlert","setOpenAlert","isBedAlert","setIsBedAlert","message","setMessage","closeModal","JSON","parse","localStorage","getItem","validationSchema","Yup","shape","photo","required","addNewStory","values","newStory","UserId","id","method","headers","body","stringify","data","story","setTimeout","error","Modal","size","centered","show","onHide","Header","Title","Body","initialValues","content","onSubmit","reader","FileReader","readAsDataURL","onloadend","result","errors","touched","setFieldValue","textAlign","Input","type","name","onChange","e","target","files","length","handleChangeImage","hidden","Button","profileBtn","color","variant","htmlFor","Collapse","in","Alert","severity","action","IconButton","onClick","Story","storiesUsers","storyUsers","setStoryUsers","stories","setStories","StylesProvider","position","top","left","zIndex","onAllStoriesEnd","map","user","Avatar","border","username","profile","storiesArr","forEach","photoArr","split","storyObj","url","header","heading","profileImage","openStory","Stories","profileUrl","cloudName","publicId","crop","title","NewUserModal","stepsEnabled","setStepsEnabled","setShow","handleClose","toggleSteps","backdrop","keyboard","closeButton","Footer","shareModalOpen","setShareModalOpen","FacebookShareButton","quote","FacebookIcon","round","FacebookMessengerShareButton","appId","FacebookMessengerIcon","TwitterShareButton","TwitterIcon","TelegramShareButton","TelegramIcon","WhatsappShareButton","separator","WhatsappIcon","EmailShareButton","subject","EmailIcon","moment","require","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","fab","bottom","whiteSpace","borderRadius","backgroundColor","extendedIcon","spacing","likes","comment","alignItems","AddCommenttextField","flexBasis","padding","divider","iconButton","outline","suggestion","right","flexDirection","overflowY","paddingRight","scrollbarWidth","Home","posts","setPosts","commentValue","setCommentValue","previewSource","suggestionUsers","setSuggestionUsers","setStoriesUsers","emailModal","setEmailModal","firstEntry","setFirstEntry","initialStep","element","intro","tooltipClass","steps","addNewPost","newPost","date","format","toString","post","newPostArray","postObj","index","publisher_id","publisher_username","publisher_profile","post_id","post_content","post_likes","post_likes_old","post_likeby","post_photo","post_date","post_comments","sendComment","PostId","newArr","renderComment","time","startOf","fromNow","commenter","commenter_profile","addLike","isLike","filter","like","add","getPosts","postsArr","res","item","Followings","find","followed","followed_id","like_username","Boolean","likedUser","Number","like_userid","getStories","storyArr","User","Followers","follower","follower_id","getSuggestionUsers","users","suggestionArr","suggestionUser","setFollow","userWhoWantToFollow","userWhoGetsFollower","newSuggestedUserArr","setItem","newUser","enabled","onExit","injectFirst","Grid","container","sm","md","slice","reverse","Card","card","CardHeader","avatar","to","CardMedia","image","CardActions","disableSpacing","ShareModal","CardContent","Typography","Divider","commenter_id","TextField","label","value","InputProps","startAdornment","InputAdornment","endAdornment","Hidden","smDown","subheader","Fab","maxHeight","multiline","rows","fullWidth","event","paper","background","SimplePopper","anchorEl","open","setUsers","Popper","textDecoration","search","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","Search","searchValue","setSearchValue","setAnchorEl","findUsers","InputBase","undefined","currentTarget","handleChange","placeholder","input","grow","flexGrow","appbar","sectionDesktop","AppBar","Toolbar","noWrap","src","alt","Badge","badgeContent","LogOut","logOut","removeItem","maxWidth","large","EmailStepper","activeStep","setActiveStep","setUser","handleNext","prev","handleBack","prevBtn","bringUser","formik","email","sendEmail","useFormik","enableReinitialize","resetForm","Stepper","step","Step","StepLabel","handleSumbit","getFieldProps","helperText","errorHelper","CardActionArea","gutterBottom","component","firstname","lastname","submitForm","Copyright","align","Link","href","Date","getFullYear","backgroundImage","InstaPhoto","backgroundRepeat","alignSelf","backgroundPosition","backgroundSize","slider","formGrid","palette","secondary","main","form","submit","SignIn","useDispatch","showPassword","setShowPassword","password","min","loginUser","xs","mdDown","Carousel","fade","interval","Item","Slider1","Slider2","Slider3","Paper","square","noValidate","handleSubmit","autoFocus","Box","mt","socket","SignUp","dispatch","reRef","useRef","showConfirmPassword","setShowConfirmPassword","confirmPassword","oneOf","handleClickShowPassword","handleClickConfirmPassword","signUpUser","current","getValue","token","reset","payload","lg","elevation","editProfile","autoComplete","sitekey","ref","ProfileImageModal","imageModal","setImageModal","modalImage","dialogClassName","aria-labelledby","Row","Col","owner_photo","owner_username","comments","EditProfile","modal","setModal","description","userProfile","setUserProfile","getUser","profileFileName","profileDescription","updateSettings","Profile","match","params","setModalImage","isAllowEdit","setisAllowEdit","isFollowed","setIsFollowed","numberOfFollowers","setnumberOfFollowers","numberOfFollowing","setnumberOfFollowing","getUserPosts","postArr","userWhoWantstoUnfollow","userWhoGetsUnfollowed","handleImageModal","tabIndex","ChatMessages","location","messages","setMessages","setName","messagesEndRef","connectedUser","connectionOptions","scrollToBottom","scrollIntoView","behavior","sendMessage","preventDefault","emit","reciver_id","sender_id","io","on","getConversation","partnerId","chatwith","queryString","i","rel","onKeyPress","key","navigator","geolocation","alert","getCurrentPosition","latitude","coords","longitude","ChatBlankMessages","class","cursor","ChatUsers","setUserChanged","userChanged","getUsers","Chat","currentChatUser","setCurrentChatUser","minHeight","Router","path","AuthGaurd","render","appReducers","combineReducers","state","ReduxStore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","store","Routes","document","getElementById"],"mappings":"4bAGe,SAASA,EAAUC,EAAmBC,GAiCjD,OAhC4B,SAACC,GACzB,IAAMC,EAAUC,cADmB,EAEPC,oBAAS,GAFF,mBAE5BC,EAF4B,KAEpBC,EAFoB,KAI7BC,EAAkB,uCAAG,8BAAAC,EAAA,sEACFC,MAAM,gBADJ,cACnBC,EADmB,gBAECA,EAASC,OAFV,kBAEjBC,SAENZ,GAAkB,GAClBa,QAAQC,IAAI,QACZR,GAAU,KAGVN,GAAkB,GAClBM,GAAU,GACVO,QAAQC,IAAI,YACZZ,EAAQa,KAAK,YAZU,2CAAH,qDAoBtB,OAJFC,qBAAU,WACPT,MACA,IAGC,mCACEF,EACD,cAACN,EAAD,eAAuBE,IACtB,Q,8BCpBCgB,G,OATA,WACX,OACI,gCACI,qBAAKC,UAAU,YACf,sBAAKA,UAAU,UAAf,cAA0B,cAAC,IAAD,CAAeC,SAAS,QAAQC,MAAO,CAACC,KAAK,UAAvE,Y,wHCYNC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,QAAQ,OACRC,eAAe,SACfC,UAAU,QAEZC,YAAY,CACVC,MAAM,QACNC,OAAO,QACPC,OAAO,QAETC,MAAO,CACLF,OAAQ,QACRD,MAAM,QACNI,WAAY,UAEdC,aAAc,CACZL,MAAM,QACNC,OAAO,SAETK,YAAa,CACZV,QAAS,OACTC,eAAgB,SAChBU,WAAW,QAEZC,UAAW,CACPC,aAAa,MACbC,YAAY,WA8HLC,EAxHI,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,cACvBC,EAAUtB,IADgC,EAEhBlB,mBAAS,IAFO,mBAEzCyC,EAFyC,KAE/BC,EAF+B,OAGN1C,mBAAS,IAHH,mBAG1B2C,GAH0B,aAId3C,oBAAS,GAJK,mBAI9B4C,GAJ8B,aAKd5C,oBAAS,GALK,mBAKzC6C,EALyC,KAK9BC,EAL8B,OAMZ9C,oBAAS,GANG,mBAMzC+C,EANyC,KAM7BC,EAN6B,OAOlBhD,mBAAS,IAPS,mBAOzCiD,EAPyC,KAOhCC,EAPgC,KAU1CC,GAFOC,KAAKC,MAAMC,aAAaC,QAAQ,SAE1B,kBAAMhB,GAAc,KAEjCiB,EAAmBC,MAAaC,MAAM,CACxCC,MAAMF,MACLG,SAAS,uBAoBVC,EAAW,uCAAG,WAAOC,GAAP,mBAAA1D,EAAA,6DACZ2D,EAAW,CACfJ,MAAOG,EAAOH,MACdK,OAASZ,KAAKC,MAAMC,aAAaC,QAAQ,SAASU,GAClDxB,SAAUqB,EAAOrB,UAJD,kBAOSpC,MAAM,SAAU,CACvC6D,OAAQ,OACRC,QAAS,CACL,eAAe,oBAEnBC,KAAMhB,KAAKiB,UAAUN,KAZP,cAORzD,EAPQ,gBAeGA,EAASC,OAfZ,QAeV+D,EAfU,QAgBRC,OACNvB,GAAc,GACdE,EAAW,eACXJ,GAAa,GACb0B,YAAW,WACPrB,IACAL,GAAa,KACf,OAEFE,GAAc,GACdE,EAAWoB,EAAKG,OAChB3B,GAAa,IA3BC,kDA+BdrC,QAAQgE,MAAR,MA/Bc,0DAAH,sDAsDf,OACI,mCACO,eAACC,EAAA,EAAD,CAAOC,KAAK,KAAKC,UAAQ,EAACC,KAAMvC,EAAYwC,OAAQ3B,EAApD,UACE,eAACuB,EAAA,EAAMK,OAAP,CAAcjE,UAAW0B,EAAQR,YAAjC,cAA+C,cAAC0C,EAAA,EAAMM,MAAP,CAAahE,MAAO,CAACiB,WAAW,OAAhC,6BAA/C,OACA,cAACyC,EAAA,EAAMO,KAAP,UACA,cAAC,IAAD,CACEC,cAAe,CAACvB,MAAM,GAAGwB,QAAQ,IACjC3B,iBAAkBA,EAClB4B,SA9EI,SAACtB,GAEhB,GADAA,EAAOrB,SAAWA,EACS,kBAAjBqB,EAAOH,MAAqB,CACtC,IAAM0B,EAAS,IAAIC,WACnBD,EAAOE,cAAczB,EAAOH,OAC5B0B,EAAOG,UAAY,WACnB7C,EAAiB0C,EAAOI,QACxB3B,EAAOH,MAAQ0B,EAAOI,OACtB5B,EAAYC,SAGRD,EAAYC,IAgEP,SAII,gBAAG4B,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,cAApB,OACC,eAAC,IAAD,CAAM5E,MAAO,CAAC6E,UAAU,UAAxB,UACA,cAACC,EAAA,EAAD,CAAO7B,GAAG,OAAOnD,UAAU,YAAYiF,KAAK,OAAOC,KAAK,QAAQC,SAAU,SAACC,GAAD,OA7B/D,SAACA,EAAEN,GAC5B,IAAMP,EAAS,IAAIC,WACnBM,EAAc,QAASM,EAAEC,OAAOC,MAAM,IACT,IAA1BF,EAAEC,OAAOC,MAAMC,QAChBzD,GAAa,GACbF,EAAY,IACZC,EAAiB,MAGjB0C,EAAOE,cAAcW,EAAEC,OAAOC,MAAM,IACpCf,EAAOG,UAAY,WACjB7C,EAAiB0C,EAAOI,SAE1B7C,GAAa,GACbF,EAAYwD,EAAEC,OAAOC,MAAM,GAAGJ,OAe+DM,CAAkBJ,EAAEN,IAAiBW,QAAM,IAC1H,eAACC,EAAA,EAAD,CAAQ1F,UAAW0B,EAAQiE,WAAYC,MAAM,UAAWC,QAAQ,WAAhE,UAA2E,cAAC,IAAD,CAAW7F,UAAW0B,EAAQN,YAAY,wBAAO0E,QAAQ,OAAf,UAAuBnE,EAAQ,UAAMA,EAAN,aAA4B,gBAA3D,UACtHiD,EAAO/B,OAASgC,EAAQhC,MAAS,qBAAK7C,UAAU,QAAf,SAAwB4E,EAAO/B,QAAgB,KAC/E,cAACkD,EAAA,EAAD,CAAUC,GAAIjE,EAAd,SACI,cAACkE,EAAA,EAAD,CACA/F,MAAO,CAACY,OAAO,QACfoF,SAAUjE,EAAa,QAAS,UAChCkE,OAAS,eAACC,EAAA,EAAD,CAAYR,MAAM,UAAU/B,KAAK,QAAQwC,QAAS,kBAAMrE,GAAa,IAArE,cAA+E,cAAC,IAAD,CAAW/B,SAAS,YAAnG,OAHT,SAICkC,MAGL,cAACuD,EAAA,EAAD,CAAQxF,MAAO,CAACY,OAAO,QAAS+E,QAAQ,WAAWD,MAAM,UAAUX,KAAK,SAAxE,kC,sDChGTqB,G,OArDD,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACIrH,mBAAS,IADb,mBACzBsH,EADyB,KACbC,EADa,OAEFvH,mBAAS,IAFP,mBAEzBwH,EAFyB,KAEhBC,EAFgB,OAGIzH,oBAAS,GAHb,mBAGzBsC,EAHyB,KAGbC,EAHa,KA0BhC,OALA3B,qBAAU,WACN2G,EAAcF,KACf,IAIH,eAACK,EAAA,EAAD,WACwB,IAAnBF,EAAQnB,QACT,qCACA,qBAAKvF,UAAU,aACf,qBAAKE,MAAO,CAAC2G,SAAU,QAASC,IAAI,MAAOC,KAAK,MAAOC,OAAO,KAA9D,SACE,cAAC,IAAD,CAAUpG,MAAO,IAAKC,OAAQ,IAAK6F,QAASA,EAASO,gBAAiB,kBAAMN,EAAW,YAIzF,sBAAK3G,UAAU,UAAf,UACI,qBAAKA,UAAU,cAAf,SACKwG,GAAcA,EAAWU,KAAI,SAAAC,GAAI,OAC9B,sBAAmBnH,UAAU,YAA7B,cAA0C,cAACoH,EAAA,EAAD,CAAQlH,MAAO,CAACW,OAAO,OAAQD,MAAM,OAAQyG,OAAO,qBAAsBhB,QAAS,kBAlC3H,SAACK,EAAQY,EAASC,GACjC,IAAMC,EAAa,GACnBd,EAAQe,SAAQ,SAAAhE,GACZ,IAAMiE,EAAWjE,EAAMZ,MAAM8E,MAAM,WAC7BC,EAAW,CACZC,IAAI,GAAD,OAAIH,EAAS,GAAb,sCAA6CA,EAAS,IACzDI,OAAQ,CACAC,QAAST,EACTU,aAAcT,IAGtBC,EAAW3H,KAAK+H,MAE5BjB,EAAWa,GAqBwIS,CAAUd,EAAKe,QAAQf,EAAKG,SAASH,EAAKgB,aAAnI,SAC1C,cAAC,IAAD,CAAOC,UAAU,cAAcC,SAAUlB,EAAKI,QAAS3G,MAAM,KAAKC,OAAO,KAAKyH,KAAK,YAEnF,sBAAMtI,UAAU,iBAAhB,SAAkCmH,EAAKG,aAH7BH,EAAKhE,SAO3B,sBAAKnD,UAAU,gBAAgBmD,GAAG,YAAYoF,MAAM,YAApD,cAAiE,cAAC,IAAD,CAAelC,QAAS,kBAAM5E,GAAc,IAAOvB,MAAO,CAACC,KAAK,WAAYF,SAAS,UAAtJ,UAEJ,cAAC,EAAD,CAAYuB,WAAYA,EAAYC,cAAeA,S,kBClBxC+G,EAtCM,SAAC,GAAwC,EAAtCC,aAAuC,IAAzBC,EAAwB,EAAxBA,gBAC5BvB,EAAO7E,KAAKC,MAAMC,aAAaC,QAAQ,SADa,EAElCvD,oBAAS,GAFyB,mBAEnD6E,EAFmD,KAE7C4E,EAF6C,KAKpDC,EAAc,kBAAMD,GAAQ,IAS3BE,EAAc,WACjBH,GAAgB,IAGpB,OACE,mCACE,eAAC9E,EAAA,EAAD,CAAOG,KAAMA,EAAMC,OAAQ4E,EAAaE,SAAS,SAASC,UAAU,EAAO7I,MAAO,CAAC6E,UAAU,UAA7F,UACE,cAACnB,EAAA,EAAMK,OAAP,CAAc+E,aAAW,EAAzB,SAEE,eAACpF,EAAA,EAAMM,MAAP,CAAahE,MAAO,CAACY,OAAO,OAAOK,WAAW,OAA9C,mBAA6DgG,EAAKG,SAAlE,SAGF,cAAC1D,EAAA,EAAMO,KAAP,CAAanE,UAAU,QAAvB,gHAGA,cAAC4D,EAAA,EAAMqF,OAAP,UACE,eAACvD,EAAA,EAAD,CAAQG,QAAQ,WAAWD,MAAM,UAAUS,QAAS,kBArBxDuC,SACAC,KAoB6E3I,MAAO,CAACY,OAAO,QAAxF,gCACqB,cAAC,IAAD,CAAiBZ,MAAO,CAACY,OAAO,6B,oICoBlD0H,I,OA/CM,SAAC,GAA6C,IAA3CU,EAA0C,EAA1CA,eAAgBC,EAA0B,EAA1BA,kBAG9BP,EAAc,kBAAMO,GAAkB,IAE5C,OACE,mCACE,eAACvF,EAAA,EAAD,CAAOG,KAAMmF,EAAgBlF,OAAQ4E,EAAaE,SAAS,SAASC,UAAU,EAAO7I,MAAO,CAAC6E,UAAU,SAASnE,MAAM,OAAtH,UACE,cAACgD,EAAA,EAAMK,OAAP,CAAc+E,aAAW,EAAzB,SACE,cAACpF,EAAA,EAAMM,MAAP,CAAahE,MAAO,CAACiB,WAAW,OAAhC,2BAEF,eAACyC,EAAA,EAAMO,KAAP,CAAYnE,UAAU,QAAtB,UAEA,cAACoJ,EAAA,EAAD,CAAqBpJ,UAAU,OAAO6H,IAAI,6BAA6BwB,MAAM,4BAA7E,SACE,cAACC,EAAA,EAAD,CAAczF,KAAM,GAAI0F,OAAK,MAG/B,cAACC,EAAA,EAAD,CAA8BxJ,UAAU,OAAO6H,IAAI,6BAA6B4B,MAAM,kBAAtF,SACE,cAACC,EAAA,EAAD,CAAuB7F,KAAM,GAAI0F,OAAK,MAGxC,cAACI,EAAA,EAAD,CAAoB3J,UAAU,OAAO6H,IAAI,6BAA6BU,MAAM,iBAA5E,SACE,cAACqB,EAAA,EAAD,CAAa/F,KAAM,GAAI0F,OAAK,MAG9B,cAACM,GAAA,EAAD,CAAqB7J,UAAU,OAAO6H,IAAI,6BAA6BU,MAAM,SAA7E,SACE,cAACuB,GAAA,EAAD,CAAcjG,KAAM,GAAI0F,OAAK,MAG/B,cAACQ,GAAA,EAAD,CAAqB/J,UAAU,OAAO6H,IAAI,6BAA6BU,MAAM,4BAA4ByB,UAAU,IAAnH,SACE,cAACC,GAAA,EAAD,CAAcpG,KAAM,GAAI0F,OAAK,MAG/B,cAACW,GAAA,EAAD,CAAmBlK,UAAU,OAAO6H,IAAI,6BAA6BsC,QAAQ,2BAA2B7G,KAAK,OAA7G,SACE,cAAC8G,GAAA,EAAD,CAAWvG,KAAM,GAAI0F,OAAK,SAI5B,cAAC3F,EAAA,EAAMqF,OAAP,UACE,eAACvD,EAAA,EAAD,CAAQG,QAAQ,WAAWD,MAAM,YAAYS,QAAS,kBAAMuC,KAAgB1I,MAAO,CAACY,OAAO,QAA3F,mBACO,cAAC,IAAD,CAAYZ,MAAO,CAACY,OAAO,8B,oRCdxCuJ,I,cAASC,EAAQ,MAGjBlK,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAQ,OACRC,eAAe,SACfC,UAAU,QAEZC,YAAY,CACVC,MAAM,QACNC,OAAO,QACPC,OAAO,QAETC,MAAO,CACLF,OAAQ,QACRD,MAAM,QACNI,WAAY,UAEdC,aAAc,CACZL,MAAM,QACNC,OAAO,SAET0J,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYpK,EAAMqK,YAAYC,OAAO,YAAa,CAChDC,SAAUvK,EAAMqK,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbtJ,YAAa,CACZV,QAAS,OACTC,eAAgB,SAChBU,WAAW,QAEZ6J,IAAK,CACHnE,SAAS,QACToE,OAAQ,OACRlE,KAAM,MACNmE,WAAY,SACZlE,OAAQ,OACRmE,aAAa,OACbC,gBAAgB,aAElBzF,WAAY,CACV3E,WAAW,OACXN,UAAU,OACVW,aAAa,QAEfD,UAAW,CACTC,aAAa,MACbC,YAAY,OAEd+J,aAAc,CACZ/J,YAAahB,EAAMgL,QAAQ,IAE7BC,MAAO,CACL3F,MAAO,UACP3F,SAAS,OACTkB,WAAY,OAEdqK,QAAS,CACPhL,QAAQ,OACRiL,WAAW,SACX/K,UAAU,OACVkF,MAAO,UACP3F,SAAS,OACTkB,WAAY,OAEduK,oBAAqB,CACnBC,UAAW,IACX7K,OAAQ,WACRF,MAAM,OACNgL,QAAQ,SAGVC,QAAS,CACP/K,OAAO,YAETgL,WAAY,CACV,UAAW,CACTlG,MAAM,OAER,UAAW,CACTmG,QAAS,SAGbC,WAAY,CACVnF,SAAU,QACVoF,MAAO,QACPnF,IAAK,QACLtG,QAAQ,OACR0L,cAAe,SACftL,MAAO,OACPuL,UAAU,OACVtL,OAAO,OACPuL,aAAa,OACbC,eAAgB,QAElB5I,MAAO,CACL5C,OAAO,QACPD,MAAM,QACNJ,QAAQ,OACRiK,WAAW,aA6cA6B,GAzcD,WACZ,IAAM5K,EAAUtB,KACV+G,EAAO7E,KAAKC,MAAMC,aAAaC,QAAQ,SAF3B,EAGQvD,mBAAS,IAHjB,mBAGXqN,EAHW,KAGJC,EAHI,OAI0BtN,oBAAS,GAJnC,mBAIXgK,EAJW,KAIKC,EAJL,OAKkBjK,oBAAS,GAL3B,mBAKX+C,EALW,KAKCC,EALD,OAMsBhD,mBAAS,IAN/B,mBAMXuN,EANW,KAMGC,EANH,OAOwBxN,mBAAS,IAPjC,mBAOXyN,EAPW,KAOI9K,EAPJ,OAQ4B3C,mBAAS,IARrC,mBAQX0N,EARW,KAQMC,EARN,OASkB3N,oBAAS,GAT3B,gCAUUA,oBAAS,IAVnB,gCAWoBA,mBAAS,KAX7B,oCAYsBA,mBAAS,KAZ/B,qBAYXqH,GAZW,MAYGuG,GAZH,SAagB5N,oBAAS,GAbzB,qBAaA4C,IAbA,gBAcY5C,mBAAS,IAdrB,qBAcXiD,GAdW,MAcFC,GAdE,SAegBlD,oBAAS,GAfzB,qBAeX6C,GAfW,MAeAC,GAfA,SAgBc9C,mBAAS,IAhBvB,qBAgBXyC,GAhBW,MAgBDC,GAhBC,SAiBkB1C,oBAAS,GAjB3B,qBAiBX6N,GAjBW,MAiBCC,GAjBD,SAmBkB9N,oBAAS,GAnB3B,qBAmBX+N,GAnBW,MAmBCC,GAnBD,SAoBsBhO,oBAAS,GApB/B,qBAoBXuJ,GApBW,MAoBGC,GApBH,SAqBoBxJ,mBAAS,GArB7B,qBAqBXiO,GArBW,gBAsBQjO,mBAAS,CAC/B,CAAEkO,QAAQ,WAAYC,MAAO,kFAAyExG,SAAU,OAAQyG,aAAc,kBACtI,CAAEF,QAAQ,WAAYC,MAAO,8FAAqFxG,SAAU,OAAQyG,aAAc,kBAClJ,CAAEF,QAAQ,aAAcC,MAAO,qIAA4HxG,SAAU,OAAQyG,aAAc,qBAzB7K,qBAsBXC,GAtBW,MA6BZlL,IA7BY,MA6BC,kBAAM2K,IAAc,KAIjCtK,GAAmBC,MAAaC,MAAM,CAC1CC,MAAMF,MACLG,SAAS,qBACVuB,QAAQ1B,MACPG,SAAS,yBAsBN0K,GAAU,uCAAG,WAAOxK,GAAP,uBAAA1D,EAAA,6DACTmO,EAAU,CACd5K,MAAOG,EAAOH,MACd0I,MAAO,EACPlH,QAASrB,EAAOqB,QAChBnB,OAASZ,KAAKC,MAAMC,aAAaC,QAAQ,SAASU,GAClDxB,SAAUqB,EAAOrB,SACjB+L,KAAMrD,KAASsD,OAAO,mBAAmBC,YAP5B,kBAUYrO,MAAM,QAAS,CACtC6D,OAAQ,OACRC,QAAS,CACL,eAAe,oBAEnBC,KAAMhB,KAAKiB,UAAUkK,KAfV,cAULjO,EAVK,gBAiBMA,EAASC,OAjBf,QAiBP+D,EAjBO,QAkBLqK,MACNlO,QAAQC,IAAI4D,EAAKqK,MACXC,EAFK,YAEcvB,GACnBwB,EAAU,CACdC,MAAOzB,EAAMhH,OACb0I,aAAc9G,EAAKhE,GACnB+K,mBAAoB/G,EAAKG,SACzB6G,kBAAmBhH,EAAKI,QACxB6G,QAAS5K,EAAKqK,KAAK1K,GACnBkL,aAAc7K,EAAKqK,KAAKxJ,QACxBiK,WAAY,GACZC,eAAgB,GAChBC,YAAa,GACbC,WAAYjL,EAAKqK,KAAKhL,MACtB6L,UAAWlL,EAAKqK,KAAKH,KACrBiB,cAAe,IAEjBb,EAAajO,KAAKkO,GAClBpO,QAAQC,IAAIkO,GACZtB,EAAS,YAAIsB,IACb5L,GAAc,GACdE,GAAW,eACXJ,IAAa,GACb0B,YAAW,WACT1B,IAAa,GACbK,OACA,OAEFH,GAAc,GACdE,GAAWoB,EAAKG,OAChB3B,IAAa,IAhDF,kDAoDXrC,QAAQgE,MAAR,MApDW,0DAAH,sDA4EViL,GAAW,uCAAG,WAAOC,EAAQb,GAAf,qBAAA1O,EAAA,6DACZwP,EAASvC,EACTwC,EAAgB,CACpBC,KAAM3E,KAAS4E,QAAQ,QAAQC,UAAUtB,WACzCvJ,QAASoI,EACT0C,UAAU7M,KAAKC,MAAMC,aAAaC,QAAQ,SAAS6E,SACnD8H,kBAAkB9M,KAAKC,MAAMC,aAAaC,QAAQ,SAAS8E,SAE7D5H,QAAQC,IAAIkP,EAAOd,GAAOW,eAC1BG,EAAOd,GAAOW,cAAc9O,KAAKkP,GACjCpP,QAAQC,IAAIkP,EAAOd,GAAOW,eAC1BnC,EAAS,YAAIsC,IAEPtD,EAAU,CACdwD,KAAM3E,KAAS4E,QAAQ,QAAQC,UAAUtB,WACzCvJ,QAASoI,EACToC,SACA3L,OAAQZ,KAAKC,MAAMC,aAAaC,QAAQ,SAASU,IAjBjC,mBAoBO5D,MAAM,WAAY,CACzC6D,OAAQ,OACRC,QAAS,CACL,eAAe,oBAEnBC,KAAMhB,KAAKiB,UAAUiI,KAzBL,eAoBVhM,EApBU,iBA2BCA,EAASC,OA3BV,eA4BV+L,SAGN7L,QAAQC,IAAI,SA/BI,kDAkChBD,QAAQgE,MAAR,MAlCgB,0DAAH,wDAsCX0L,GAAO,uCAAG,WAAOlM,EAAG6K,EAAOsB,GAAjB,iBAAAhQ,EAAA,sEAENwP,EAASvC,EAEX+C,GAMF3P,QAAQC,IAAI,UACZkP,EAAOd,GAAOQ,YAAeM,EAAOd,GAAOQ,YAAYe,QAAO,SAAAC,GAAI,OAAIA,IAASrI,EAAKG,YAEpFwH,EAAOd,GAAOwB,MAAO,EACrBhD,EAAS,YAAIsC,IACbW,GAAM,IAVNX,EAAOd,GAAOQ,YAAY3O,KAAKsH,EAAKG,UACpCwH,EAAOd,GAAOwB,MAAO,EACrBhD,EAAS,YAAIsC,IACbW,GAAM,GARI,SAiBNlQ,MAAM,aAAc,CACxB6D,OAAQ,OACRC,QAAS,CACL,eAAe,oBAEnBC,KAAMhB,KAAKiB,UAAU,CAAEkM,MAAKZ,OAAO1L,EAAID,OAAOiE,EAAKhE,OAtBzC,uDAyBZxD,QAAQC,IAAR,MAzBY,yDAAH,0DA8BP8P,GAAQ,uCAAG,gCAAApQ,EAAA,6DACTqQ,EAAW,GACb3B,EAAQ,EAFG,SAGGzO,MAAM,SAHT,cAGTqQ,EAHS,gBAIIA,EAAInQ,OAJR,cAKVgI,SAAQ,SAACoI,IACT1I,EAAK2I,WAAWC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,cAAgBJ,EAAK5B,iBAAiB9G,EAAKhE,KAAO0M,EAAK5B,cAA4C,cAA5B4B,EAAK3B,qBACvH2B,EAAKtD,MAAM9E,SAAQ,SAACoG,GAClB,IAAMW,EAAc,GACpBX,EAAKS,WAAW7G,SAAQ,SAAA+H,GAAI,OAAIhB,EAAY3O,KAAK2P,EAAKU,kBACtD,IAAMZ,EAASa,QAAQtC,EAAKS,WAAWyB,MAAK,SAAAK,GAAS,OAAIC,OAAOD,EAAUE,eAAiBD,OAAOlJ,EAAKhE,QACjG4K,EAAU,CACdC,QACAC,aAAc4B,EAAK5B,aACnBC,mBAAoB2B,EAAK3B,mBACzBC,kBAAmB0B,EAAK1B,kBACxBC,QAASP,EAAKO,QACdC,aAAcR,EAAKQ,aACnBC,WAAYT,EAAKS,WAAW/I,OAC5BgJ,eAAgBV,EAAKS,WAAW/I,OAChCiJ,cACAC,WAAYZ,EAAKY,WACjBC,UAAWb,EAAKa,UAChBc,KAAKF,EACLX,cAAed,EAAKc,eAEtBX,IACA2B,EAAS9P,KAAKkO,SAKpBpO,QAAQC,IAAI+P,GACZnD,EAASmD,GAjCM,4CAAH,qDAoCVY,GAAU,uCAAG,kCAAAjR,EAAA,sEACCC,MAAM,UADP,cACXqQ,EADW,gBAESA,EAAInQ,OAFb,gBAETiH,EAFS,EAETA,QACF8J,EAAW,GACjB9J,EAAQe,SAAQ,SAAAhE,IACXA,EAAMgN,KAAKC,UAAUX,MAAK,SAAAY,GAAQ,OAAIN,OAAOM,EAASC,eAAiBP,OAAOlJ,EAAKhE,QAAQkN,OAAO5M,EAAMgN,KAAKtN,MAAQkN,OAAOlJ,EAAKhE,KAA+B,cAAxBM,EAAMgN,KAAKnJ,YAC/IkJ,EAAST,MAAK,SAAA5I,GAAI,OAAIA,EAAKG,WAAa7D,EAAMgN,KAAKnJ,aACtDkJ,EAAS3Q,KAAK4D,EAAMgN,UAK1B3D,GAAgB0D,GAZC,4CAAH,qDAgBVK,GAAkB,uCAAG,kCAAAvR,EAAA,+EAELC,MAAM,SAFD,cAEjBqQ,EAFiB,gBAGCA,EAAInQ,OAHL,gBAGfqR,EAHe,EAGfA,MAEFC,EAAgB,GAEtBD,EAAMrJ,SAAQ,SAAAuJ,GACPA,EAAeN,UAAUX,MAAK,SAAAY,GAAQ,OAAIN,OAAOM,EAASC,eAAiBP,OAAOlJ,EAAKhE,QAAUkN,OAAOW,EAAe7N,MAAQkN,OAAOlJ,EAAKhE,KAAqC,cAA5B6N,EAAe1J,UACtKyJ,EAAclR,KAAKmR,MAKvBnE,EAAmBkE,GAdI,kDAiBvBpR,QAAQgE,MAAR,MAjBuB,0DAAH,qDAqBlBsN,GAAS,uCAAG,WAAO9N,GAAP,iBAAA7D,EAAA,sEAEUC,MAAM,eAAgB,CACxC6D,OAAQ,OACRC,QAAS,CACL,eAAe,oBAEnBC,KAAMhB,KAAKiB,UAAU,CAAC2N,oBAAqB/J,EAAKhE,GAAKgO,oBAAqBhO,MAPlE,cAEFyM,EAFE,gBASSA,EAAInQ,OATb,cAUFC,UACE0R,EAAsBxE,EAAgB2C,QAAO,SAAApI,GAAI,OAAIA,EAAKhE,KAAOA,KACvE0J,EAAmB,YAAIuE,IACvBjK,EAAK2I,WAAWjQ,KAAK,CAACqD,OAAOmN,OAAOlJ,EAAKhE,IAAK8M,YAAaI,OAAOlN,KAClEX,aAAa6O,QAAQ,OAAQ/O,KAAKiB,UAAU4D,KAdtC,2CAAH,sDAwCb,OAjBArH,qBAAU,WACLqH,EAAKmK,SACNpE,IAAc,GACd/F,EAAKmK,SAAU,EACf9O,aAAa6O,QAAQ,OAAO/O,KAAKiB,UAAU4D,KAG3C+F,IAAc,GAGhBwC,KACAa,KACAM,OAEC,IAID,qCACC5D,GACD,qCACA,cAAC,EAAD,CAAcxE,aAAcA,GAAcC,gBAAiBA,KAC3D,cAAC,SAAD,CAAO6I,QAAS9I,GAAc8E,MAAOA,GAAOJ,YAAaA,GAAaqE,OA1B3D,WACb9I,IAAgB,GAChBwE,IAAc,SA0BT,KACJ,cAACtG,EAAA,EAAD,CAAgB6K,aAAW,EAA3B,SACA,eAACC,GAAA,EAAD,CAAMC,WAAS,EAAf,UACA,cAACD,GAAA,EAAD,CAAM7B,MAAI,EAAC7P,UAAW0B,EAAQ+B,MAAOmO,GAAI,EAAGC,GAAI,EAAhD,SAC0B,IAAxBtL,GAAahB,QAAkB,cAAC,EAAD,CAAOgB,aAAcA,OAGjDgG,EAASA,EAAMuF,MAAM,GAAGC,UAAU7K,KAAI,SAAA2G,GAAI,OACzC,cAAC6D,GAAA,EAAD,CAAM7B,MAAI,EAAC+B,GAAI,GAAIC,GAAI,GAAI7R,UAAW0B,EAAQnB,KAA9C,SACA,eAACyR,GAAA,EAAD,CAAMhS,UAAW0B,EAAQuQ,KAAzB,UACC,cAACC,GAAA,EAAD,CACEC,OAAS,eAAC/K,EAAA,EAAD,WAAQ,cAAC,IAAD,CAAOgB,UAAU,cAAcC,SAAUwF,EAAKM,kBAAmBvN,MAAM,KAAKC,OAAO,KAAKyH,KAAK,UAArG,OACTnC,OAAS,eAACC,EAAA,EAAD,eAAa,cAAC,KAAD,IAAb,OACTmC,MAAO,cAAC,IAAD,CAAM6J,GAAE,mBAAcvE,EAAKI,cAA3B,SAA2C,sBAAMjO,UAAW0B,EAAQ6J,MAAzB,SAAiCsC,EAAKK,yBAG1F,cAACmE,GAAA,EAAD,CAAWrS,UAAW0B,EAAQX,MAAOuR,MAAOzE,EAAKY,aAEjD,eAAC8D,GAAA,EAAD,CAAaC,gBAAc,EAA3B,UACE,eAACpM,EAAA,EAAD,CAAYpG,UAAW0B,EAAQoK,WAAYzF,QAAS,kBAAMgJ,GAAQxB,EAAKO,QAASP,EAAKG,MAAOH,EAAK2B,OAAjG,UAAyG3B,EAAK2B,KAAO,cAAC,KAAD,CAActP,MAAO,CAACC,KAAM,SAAY,cAAC,KAAD,IAA7J,OACA,eAACiG,EAAA,EAAD,eAAa,cAAC,KAAD,IAAb,OACA,eAACA,EAAA,EAAD,eAAc,cAAC,KAAD,CAAWC,QAAS,kBAAM8C,GAAkB,MAA1D,OACA,cAACsJ,GAAD,CAAYvJ,eAAgBA,EAAgBC,kBAAmBA,OAGjE,eAACuJ,GAAA,EAAD,WACA,eAACC,GAAA,EAAD,CAAY3S,UAAW0B,EAAQ6J,MAA/B,UAC6B,IAA5BsC,EAAKW,YAAYjJ,QAAgB,sCACL,IAA5BsI,EAAKW,YAAYjJ,QAAjB,mBAA6CsI,EAAKW,YAAY,KAAOrH,EAAKG,SAAW,MAAQuG,EAAKW,YAAY,IAClF,IAA5BX,EAAKW,YAAYjJ,QAAjB,mBAA6CsI,EAAKW,YAAY,KAAOrH,EAAKG,SAAW,MAAQuG,EAAKW,YAAY,GAA9G,aAAsHX,EAAKW,YAAY,KAAOrH,EAAKG,SAAW,MAAQuG,EAAKW,YAAY,IACvLX,EAAKW,YAAYjJ,OAAS,GAA1B,mBAA2CsI,EAAKW,YAAY,KAAOrH,EAAKG,SAAW,MAAQuG,EAAKW,YAAY,GAA5G,aAAoHX,EAAKW,YAAY,KAAOrH,EAAKG,SAAW,MAAQuG,EAAKW,YAAY,GAArL,gBAAgMX,EAAKW,YAAYjJ,OAAS,EAA1N,cAED,eAACoN,GAAA,EAAD,CAAY3S,UAAW0B,EAAQ6J,MAA/B,UAAsC,eAAC,IAAD,CAAM6G,GAAE,mBAAcvE,EAAKI,cAAgB/N,MAAO,CAAC0F,MAAM,SAAzD,cAAqEiI,EAAKK,mBAA1E,OAAtC,IAA4I,uBAAMlO,UAAU,eAAhB,cAAiC6N,EAAKQ,aAAtC,UAC5I,cAACuE,GAAA,EAAD,CAAS5S,UAAW0B,EAAQmK,UAC3BgC,EAAKc,cAAczH,KAAI,SAAAsE,GAAO,OAC7B,eAACmH,GAAA,EAAD,CAAa3S,UAAW0B,EAAQ8J,QAAhC,UACA,eAACpE,EAAA,EAAD,WAAQ,cAAC,IAAD,CAAOgB,UAAU,cAAcC,SAAUmD,EAAQ4D,kBAAmBxO,MAAM,OAAlF,OACA,eAAC,IAAD,CAAMwR,GAAE,mBAAc5G,EAAQqH,cAAgB3S,MAAO,CAAC0F,MAAM,SAA5D,cAAuE,uBAAM5F,UAAU,WAAhB,UAA4BwL,EAAQ2D,UAApC,OAAvE,OACA,sBAAMnP,UAAU,eAAhB,SAAgCwL,EAAQnH,gBAG1C,qBAAKrE,UAAU,YAAf,SAA4B6N,EAAKa,YACjC,cAACkE,GAAA,EAAD,CAAS5S,UAAW0B,EAAQmK,UAC5B,cAACiH,GAAA,EAAD,CAAW9S,UAAW0B,EAAQgK,oBAAqB7F,QAAQ,WAAWZ,KAAK,OAAO8N,MAAM,mBACxF5N,SAAW,SAAAC,GAAC,OAAIsH,EAAgBtH,EAAEC,OAAO2N,QACzCC,WAAY,CACVC,eACE,cAACC,GAAA,EAAD,CAAgBtM,SAAS,QAAzB,SACE,eAACT,EAAA,EAAD,eAAa,cAAC,KAAD,SAGjBgN,aACE,cAACD,GAAA,EAAD,CAAgBtM,SAAS,MAAzB,SACE,cAACnB,EAAA,EAAD,CAAQW,QAAS,kBAAMuI,GAAYf,EAAKO,QAASP,EAAKG,QAAQpI,MAAM,UAApE,kCAOJ,cAAC,EAAD,IACJ,cAACyN,GAAA,EAAD,CAAQC,QAAM,EAAd,SACD,eAAC5B,GAAA,EAAD,CAAM7B,MAAI,EAAC7P,UAAW0B,EAAQsK,WAAY6F,GAAI,EAA9C,UACA,sBAAK1O,GAAG,UAAR,cAAmB,oBAAInD,UAAU,0BAAd,iCAAnB,OAEC4M,GAAmBA,EAAgB1F,KAAI,SAAAC,GAAI,OAC3C,8BACA,cAAC+K,GAAA,EAAD,CACIC,OAAS,eAAC/K,EAAA,EAAD,WAAQ,cAAC,IAAD,CAAOgB,UAAU,cAAcC,SAAUlB,EAAKI,QAAS3G,MAAM,KAAKC,OAAO,KAAKyH,KAAK,UAA3F,OACTnC,OAAS,eAACC,EAAA,EAAD,CAAYlG,MAAO,CAACoB,YAAY,QAAS+E,QAAS,kBAAM4K,GAAU9J,EAAKhE,KAAvE,cAA6E,oBAAInD,UAAU,wBAAd,oBAA7E,OACTuI,MAAO,cAAC,IAAD,CAAM6J,GAAE,mBAAcjL,EAAKhE,IAA3B,SAAiC,sBAAMnD,UAAW0B,EAAQ6J,MAAzB,SAAiCpE,EAAKG,aAC9EiM,UAAU,mBACVrT,MAAO,CAACU,MAAM,oBAQpB,cAAC4S,GAAA,EAAD,CAAKrQ,GAAG,UAAUyC,MAAM,UAAW5F,UAAW0B,EAAQsJ,IAAK3E,QAAS,kBArXhD2G,IAAc,IAqXqDzE,MAAM,eAA7F,SACE,cAAC,KAAD,MAMD,eAAC3E,EAAA,EAAD,CAAOC,KAAK,KAAKC,UAAQ,EAACC,KAAMgJ,GAAY/I,OAAQ3B,GAAYnC,MAAO,CAACY,OAAO,iBAAmB2S,UAAU,MAAOtH,UAAU,QAA7H,UACU,eAACvI,EAAA,EAAMK,OAAP,CAAcjE,UAAW0B,EAAQR,YAAjC,cAA+C,cAAC0C,EAAA,EAAMM,MAAP,CAAahE,MAAO,CAACiB,WAAW,OAAhC,4BAA/C,OACA,cAACyC,EAAA,EAAMO,KAAP,UACA,cAAC,IAAD,CACEC,cAAe,CAACvB,MAAM,GAAGwB,QAAQ,IACjC3B,iBAAkBA,GAClB4B,SArXE,SAACtB,GAElB,GADAA,EAAOrB,SAAWA,GACS,kBAAjBqB,EAAOH,MAAqB,CACtC,IAAM0B,EAAS,IAAIC,WACnBD,EAAOE,cAAczB,EAAOH,OAC5B0B,EAAOG,UAAY,WACjB7C,EAAiB0C,EAAOI,QACxB3B,EAAOH,MAAQ0B,EAAOI,OACtB6I,GAAWxK,SAGXwK,GAAWxK,IAuWA,SAII,gBAAG4B,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,cAApB,OACC,eAAC,IAAD,CAAM5E,MAAO,CAAC6E,UAAU,UAAxB,UACA,cAACC,EAAA,EAAD,CAAO7B,GAAG,OAAOnD,UAAU,YAAYiF,KAAK,OAAOC,KAAK,QAAQC,SAAU,SAACC,GAAD,OA/SpE,SAACA,EAAEN,GACzB,IAAMP,EAAS,IAAIC,WACnBM,EAAc,QAASM,EAAEC,OAAOC,MAAM,IACT,IAA1BF,EAAEC,OAAOC,MAAMC,QAChBzD,IAAa,GACbF,GAAY,IACZC,EAAiB,MAGjB0C,EAAOE,cAAcW,EAAEC,OAAOC,MAAM,IACpCf,EAAOG,UAAY,WACjB7C,EAAiB0C,EAAOI,SAE1B7C,IAAa,GACbF,GAAYwD,EAAEC,OAAOC,MAAM,GAAGJ,OAiSiEM,CAAkBJ,EAAEN,IAAiBW,QAAM,IAC9H,eAACC,EAAA,EAAD,CAAQ1F,UAAW0B,EAAQiE,WAAYC,MAAM,UAAWC,QAAQ,WAAhE,UAA2E,cAAC,IAAD,CAAW7F,UAAW0B,EAAQN,YAAY,wBAAO0E,QAAQ,OAAf,UAAuBnE,GAAQ,UAAMA,GAAN,aAA4B,gBAA3D,UAClHiD,EAAO/B,OAASgC,EAAQhC,MAAS,qBAAK7C,UAAU,QAAf,SAAwB4E,EAAO/B,QAAgB,KAChF8J,EACC,eAACqF,GAAA,EAAD,CAAMhS,UAAW0B,EAAQf,YAAzB,UACE,cAACuR,GAAA,EAAD,CAAYC,OAAS,eAAC/K,EAAA,EAAD,WAAQ,cAAC,IAAD,CAAOgB,UAAU,cAAcC,SAAUlB,EAAKI,QAAS3G,MAAM,KAAK0H,KAAK,UAA/E,OAAqGnC,OAAS,eAACC,EAAA,EAAD,eAAa,cAAC,KAAD,IAAb,OAA8CmC,MAAO,sBAAMvI,UAAW0B,EAAQ6J,MAAzB,SAAiCpE,EAAKG,aAC9N,cAAC+K,GAAA,EAAD,CAAWrS,UAAW0B,EAAQT,aAAcqR,MAAO3F,IACnD,eAAC4F,GAAA,EAAD,CAAaC,gBAAc,EAA3B,UACE,eAACpM,EAAA,EAAD,CAAYpG,UAAW0B,EAAQoK,WAA/B,cAA4C,cAAC,KAAD,CAAc5L,MAAO,CAACC,KAAM,SAAxE,OACA,eAACiG,EAAA,EAAD,eAAa,cAAC,KAAD,IAAb,OACA,eAACA,EAAA,EAAD,eAAc,cAAC,KAAD,IAAd,aAGJ,KACA,cAAC0M,GAAA,EAAD,CAAYY,WAAS,EAACC,KAAM,EAAG9N,QAAQ,WAAW/E,OAAO,SAAS8S,WAAS,EAACb,MAAM,kBAAkB7N,KAAK,UAAUC,SAAU,SAAC0O,GAAD,OAAW/O,EAAc,UAAW+O,EAAMxO,OAAO2N,UAC7KpO,EAAOP,SAAWQ,EAAQR,QAAW,qBAAKrE,UAAU,QAAf,SAAwB4E,EAAOP,UAAkB,KAEvF,cAAC0B,EAAA,EAAD,CAAUC,GAAIjE,GAAd,SACI,cAACkE,EAAA,EAAD,CACA/F,MAAO,CAACY,OAAO,QACfoF,SAAUjE,EAAa,QAAS,UAChCkE,OAAS,eAACC,EAAA,EAAD,CAAYR,MAAM,UAAU/B,KAAK,QAAQwC,QAAS,kBAAMrE,IAAa,IAArE,cAA+E,cAAC,IAAD,CAAW/B,SAAS,YAAnG,OAHT,SAICkC,OAGL,cAACuD,EAAA,EAAD,CAASG,QAAQ,WAAWD,MAAM,UAAUX,KAAK,SAAjD,wC,mBCtkBlB7E,I,OAAYC,aAAW,SAACC,GAAD,MAAY,CACvCwT,MAAO,CACLhT,OAAO,OACPuG,OAAQ,sBACRuE,QAAStL,EAAMgL,QAAQ,GACvBF,gBAAiB,SAEnBS,QAAS,CACPkI,WAAW,cAIA,SAASC,GAAT,GAA4D,IAApClD,EAAmC,EAAnCA,MAAOmD,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACtDzS,EAAUtB,KAChB,OACE,8BACC0Q,EAAMA,OACgB,IAAvBA,EAAMA,MAAMvL,OACR,cAAC6O,GAAA,EAAD,CAASF,KAAMA,EAAMD,SAAUA,EAAU/T,MAAO,CAACU,MAAM,SAAvD,SACA,qBAAKZ,UAAW0B,EAAQoS,MAAxB,SAAgChD,EAAMA,OAASA,EAAMA,MAAM5J,KAAI,SAAAC,GAAI,OAChE,cAAC,IAAD,CAAMiL,GAAE,mBAAcjL,EAAKhE,IAAMjD,MAAO,CAACmU,eAAe,QAAShO,QAAS,kBAAM8N,EAAS,KAAzF,SACC,sBAAKnU,UAAU,UAAf,UACI,oCAAO,cAAC,IAAD,CAAOA,UAAU,YAAYoI,UAAU,cAAcC,SAAUlB,EAAKI,QAAS3G,MAAM,KAAKC,OAAO,KAAKyH,KAAK,UAAhH,QACA,qBAAKtI,UAAU,WAAf,SAA2BmH,EAAKG,uBAQpC,O,mCC/BNlH,GAAYC,aAAW,SAACC,GAAD,YAAY,CACrCgU,QAAM,GACJ9T,QAAS,QADL,eAEHF,EAAMiU,YAAYC,GAAG,MAAQ,CAC5BhU,QAAS,SAHP,0BAKM,YALN,8BAMUF,EAAMsC,MAAMuI,cANtB,iCAOa,cAPb,eAQJ,UAAW,CACTC,gBAAiB,cATf,6BAWS9K,EAAMgL,QAAQ,IAXvB,4BAYQ,KAZR,uBAaG,QAbH,eAcHhL,EAAMiU,YAAYC,GAAG,MAAQ,CAC5B/J,WAAYnK,EAAMgL,QAAQ,GAC1B1K,MAAO,SAhBL,GAmBN6T,WAAY,CACV7I,QAAStL,EAAMgL,QAAQ,EAAG,GAC1BzK,OAAQ,OACRgG,SAAU,WACV6N,cAAe,OACflU,QAAS,OACTiL,WAAY,SACZhL,eAAgB,UAElBkU,UAAW,CACT/O,MAAO,WAETgP,WAAW,cACThJ,QAAStL,EAAMgL,QAAQ,EAAG,EAAG,EAAG,GAEhCuJ,YAAY,cAAD,OAAgBvU,EAAMgL,QAAQ,GAA9B,OACXZ,WAAYpK,EAAMqK,YAAYC,OAAO,SACrChK,MAAO,QACNN,EAAMiU,YAAYC,GAAG,MAAQ,CAC5B5T,MAAO,aA0DAkU,OAnDf,WAAmB,IAAD,EAEwB5V,mBAAS,IAFjC,mBAEP6V,EAFO,KAEMC,EAFN,OAGY9V,mBAAS,IAHrB,mBAGP4R,EAHO,KAGAqD,EAHA,OAIkBjV,mBAAS,MAJ3B,mBAIP+U,EAJO,KAIGgB,EAJH,KAKRvT,EAAUtB,KACV8T,EAAO/D,QAAQ8D,GAcfiB,EAAS,uCAAG,8BAAA5V,EAAA,sEACIC,MAAM,eAAD,OAAgBwV,IADzB,cACRnF,EADQ,gBAEKA,EAAInQ,OAFT,OAER+D,EAFQ,OAGd2Q,EAAS3Q,GAHK,2CAAH,qDAUf,OAJA1D,qBAAU,WACPoV,MACA,CAACH,IAGA,mCACG,sBAAK/U,UAAW0B,EAAQ4S,OAAxB,UACC,qBAAKtU,UAAW0B,EAAQ+S,WAAxB,SACE,cAAC,KAAD,MAEF,cAACU,GAAA,EAAD,CACEhQ,SAAU,SAAAC,GAAC,OA7BA,SAACA,GAClB4P,EAAe5P,EAAEC,OAAO2N,YACLoC,IAAhBtE,EAAMA,OACLnR,QAAQC,IAAI,OACZqV,EAAY,OACiB,IAAvBnE,EAAMA,MAAMvL,OAClB0P,EAAY,MAEZA,EAAY7P,EAAEiQ,eAqBGC,CAAalQ,IAC5BmQ,YAAY,eACZ7T,QAAS,CACPnB,KAAMmB,EAAQiT,UACda,MAAO9T,EAAQkT,cAIjB,cAAC,GAAD,CAAO9D,MAAOA,EAAOoD,KAAMA,EAAMD,SAAUA,EAAUE,SAAUA,U,kHCnFvE/T,GAAYC,aAAW,SAACC,GAAD,cAAY,CACvCmV,KAAM,CACJC,SAAU,EACVrU,aAAa,QAEfsU,OAAQ,CACJvK,gBAAgB,QAChBxF,MAAM,SAEV2C,OAAK,GACH/H,QAAS,QADN,eAEFF,EAAMiU,YAAYC,GAAG,MAAQ,CAC5BhU,QAAS,SAHR,6BAKS,OALT,GAOL8T,QAAM,GACJ9T,QAAS,QADL,eAEHF,EAAMiU,YAAYC,GAAG,MAAQ,CAC5BhU,QAAS,SAHP,0BAKM,YALN,8BAMUF,EAAMsC,MAAMuI,cANtB,iCAOa,cAPb,eAQJ,UAAW,CACTC,gBAAiB,cATf,6BAWS9K,EAAMgL,QAAQ,IAXvB,4BAYQ,KAZR,uBAaG,QAbH,eAcHhL,EAAMiU,YAAYC,GAAG,MAAQ,CAC5B/J,WAAYnK,EAAMgL,QAAQ,GAC1B1K,MAAO,SAhBL,GAmBN6T,WAAY,CACV7I,QAAStL,EAAMgL,QAAQ,EAAG,GAC1BzK,OAAQ,OACRgG,SAAU,WACV6N,cAAe,OACflU,QAAS,OACTiL,WAAY,SACZhL,eAAgB,UAElBkU,UAAW,CACT/O,MAAO,WAETgP,WAAW,cACThJ,QAAStL,EAAMgL,QAAQ,EAAG,EAAG,EAAG,GAEhCuJ,YAAY,cAAD,OAAgBvU,EAAMgL,QAAQ,GAA9B,OACXZ,WAAYpK,EAAMqK,YAAYC,OAAO,SACrChK,MAAO,QACNN,EAAMiU,YAAYC,GAAG,MAAQ,CAC5B5T,MAAO,SAGXgV,eAAe,cACbpV,QAAS,QACRF,EAAMiU,YAAYC,GAAG,MAAQ,CAC5BhU,QAAS,aA6DAyD,GAvDA,WACb,IAAMkD,EAAO7E,KAAKC,MAAMC,aAAaC,QAAQ,SACvCf,EAAUtB,KAEhB,OACE,cAACsR,GAAA,EAAD,CAAMC,WAAS,EAAf,SACA,qBAAK3R,UAAW0B,EAAQ+T,KAAxB,SAEE,cAACI,GAAA,EAAD,CAAQ7V,UAAW0B,EAAQiU,OAAQ9O,SAAS,QAA5C,SACA,qBAAK7G,UAAU,YAAf,SACE,eAAC8V,GAAA,EAAD,CAAS5V,MAAO,CAAC6T,WAAW,SAA5B,UACE,cAAC,IAAD,CAAM3B,GAAG,IAAIlS,MAAO,CAAEmU,eAAgB,OAAQ/S,YAAY,OAA1D,SACE,cAACqR,GAAA,EAAD,CAAY3S,UAAW0B,EAAQ6G,MAAO1C,QAAQ,KAAKkQ,QAAM,EAAzD,SACA,qBAAK7V,MAAO,CAACW,OAAO,OAAQD,MAAM,SAAUoV,IAAI,kCAAkCC,IAAI,aAGtF,cAAC,GAAD,IAEF,qBAAKjW,UAAW0B,EAAQ+T,OACtB,sBAAKzV,UAAW0B,EAAQkU,eAAxB,UACE,cAAC,IAAD,CAAMxD,GAAG,IAAIlS,MAAO,CAAEmU,eAAgB,OAAQzO,MAAM,QAASlF,UAAU,OAAvE,SACA,cAAC0F,EAAA,EAAD,CAAYR,MAAM,UAAlB,SACA,cAAC,KAAD,CAAU3F,SAAS,eAGnB,cAAC,IAAD,CAAMmS,GAAE,UAAalS,MAAO,CAAEmU,eAAgB,OAAQzO,MAAM,QAASlF,UAAU,OAA/E,SACE,cAAC0F,EAAA,EAAD,CAAYR,MAAM,UAAlB,SACE,cAACsQ,GAAA,EAAD,CAAOC,aAAc,EAAGvQ,MAAM,YAA9B,SACE,cAAC,KAAD,CAAY3F,SAAS,iBAIzB,cAACmG,EAAA,EAAD,CAAaR,MAAM,UAAnB,SACE,cAACsQ,GAAA,EAAD,CAAOC,aAAc,GAAIvQ,MAAM,YAA/B,SACE,cAAC,KAAD,CAAmB3F,SAAS,eAGhC,cAAC,IAAD,CAAMmS,GAAE,mBAAcjL,EAAKhE,IAA3B,SACA,cAACiD,EAAA,EAAD,CAAYR,MAAM,UAAlB,SACA,eAACwB,EAAA,EAAD,eAAS,cAAC,IAAD,CAAOgB,UAAU,cAAcC,SAAUlB,EAAKI,QAAS3G,MAAM,KAAKC,OAAO,KAAKyH,KAAK,UAA5F,YAGA,cAAC,IAAD,CAAM8J,GAAG,UAAUlS,MAAO,CAAEmU,eAAgB,OAAQzO,MAAM,QAASlF,UAAU,OAA7E,SACA,cAAC0F,EAAA,EAAD,CAAYR,MAAM,UAAlB,SACI,cAAC,KAAD,CAAe3F,SAAS,8BCzG7BmW,OAjBf,YAAgC,IAAdhX,EAAa,EAAbA,UACRJ,EAAUC,cAEVoX,EAAM,uCAAG,sBAAA/W,EAAA,6DACXF,GAAU,GACVoD,aAAa8T,WAAW,QAFb,SAGL/W,MAAM,gBAHD,OAIXP,EAAQa,KAAK,WAJF,2CAAH,qDAWZ,OAJAC,qBAAU,WACNuW,MACD,IAEI,M,UCjBI,I,OAAA,IAA0B,mCCA1B,OAA0B,oCCA1B,OAA0B,oCCA1B,OAA0B,oC,wCCanCjW,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJgW,SAAU,IACVzV,OAAO,OACP8K,QAAQ,QAEV4K,MAAO,CACH5V,MAAON,EAAMgL,QAAQ,IACrBzK,OAAQP,EAAMgL,QAAQ,IACtBxK,OAAO,YAqIA2V,GAjIM,SAAC,GAAqB,IAApBzJ,EAAmB,EAAnBA,cACjBtL,EAAUtB,KAD0B,EAENlB,mBAAS,GAFH,mBAEnCwX,EAFmC,KAEvBC,EAFuB,OAGlBzX,qBAHkB,mBAGnCiI,EAHmC,KAG7ByP,EAH6B,KAYpCC,EAAa,WACfF,GAAc,SAACG,GAAD,OAAUA,EAAO,MAG7BC,EAAa,WACfJ,GAAc,SAACG,GAAD,OAAUA,EAAO,MAgB7BE,EAAU,kBACZ,cAACtR,EAAA,EAAD,CAAQ1F,UAAU,MAAM6F,QAAQ,YAAaQ,QAAS0Q,EAAtD,mBAKEE,EAAS,uCAAG,8BAAA3X,EAAA,sEACSC,MAAM,cAAD,OAAe+C,KAAKiB,UAAU2T,EAAOlU,OAAOmU,SAD1D,cACR3X,EADQ,gBAEKA,EAASC,OAFd,QAER+D,EAFQ,QAGN9D,SAASkX,EAAQpT,EAAK2D,MAHhB,2CAAH,qDAMTiQ,EAAS,uCAAG,WAAOpU,GAAP,eAAA1D,EAAA,sEACSC,MAAM,UAAD,OAAW+C,KAAKiB,UAAUP,EAAOmU,SAD/C,cACR3X,EADQ,gBAEKA,EAASC,OAFd,cAGNC,QAASC,QAAQC,IAAI,cACxBD,QAAQC,IAAI,uBAJH,2CAAH,sDAOTsX,EAASG,YAAU,CACrBC,oBAAmB,EACnBlT,cAAc,CAAE+S,MAAM,IACtBzU,iBAAiBC,IAAW,CACxBwU,MAAMxU,MACLG,SAAS,0BACTqU,MAAM,+BAEX7S,SAAU,SAACtB,EAAD,GAAwB,EAAfuU,UAEfH,EAAUpU,MAOd,OACI,qCACI,cAACwU,GAAA,EAAD,CAASd,WAAYA,EAArB,SAnEE,CAAC,mBAAoB,iBAAkB,iBAAiB,QAoEnDxP,KAAI,SAAAuQ,GAAI,OACX,eAACC,GAAA,EAAD,eAAkB,cAACC,GAAA,EAAD,UAAYF,MAAnBA,QAKf,uBAAMzX,UAAU,gCAAgCsE,SAAU4S,EAAOU,aAAjE,UACqB,IAAflB,EACE,sBAAK1W,UAAU,aAAf,UACA,cAAC8S,GAAA,EAAD,yBAAW5S,MAAO,CAACU,MAAM,QAASsE,KAAK,QAAQ6N,MAAM,mBAAmBlN,QAAQ,YAAeqR,EAAOW,cAAc,UA1EpH,SAACX,EAAOlU,GAAR,MAAoB,CACpCW,SAAOuT,EAAOtS,OAAO5B,KAAWkU,EAAOrS,QAAQ7B,IAC/C8U,WAAYZ,EAAOtS,OAAO5B,IAAWkU,EAAOrS,QAAQ7B,GAAUkU,EAAOtS,OAAO5B,GAAQ,MAwE8D+U,CAAYb,EAAO,WACpJA,EAAOlU,OAAOmU,QAAUD,EAAOtS,OAAOuS,MA1DvD,cAACzR,EAAA,EAAD,CAAQ1F,UAAU,MAAM6F,QAAQ,YAAYD,MAAM,UAAUS,QAAS,WACjEwQ,IACmB,IAAfH,GACAO,KAHR,kBA4DiB,QAEJ,KAEgB,IAAfP,GAAoBvP,EAClB,sBAAKjH,MAAO,CAAC6E,UAAU,UAAvB,UACD,eAACiN,GAAA,EAAD,CAAMhS,UAAW0B,EAAQnB,KAAzB,UACC,eAACyX,GAAA,EAAD,WACG,cAAC5Q,EAAA,EAAD,CAAQ6O,IAAI,aAAaD,IAAK7O,EAAKmL,MAAOtS,UAAW0B,EAAQ8U,QAC5D,eAAC9D,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAYsF,cAAY,EAACpS,QAAQ,KAAKqS,UAAU,KAAhD,UACK/Q,EAAKgR,UADV,IACsBhR,EAAKiR,YAE3B,cAACzF,GAAA,EAAD,CAAa/M,MAAM,gBAAgBsS,UAAU,IAA7C,mCAGZ,cAAC3F,GAAA,EAAD,CAAarS,MAAO,CAACuK,WAAW,SAAhC,SACI,cAAC/E,EAAA,EAAD,CAAQ1F,UAAU,MAAM6F,QAAQ,YAAYhC,KAAK,QAAQ+B,MAAM,UAAUS,QAAS,kBAAMsQ,GAAc,SAACG,GAAD,OAAUA,EAAO,MAAvH,wBAGEE,OAGL,KAEgB,IAAfN,EACE,sBAAK1W,UAAU,aAAf,UACG,cAAC0F,EAAA,EAAD,CAAQ1F,UAAU,MAAM6F,QAAQ,YAAYD,MAAM,UAAUS,QAAS,WACjE6Q,EAAOmB,aACPxB,KAFJ,mCAICG,OAEP,KAEgB,IAAfN,EACE,sBAAK1W,UAAU,aAAf,UACA,gDAAmBkX,EAAOlU,OAAOmU,SAC9B,cAACzR,EAAA,EAAD,CAAQ1F,UAAU,MAAM6F,QAAQ,YAAYD,MAAM,UAAUS,QAAS,kBAAM2G,GAAc,IAAzF,wBAEN,Y,sFCvHjB,SAASsL,KACL,OACE,eAAC3F,GAAA,EAAD,CAAY9M,QAAQ,QAAQD,MAAM,gBAAgB2S,MAAM,SAAxD,UACG,kBACD,cAACC,GAAA,EAAD,CAAM5S,MAAM,UAAU6S,KAAK,2BAA3B,0BAEQ,KACP,IAAIC,MAAOC,cACX,OAKP,IAAMvY,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJG,UAAU,QAEZ4R,MAAO,CACLzL,SAAS,WACT+R,gBAAgB,OAAD,OAASC,GAAT,KACfC,iBAAkB,YAClBC,UAAW,SACXC,mBAAoB,MACpBC,eAAgB,cAChBtN,UAAW,QACX9K,OAAQ,SAGVqY,OAAQ,CACNtY,MAAM,MACNE,OAAQ,iBACR+F,SAAU,WACVE,KAAK,OACLkE,OAAQ,OAEVkO,SAAU,CACRzY,UAAU,QAEZoT,MAAO,CACLhT,OAAQR,EAAMgL,QAAQ,EAAG,GACzB9K,QAAS,OACT0L,cAAe,SACfT,WAAY,UAEd0G,OAAQ,CACNrR,OAAQR,EAAMgL,QAAQ,GACtBF,gBAAiB9K,EAAM8Y,QAAQC,UAAUC,MAE3CC,KAAM,CACJ3Y,MAAO,OACPF,UAAWJ,EAAMgL,QAAQ,IAE3B3F,WAAY,CACV3E,WAAW,OACXN,UAAU,OACVW,aAAa,QAEfD,UAAW,CACTC,aAAa,MACbC,YAAY,OAEdkY,OAAQ,CACN1Y,OAAQR,EAAMgL,QAAQ,EAAG,EAAG,QAqInBmO,GA7HA,SAAC,GAAmB,IAAjBra,EAAgB,EAAhBA,UAERsC,GADWgY,eACDtZ,MAFc,EAGMlB,oBAAS,GAHf,mBAGvB6N,EAHuB,KAGXC,EAHW,OAIA9N,mBAAS,IAJT,mBAIvBiD,EAJuB,KAIdC,EAJc,OAKIlD,oBAAS,GALb,mBAKvB6C,EALuB,KAKZC,EALY,OAMU9C,oBAAS,GANnB,mBAMvBya,EANuB,KAMTC,EANS,KAOxB5a,EAAUC,cAOViY,EAASG,YAAU,CACrBjT,cAAc,CAAC+S,MAAM,GAAG0C,SAAS,IACjCnX,iBAAiBC,IAAW,CACxB2E,SAAS3E,MACRG,SAAS,8BACV+W,SAASlX,MACRG,SAAS,wBACTgX,IAAI,EAAG,oDAEZxV,SAAS,SAACtB,EAAD,GAAwB,EAAfuU,UAChBwC,EAAU/W,MAIV+U,EAAc,SAACb,EAAOlU,GAAR,MAAoB,CACpCW,SAAOuT,EAAOtS,OAAO5B,KAAWkU,EAAOrS,QAAQ7B,IAC/C8U,WAAYZ,EAAOtS,OAAO5B,IAAWkU,EAAOrS,QAAQ7B,GAAUkU,EAAOtS,OAAO5B,GAAQ,OAGlF+W,EAAS,uCAAG,WAAO/W,GAAP,iBAAA1D,EAAA,+EAESC,MAAM,cAAe,CAAE6D,OAAQ,OAClDC,QAAS,CACL,eAAe,oBAEnBC,KAAMhB,KAAKiB,UAAUP,KANX,cAERxD,EAFQ,gBAQKA,EAASC,OARd,QAQR+D,EARQ,QASP9D,SACL8C,aAAa6O,QAAQ,OAAO/O,KAAKiB,UAAUC,EAAK2D,OACjD/H,GAAU,GACXJ,EAAQa,KAAK,OAEbuC,EAAWoB,EAAKG,OAChB3B,GAAa,IAfC,kDAkBfrC,QAAQC,IAAR,MAlBe,0DAAH,sDAqBf,OACI,eAAC8R,GAAA,EAAD,CAAMC,WAAS,EAAC3R,UAAW0B,EAAQnB,KAAnC,UACI,cAACmR,GAAA,EAAD,CAAM7B,MAAI,EAACmK,GAAI,IACf,cAAC3G,GAAA,EAAD,CAAQ4G,QAAM,EAAd,SAEE,cAACvI,GAAA,EAAD,CAAM7B,MAAI,EAACgC,GAAI,EAAG7R,UAAW0B,EAAQ4Q,MAArC,SACE,eAAC4H,GAAA,EAAD,CAAUC,MAAI,EAACna,UAAW0B,EAAQwX,OAAQkB,SAAU,IAApD,UACE,cAACF,GAAA,EAASG,KAAV,UACE,qBAAKra,UAAU,gBAAgBgW,IAAKsE,GAASrE,IAAI,kBAEnD,cAACiE,GAAA,EAASG,KAAV,UACE,qBAAKra,UAAU,gBAAgBgW,IAAKuE,GAAStE,IAAI,oBAEnD,cAACiE,GAAA,EAASG,KAAV,UACA,qBAAKra,UAAU,gBAAgBgW,IAAKwE,GAASvE,IAAI,yBAOvD,cAACvE,GAAA,EAAD,CAAM7B,MAAI,EAACmK,GAAI,GAAIpI,GAAI,EAAGC,GAAI,EAAIqG,UAAWuC,KAAQC,QAAM,EAAC1a,UAAW0B,EAAQyX,SAA/E,SACE,sBAAKnZ,UAAW0B,EAAQoS,MAAxB,UACA,qBAAKkC,IAAI,kCAAkCC,IAAI,UAC/C,uBAAMjW,UAAW0B,EAAQ6X,KAAMoB,YAAU,EAACrW,SAAU4S,EAAO0D,aAA3D,UACI,cAAC9H,GAAA,EAAD,yBAAYjN,QAAQ,WAAW/E,OAAO,SAAS8S,WAAS,EAACb,MAAM,YAAY7N,KAAK,QAAQ2V,WAAS,GAAK3D,EAAOW,cAAc,aAAiBE,EAAYb,EAAO,cAC/J,cAACpE,GAAA,EAAD,yBACAG,WAAY,CACVG,aACE,cAACD,GAAA,EAAD,CAAgBtM,SAAS,MAAzB,SACE,eAACT,EAAA,EAAD,CAAYC,QAzEC,WAC/BuT,GAAiBD,IAwEC,cAAgDA,EAAe,cAAC,KAAD,IAAwB,cAAC,KAAD,IAAvF,WAGN9T,QAAQ,WAAW/E,OAAO,SAAS8S,WAAS,EAAC1O,KAAK,WAAW6N,MAAM,WAAW9N,KAAM0U,EAAe,OAAQ,YAAgBzC,EAAOW,cAAc,aAAiBE,EAAYb,EAAO,cAElL,cAACnR,EAAA,EAAD,CAAUC,GAAIjE,EAAd,SACE,cAACkE,EAAA,EAAD,CACAC,SAAS,QACTC,OAAS,eAACC,EAAA,EAAD,CAAYR,MAAM,UAAU/B,KAAK,QAAQwC,QAAS,kBAAMrE,GAAa,IAArE,cAA+E,cAAC,IAAD,CAAW/B,SAAS,YAAnG,OAFT,SAGCkC,MAIH,cAACuD,EAAA,EAAD,CAAQT,KAAK,SAAS2O,WAAS,EAAC/N,QAAQ,YAAYD,MAAM,UAAU5F,UAAW0B,EAAQ8X,OAAvF,uBACA,eAAC9H,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,GAAA,EAAD,CAAM7B,MAAI,EAACmK,IAAE,EAAb,SACE,cAACxB,GAAA,EAAD,CAAMC,KAAK,GAAG5S,QAAQ,QAAQQ,QAAS,kBA1FnC2G,GAAc,IA0FlB,kCAEF,cAAC0E,GAAA,EAAD,CAAM7B,MAAI,EAAV,SACE,cAAC2I,GAAA,EAAD,CAAMC,KAAK,UAAU5S,QAAQ,QAA7B,mDAGV,cAACiV,GAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACzC,GAAD,cAMR,cAAC5G,GAAA,EAAD,CAAM7B,MAAI,EAACmK,GAAI,IAGb,eAACpW,EAAA,EAAD,CAAOC,KAAK,KAAKC,UAAQ,EAACC,KAAMgJ,EAAY/I,OA3G/B,kBAAMgJ,GAAc,IA2GjC,UACE,eAACpJ,EAAA,EAAMK,OAAP,eAAe,cAACL,EAAA,EAAMM,MAAP,qCAAf,OACA,cAACN,EAAA,EAAMO,KAAP,UACE,cAAC,GAAD,CAAc6I,cAAeA,a,iBC9L3C,SAASsL,KACL,OACE,eAAC3F,GAAA,EAAD,CAAY9M,QAAQ,QAAQD,MAAM,gBAAgB2S,MAAM,SAAxD,UACG,kBACD,cAACC,GAAA,EAAD,CAAM5S,MAAM,UAAU6S,KAAK,2BAA3B,0BAEQ,KACP,IAAIC,MAAOC,cACX,OAMP,IC/BEqC,GD+BI5a,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJG,UAAU,QAEZ4R,MAAO,CACLzL,SAAS,WACT+R,gBAAgB,OAAD,OAASC,GAAT,KACfC,iBAAkB,YAClBC,UAAW,SACXC,mBAAoB,MACpBC,eAAgB,cAChBtN,UAAW,QACX9K,OAAQ,SAGVqY,OAAQ,CACNtY,MAAM,MACNE,OAAQ,iBACR+F,SAAU,WACVE,KAAK,OACLkE,OAAQ,OAEVkO,SAAU,CACRzY,UAAU,OACVI,OAAO,QAETgT,MAAO,CACLhT,OAAQR,EAAMgL,QAAQ,EAAG,GACzB9K,QAAS,OACT0L,cAAe,SACfT,WAAY,UAEd0G,OAAQ,CACNrR,OAAQR,EAAMgL,QAAQ,GACtBF,gBAAiB9K,EAAM8Y,QAAQC,UAAUC,MAE3CC,KAAM,CACJ3Y,MAAO,OACPF,UAAWJ,EAAMgL,QAAQ,IAE3B3F,WAAY,CACV3E,WAAW,OACXN,UAAU,OACVW,aAAa,QAEfD,UAAW,CACTC,aAAa,MACbC,YAAY,OAEdkY,OAAQ,CACN1Y,OAAQR,EAAMgL,QAAQ,EAAG,EAAG,QA4LnB2P,GAvLA,SAAC,GAAmB,IAAjB7b,EAAgB,EAAhBA,UACR8b,EAAWxB,eACXhY,EAAUtB,KACV+a,EAAQC,mBAHgB,EAIIlc,oBAAS,GAJb,mBAIZ4C,GAJY,aAKA5C,mBAAS,IALT,mBAKvBiD,EALuB,KAKdC,EALc,OAMIlD,oBAAS,GANb,mBAMvB6C,EANuB,KAMZC,EANY,OAOU9C,oBAAS,GAPnB,mBAOvBya,EAPuB,KAOTC,EAPS,OAQwB1a,oBAAS,GARjC,mBAQvBmc,EARuB,KAQFC,EARE,OASEpc,mBAAS,IATX,mBASvByC,EATuB,KASbC,EATa,KAUxB5C,EAAUC,cAGVyD,EAAmBC,MAAaC,MAAM,CACpC0E,SAAS3E,MACRG,SAAS,0BACT+W,SAASlX,MACTG,SAAS,yBACTgX,IAAI,EAAG,kDACRyB,gBAAgB5Y,MACfG,SAAS,0BACT0Y,MAAM,CAAC7Y,IAAQ,YAAa,MAAO,wBACpCE,MAAMF,MACLG,SAAS,+BAGZiV,EAAc,SAACb,EAAOlU,GAAR,MAAoB,CACtCW,SAAOuT,EAAOtS,OAAO5B,KAAWkU,EAAOrS,QAAQ7B,IAC/C8U,WAAYZ,EAAOtS,OAAO5B,IAAWkU,EAAOrS,QAAQ7B,GAAUkU,EAAOtS,OAAO5B,GAAQ,OAI/EyY,EAA0B,WAC/B7B,GAAiBD,IAEb+B,EAA6B,WACjCJ,GAAwBD,IAgCnBM,EAAU,uCAAG,WAAO3Y,GAAP,mBAAA1D,EAAA,+EAEQ6b,EAAMS,QAAQC,WAFtB,cAENC,EAFM,gBAGWvc,MAAM,eAAgB,CAC7C6D,OAAQ,OACRC,QAAS,CACL,eAAe,oBAEnBC,KAAMhB,KAAKiB,UAAL,2BAAmBP,GAAnB,IAA2B8Y,aARrB,cAGNtc,EAHM,gBAUKA,EAASC,OAVd,OAUR+D,EAVQ,OAWd2X,EAAMS,QAAQG,QACXvY,EAAK2D,MACN3E,aAAa6O,QAAQ,OAAQ/O,KAAKiB,UAAL,2BAAmBC,EAAK2D,MAAxB,IAA6BmK,SAAQ,MAClE4J,EAAU,CAAEjW,KAAK,YAAa+W,QAAQxY,EAAK2D,OAC3C/H,GAAU,GACVJ,EAAQa,KAAK,OAGbuC,EAAWoB,EAAKG,OAChB3B,GAAa,IApBD,kDAwBZrC,QAAQgE,MAAR,MAxBY,0DAAH,sDA4BjB,OACE,eAAC+N,GAAA,EAAD,CAAMC,WAAS,EAAC3R,UAAW0B,EAAQnB,KAAnC,UAGE,eAAC8S,GAAA,EAAD,CAAQ4G,QAAM,EAAd,UACI,cAACvI,GAAA,EAAD,CAAM7B,MAAI,EAACmK,GAAI,EAAGnI,GAAI,IACtB,cAACH,GAAA,EAAD,CAAM7B,MAAI,EAACmK,GAAI,EAAGiC,GAAI,EAAGjc,UAAW0B,EAAQ4Q,MAA5C,SACE,eAAC4H,GAAA,EAAD,CAAUC,MAAI,EAACna,UAAW0B,EAAQwX,OAAQkB,SAAU,IAApD,UACE,cAACF,GAAA,EAASG,KAAV,UACE,qBAAKra,UAAU,gBAAgBgW,IAAKsE,GAASrE,IAAI,kBAEnD,cAACiE,GAAA,EAASG,KAAV,UACE,qBAAKra,UAAU,gBAAgBgW,IAAKuE,GAAStE,IAAI,oBAEnD,cAACiE,GAAA,EAASG,KAAV,UACA,qBAAKra,UAAU,gBAAgBgW,IAAKwE,GAASvE,IAAI,0BAO3D,cAACvE,GAAA,EAAD,CAAM7B,MAAI,EAACmK,GAAI,GAAInI,GAAI,EAAIqG,UAAWuC,KAAOyB,UAAW,EAAGxB,QAAM,EAAC1a,UAAW0B,EAAQyX,SAArF,SACI,sBAAKnZ,UAAW0B,EAAQoS,MAAxB,UACE,qBAAKkC,IAAI,kCAAkCC,IAAI,SAI/C,cAAC,IAAD,CACQ7R,cAAe,CAACkD,SAAS,GAAGuS,SAAS,GAAIhX,MAAM,IAC/CyB,SAAU,SAACtB,EAAD,KAASuU,UAAT,OAzEL,SAACvU,GAErB,GADAA,EAAOrB,SAAWA,EACS,kBAAjBqB,EAAOH,MAAqB,CACrC,IAAM0B,EAAS,IAAIC,WACnBD,EAAOE,cAAczB,EAAOH,OAC5B0B,EAAOG,UAAY,WACjB1B,EAAOH,MAAQ0B,EAAOI,OACtBgX,EAAW3Y,SAGb2Y,EAAW3Y,GA+DqCmZ,CAAYnZ,IAC9CN,iBAAkBA,EAClB4U,oBAAoB,EAJ5B,SAKS,SAACvY,GAAD,OACG,uBAAMmB,MAAO,CAAC6E,UAAU,UAAWT,SAAUvF,EAAM6b,aAAcwB,aAAa,MAA9E,UAEQ,cAACtJ,GAAA,EAAD,yBAAW5N,KAAK,WAAW6N,MAAM,YAAYlN,QAAQ,WAAW+N,WAAS,GAAK7U,EAAM8Y,cAAc,aAAiBE,EAAYhZ,EAAM,cAErI,cAAC+T,GAAA,EAAD,yBAAWG,WAAY,CACnBG,aACI,cAACD,GAAA,EAAD,CAAgBtM,SAAS,MAAzB,SACI,eAACT,EAAA,EAAD,CAAYC,QAASoV,EAArB,cAAgD9B,EAAe,cAAC,KAAD,IAAwB,cAAC,KAAD,IAAvF,WAGR1U,KAAM0U,EAAe,OAAQ,WAAY9T,QAAQ,WAAW/E,OAAO,SAAS8S,WAAS,EAAC1O,KAAK,WAAW6N,MAAM,YAAehU,EAAM8Y,cAAc,aAAiBE,EAAYhZ,EAAM,cAE3L,cAAC+T,GAAA,EAAD,yBAAWG,WAAY,CACdG,aACI,cAACD,GAAA,EAAD,CAAgBtM,SAAS,MAAzB,SACI,eAACT,EAAA,EAAD,CAAYC,QAASqV,EAArB,cAAmDL,EAAsB,cAAC,KAAD,IAAwB,cAAC,KAAD,IAAjG,WAGRpW,KAAMoW,EAAsB,OAAQ,WAAYxV,QAAQ,WAAW/E,OAAO,SAAS8S,WAAS,EAAC1O,KAAK,kBAAkB6N,MAAM,oBAAuBhU,EAAM8Y,cAAc,oBAAwBE,EAAYhZ,EAAM,qBAEnN,cAACiG,EAAA,EAAD,CAAO7B,GAAG,OAAQnD,UAAU,YAAYiF,KAAK,OAAOC,KAAK,QAAQC,SAAU,SAACC,GAAD,OA/G7E,SAACA,EAAGN,GAC5BA,EAAc,QAASM,EAAEC,OAAOC,MAAM,IACT,IAA1BF,EAAEC,OAAOC,MAAMC,QAChBzD,GAAa,GACbF,EAAY,MAGZE,GAAa,GACbF,EAAYwD,EAAEC,OAAOC,MAAM,GAAGJ,OAuG4EM,CAAkBJ,EAAErG,EAAM+F,gBAAiBW,QAAM,IACnI,eAACC,EAAA,EAAD,CAAQxF,MAAO,CAACM,QAAQ,OAAQiL,WAAW,SAAU3K,OAAO,WAAY8E,MAAM,UAAWC,QAAQ,WAAjG,UACA,qBAAK3F,MAAO,CAACoB,YAAY,OAAzB,SAAiC,cAAC,IAAD,MACjC,wBAAOwE,QAAQ,OAAf,UAAuBnE,EAAQ,UAAMA,EAAN,aAA4B,gBAA3D,UACC5C,EAAM6F,OAAO/B,OAAS9D,EAAM8F,QAAQhC,MAAS,qBAAK7C,UAAU,QAAf,SAAwBjB,EAAM6F,OAAO/B,QAAgB,KACnG,cAAC,KAAD,CAAW3C,MAAO,CAACY,OAAO,YAAaub,QAAQ,2CAA2CC,IAAKnB,IAE3F,cAACpV,EAAA,EAAD,CAAUC,GAAIjE,EAAd,SACI,cAACkE,EAAA,EAAD,CACAC,SAAS,QACTC,OAAS,eAACC,EAAA,EAAD,CAAYR,MAAM,UAAU/B,KAAK,QAAQwC,QAAS,kBAAMrE,GAAa,IAArE,cAA+E,cAAC,IAAD,CAAW/B,SAAS,YAAnG,OAFT,SAGCkC,MAGT,cAACuD,EAAA,EAAD,CAAQ1F,UAAU,OAAO6F,QAAQ,YAAYD,MAAM,UAAUX,KAAK,SAASpB,KAAK,QAAQ+P,WAAS,EAAjG,uBACA,cAAClC,GAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,GAAA,EAAD,CAAM7B,MAAI,EAAV,SACE,cAAC2I,GAAA,EAAD,CAAMC,KAAK,UAAU5S,QAAQ,QAA7B,oDAGJ,cAACiV,GAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,GAAD,iBAMpB,cAACrJ,GAAA,EAAD,CAAM7B,MAAI,EAACmK,GAAI,Q,oBEtMduC,I,OAnEW,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,WAOpD,OALJ/c,QAAQC,IAAI8c,GAMJ,mCACLA,GACD,cAAC9Y,EAAA,EAAD,CACMG,KAAMyY,EACNxY,OAAQ,kBAAMyY,GAAc,IAC5BE,gBAAgB,YAChB3c,UAAU,QACV4c,kBAAgB,qCALtB,SAQI,cAAChZ,EAAA,EAAMO,KAAP,CAAYnE,UAAU,YAAtB,SAEI,eAAC6c,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAK9C,GAAI,GAAInI,GAAI,EAAjB,SACE,qBAAK7R,UAAU,kBAAf,SAAiC,qBAAKA,UAAU,cAAciW,IAAI,QAAQD,IAAK0G,EAAW7Z,YAE5F,cAACia,GAAA,EAAD,CAAK9C,GAAI,EAAT,SACI,sBAAKha,UAAU,qBAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,eAACoH,EAAA,EAAD,CAAQlH,MAAO,CAACW,OAAO,OAAQD,MAAM,QAArC,eAAgD,cAAC,IAAD,CAAOwH,UAAU,cAAcC,SAAUqU,EAAWK,YAAanc,MAAM,KAAKC,OAAO,KAAKyH,KAAK,UAA7I,QACA,qBAAItI,UAAU,yBAAd,UAAwC0c,EAAWM,eAAnD,IAAmE,sBAAMhd,UAAU,eAAhB,SAAgC0c,EAAWhP,aAGlH,cAACkF,GAAA,EAAD,IACA,sBAAK5S,UAAU,kBAAf,UACA,eAACoH,EAAA,EAAD,CAAQlH,MAAO,CAACW,OAAO,OAAQD,MAAM,QAArC,eAAgD,cAAC,IAAD,CAAOwH,UAAU,cAAcC,SAAUqU,EAAWK,YAAanc,MAAM,KAAKC,OAAO,KAAKyH,KAAK,UAA7I,QACA,oBAAItI,UAAU,yBAAd,SAAwC0c,EAAWM,iBACnD,mBAAGhd,UAAU,qBAAb,SAAmC0c,EAAWrY,aAEd,IAA/BqY,EAAWO,SAAS1X,QAAgBmX,EAAWO,SAAS/V,KAAI,SAAAsE,GAAO,OAChE,sBAAKxL,UAAU,kBAAf,UACA,eAACoH,EAAA,EAAD,CAAQlH,MAAO,CAACW,OAAO,OAAQD,MAAM,QAArC,eAAgD,cAAC,IAAD,CAAOwH,UAAU,cAAcC,SAAUmD,EAAQiF,KAAKlJ,QAAS3G,MAAM,KAAKC,OAAO,KAAKyH,KAAK,UAA3I,QACA,qBAAItI,UAAU,yBAAd,UAAwCwL,EAAQiF,KAAKnJ,SAArD,IAA+D,sBAAMtH,UAAU,eAAhB,SAAgCwL,EAAQwD,UACvG,mBAAGhP,UAAU,qBAAb,SAAmCwL,EAAQnH,gBAG/C,cAACuO,GAAA,EAAD,IACA,gCACA,eAACxM,EAAA,EAAD,eAAc,cAAC,KAAD,IAAd,QACA,eAACA,EAAA,EAAD,eAAa,cAAC,KAAD,IAAb,OACA,eAACA,EAAA,EAAD,eAAc,cAAC,KAAD,IAAd,UAEA,oBAAGpG,UAAU,SAAb,sBAAgC0c,EAAWnR,MAA3C,6BCmGL2R,GAlJK,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACnBja,EAAOb,KAAKC,MAAMC,aAAaC,QAAQ,SAAvCU,GADiC,EAGVjE,mBAAS,IAHC,mBAGjCiD,EAHiC,KAGxBC,EAHwB,OAINlD,oBAAS,GAJH,mBAIjC6C,EAJiC,KAItBC,EAJsB,OAKR9C,mBAAS,IALD,mBAKjCyC,EALiC,KAKvBC,EALuB,OAME1C,mBAAS,IANX,mBAMlB2C,GANkB,aAON3C,oBAAS,GAPH,mBAOtB4C,GAPsB,aAQF5C,mBAAS,CAACoI,SAAS,GAAIuS,SAAS,GAAIwD,YAAY,KAR9C,mBAQjCC,EARiC,KAQpBC,EARoB,OASAre,oBAAS,GATT,mBASjCya,EATiC,KASnBC,EATmB,KAYlClX,EAAmBC,MAAaC,MAAM,CACxC0E,SAAS3E,MACRG,SAAS,wBACV+W,SAASlX,MACRG,SAAS,wBACVua,YAAY1a,MACXmX,IAAI,EAAG,gDAGJ/B,EAAc,SAACb,EAAOlU,GAAR,MAAoB,CACtCW,SAAOuT,EAAOtS,OAAO5B,KAAWkU,EAAOrS,QAAQ7B,IAC/C8U,WAAYZ,EAAOtS,OAAO5B,IAAWkU,EAAOrS,QAAQ7B,GAAUkU,EAAOtS,OAAO5B,GAAQ,OAIhFwa,EAAO,uCAAG,wCAAAle,EAAA,sEACIC,MAAM,SAAD,OAAU4D,IADnB,cACRyM,EADQ,gBAEKA,EAAInQ,OAFT,OAER+D,EAFQ,SAGsDA,EAAK2D,KAAjEG,EAHM,EAGNA,SAAUuS,EAHJ,EAGIA,SAAU4D,EAHd,EAGcA,gBAAiBC,EAH/B,EAG+BA,mBAC7CH,EAAe,CAAEjW,WAAUuS,WAAUwD,YAAaK,EAAoB7a,MAAM,KAC5EjB,EAAY6b,GALE,2CAAH,qDAyBPE,EAAc,uCAAG,WAAO3a,EAAOuU,GAAd,iBAAAjY,EAAA,sEACEC,MAAM,QAAS,CACtC6D,OAAQ,QACRC,QAAS,CACL,eAAe,oBAEnBC,KAAMhB,KAAKiB,UAAL,2BAAmBP,GAAnB,IAA2BG,KAAIxB,gBANhB,cACfnC,EADe,gBAQFA,EAASC,OARP,QAQf+D,EARe,QASb2D,MACJ3E,aAAa6O,QAAQ,OAAQ/O,KAAKiB,UAAUC,EAAK2D,OACjDoQ,IACA6F,GAAS,KAEThb,EAAWoB,EAAKG,OAChB3B,GAAa,IAfI,2CAAH,wDAoBbyZ,EAA0B,WAC/B7B,GAAiBD,IA2BrB,OALI7Z,qBAAU,WACR0d,MACC,IAIH,8BACI,eAAC5Z,EAAA,EAAD,CAAOC,KAAK,KAAKC,UAAQ,EAACC,KAAMoZ,EAAOnZ,OApG5B,kBAAMoZ,GAAS,IAoG1B,UACK,eAACxZ,EAAA,EAAMK,OAAP,CAAcjE,UAAU,GAAxB,cAA4B,cAAC4D,EAAA,EAAMM,MAAP,CAAahE,MAAO,CAACiB,WAAW,MAAML,OAAO,QAA7C,iCAA5B,OACA,cAAC8C,EAAA,EAAMO,KAAP,UAEA,cAAC,IAAD,CACGC,cAAekZ,EACfhZ,SAAU,SAACtB,EAAD,UAvEH,SAACA,EAAOuU,GAE3B,GADAvU,EAAOrB,SAAWA,EACS,kBAAjBqB,EAAOH,MAAqB,CACrC,IAAM0B,EAAS,IAAIC,WACnBD,EAAOE,cAAczB,EAAOH,OAC5B0B,EAAOG,UAAY,WACjB1B,EAAOH,MAAQ0B,EAAOI,OACtBgZ,EAAe3a,EAAOuU,SAGrBoG,EAAe3a,EAAOuU,GA6DoB4E,CAAYnZ,EAApC,EAASuU,YACnB7U,iBAAkBA,EAClB4U,oBAAoB,EAJvB,SAKI,SAACvY,GAAD,OACG,uBAAMmB,MAAO,CAAC6E,UAAU,UAAWT,SAAUvF,EAAM6b,aAAcwB,aAAa,MAA9E,UACQ,cAACtJ,GAAA,EAAD,yBAAW5N,KAAK,WAAW6N,MAAM,YAAYlN,QAAQ,WAAW+N,WAAS,GAAK7U,EAAM8Y,cAAc,aAAiBE,EAAYhZ,EAAM,cAErI,cAAC+T,GAAA,EAAD,yBAAWG,WAAY,CACnBG,aACI,cAACD,GAAA,EAAD,CAAgBtM,SAAS,MAAzB,SACI,eAACT,EAAA,EAAD,CAAYC,QAASoV,EAArB,cAAgD9B,EAAe,cAAC,KAAD,IAAwB,cAAC,KAAD,IAAvF,WAGR1U,KAAM0U,EAAe,OAAQ,WAAY9T,QAAQ,WAAW/E,OAAO,SAAS8S,WAAS,EAAC1O,KAAK,WAAW6N,MAAM,YAAehU,EAAM8Y,cAAc,aAAiBE,EAAYhZ,EAAM,cAEtL,cAAC+T,GAAA,EAAD,yBAAYY,WAAS,EAACC,KAAM,EAAG9N,QAAQ,WAAW/E,OAAO,SAAS8S,WAAS,EAACb,MAAM,0BAA0B7N,KAAK,eAAkBnG,EAAM8Y,cAAc,gBAAoBE,EAAYhZ,EAAM,iBAE7L,cAACiG,EAAA,EAAD,CAAO7B,GAAG,OAAQnD,UAAU,YAAYiF,KAAK,OAAOC,KAAK,QAAQC,SAAU,SAACC,GAAD,OAhD3E,SAACA,EAAEN,GACzB,IAAMP,EAAS,IAAIC,WACnBM,EAAc,QAASM,EAAEC,OAAOC,MAAM,IACT,IAA1BF,EAAEC,OAAOC,MAAMC,QAChBzD,GAAa,GACbF,EAAY,IACZC,EAAiB,MAGjB0C,EAAOE,cAAcW,EAAEC,OAAOC,MAAM,IACpCf,EAAOG,UAAY,WACjB7C,EAAiB0C,EAAOI,SAE1B7C,GAAa,GACbF,EAAYwD,EAAEC,OAAOC,MAAM,GAAGJ,OAkCwEM,CAAkBJ,EAAErG,EAAM+F,gBAAiBW,QAAM,IACnI,eAACC,EAAA,EAAD,CAAQxF,MAAO,CAACM,QAAQ,QAASM,OAAO,WAAY8E,MAAM,UAAWC,QAAQ,WAA7E,UAAwF,cAAC,IAAD,CAAW7F,UAAU,KAAI,wBAAO8F,QAAQ,OAAf,UAAuBnE,EAAQ,UAAMA,EAAN,aAA4B,gBAA3D,UAChH5C,EAAM6F,OAAO/B,OAAS9D,EAAM8F,QAAQhC,MAAS,qBAAK7C,UAAU,QAAf,SAAwBjB,EAAM6F,OAAO/B,QAAgB,KAG/F,cAACkD,EAAA,EAAD,CAAUC,GAAIjE,EAAd,SACI,cAACkE,EAAA,EAAD,CACAC,SAAS,QACTC,OAAS,eAACC,EAAA,EAAD,CAAYR,MAAM,UAAU/B,KAAK,QAAQwC,QAAS,kBAAMrE,GAAa,IAArE,cAA+E,cAAC,IAAD,CAAW/B,SAAS,YAAnG,OAFT,SAGCkC,MAGT,cAACuD,EAAA,EAAD,CAAQ1F,UAAU,OAAO6F,QAAQ,YAAYD,MAAM,UAAUX,KAAK,SAASpB,KAAK,QAAhF,yC,0CC4BjB+Z,I,OAnKC,SAAC7e,GACb,IAAMoE,EAAKpE,EAAM8e,MAAMC,OAAO3a,GADN,EAEcjE,mBAAS,IAFvB,mBAEjBoe,EAFiB,KAEJC,EAFI,OAGEre,mBAAS,IAHX,mBAGjBqN,EAHiB,KAGVC,EAHU,OAIYtN,oBAAS,GAJrB,mBAIjBsd,EAJiB,KAILC,EAJK,OAKEvd,oBAAS,GALX,mBAKjBie,EALiB,KAKVC,EALU,OAMYle,mBAAS,IANrB,mBAMjBwd,EANiB,KAMLqB,EANK,OAOc7e,oBAAS,GAPvB,mBAOjB8e,EAPiB,KAOJC,EAPI,OAQY/e,oBAAS,GARrB,mBAQjBgf,EARiB,KAQLC,EARK,OAS0Bjf,mBAAS,IATnC,mBASjBkf,EATiB,KASEC,EATF,OAU0Bnf,mBAAS,IAVnC,mBAUjBof,EAViB,KAUEC,EAVF,KAWlBpX,EAAO7E,KAAKC,MAAMC,aAAaC,QAAQ,SAEvC+a,EAAO,uCAAG,8BAAAle,EAAA,sEACMC,MAAM,SAAD,OAAU4D,IADrB,cACNyM,EADM,gBAEOA,EAAInQ,OAFX,OAEN+D,EAFM,OAGZ+Z,EAAe/Z,EAAK2D,MAHR,2CAAH,qDAOPqX,EAAY,uCAAG,oCAAAlf,EAAA,sEACCC,MAAM,SAAD,OAAU4D,IADhB,cACXyM,EADW,gBAG+CA,EAAInQ,OAHnD,gBAGTgf,EAHS,EAGTA,QAASL,EAHA,EAGAA,kBAAoBE,EAHpB,EAGoBA,kBACrC3e,QAAQC,IAAI6e,GACZJ,EAAqBD,GACrBG,EAAqBD,GACrB3e,QAAQC,IAAI6e,GACZjS,EAASiS,GARQ,4CAAH,qDAWZxN,EAAS,uCAAG,8BAAA3R,EAAA,0DAEX4e,EAFW,iCAGQ3e,MAAM,iBAAkB,CAC1C6D,OAAQ,OACRC,QAAS,CACL,eAAe,oBAEnBC,KAAMhB,KAAKiB,UAAU,CAACmb,uBAAwBvX,EAAKhE,GAAKwb,sBAAuBxb,MARrE,cAGJyM,EAHI,gBAUOA,EAAInQ,OAVX,cAWJC,UACNye,GAAc,GACdE,EAAqBD,EAAoB,GACvCjX,EAAK2I,WAAa3I,EAAK2I,WAAWP,QAAO,SAAAS,GAAQ,OAAIK,OAAOL,EAASC,eAAiBI,OAAOlN,MAC7FX,aAAa6O,QAAQ,OAAQ/O,KAAKiB,UAAU4D,KAfpC,yCAoBY5H,MAAM,eAAgB,CACxC6D,OAAQ,OACRC,QAAS,CACL,eAAe,oBAEnBC,KAAMhB,KAAKiB,UAAU,CAAC2N,oBAAqB/J,EAAKhE,GAAKgO,oBAAqBhO,MAzBpE,eAoBAyM,EApBA,iBA2BWA,EAAInQ,OA3Bf,eA4BAC,UACN2e,EAAqBD,EAAoB,GACvCjX,EAAK2I,WAAWjQ,KAAK,CAACqD,OAAOmN,OAAOlJ,EAAKhE,IAAK8M,YAAaI,OAAOlN,KAClEX,aAAa6O,QAAQ,OAAQ/O,KAAKiB,UAAU4D,IAC5CgX,GAAc,IAhCV,4CAAH,qDA2Df,OAhBAre,qBAAU,WACP0d,IACAgB,IACInO,OAAOlN,KAAQkN,OAAO/N,KAAKC,MAAMC,aAAaC,QAAQ,SAASU,IAClE8a,GAAe,GAEfA,GAAe,GAEb9W,EAAK2I,WAAWC,MAAK,SAAAC,GAAQ,OAAIK,OAAOL,EAASC,eAAiBI,OAAOlN,MAC3Egb,GAAc,IAEdxe,QAAQC,KAAI,GACZue,GAAc,MAEf,CAAChB,EAAMha,IAGN,qCACCoJ,GAAS+Q,EACV,sBAAKtd,UAAU,eAAf,UACG,iCACC,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,UAAUE,MAAO,CAACY,OAAO,OAAxC,UACI,qBAAKd,UAAU,gBAAf,SACA,cAAC,IAAD,CAAOoI,UAAU,cAAcC,SAAUiV,EAAY/V,QAAS3G,MAAM,MAAM0H,KAAK,YAGhF,sBAAKtI,UAAU,wBAAf,UACG,qBAAIA,UAAU,oBAAd,cAAoCsd,EAAYhW,SAAhD,OACC0W,EACD,wBAAQhe,UAAU,uBAAuBqG,QAAS,kBAAM+W,GAAS,IAAjE,0BAEA,wBAAQpd,UAAU,uBAAuBqG,QAAS,kBAAM4K,KAAxD,SAAsEiN,EAAa,WAAa,WAEhG,wBAAQle,UAAU,2BAAlB,SAA6C,cAAC,KAAD,SAGjD,qBAAKA,UAAU,gBAAf,SACI,qBAAIE,MAAO,CAAC0L,QAAQ,gBAApB,UACI,+BAAI,sBAAM5L,UAAU,qBAAhB,SAAsCuM,EAAMhH,SAAhD,YACA,+BAAI,sBAAMvF,UAAU,qBAAhB,SAAsCoe,IAA1C,gBACA,+BAAI,sBAAMpe,UAAU,qBAAhB,SAAsCse,IAA1C,qBAIR,qBAAKte,UAAU,cAAf,SACI,8BAAG,sBAAMA,UAAU,oBAAhB,SAAqCsd,EAAYhW,WAApD,IAAsEgW,EAAYI,mBAAlF,0DAMlB,+BACE,qBAAK1d,UAAU,YAAf,SACI,qBAAKA,UAAU,UAAf,SACA,cAAC0R,GAAA,EAAD,CAAMC,WAAS,EAAf,SACkB,IAAjBpF,EAAMhH,OAAegH,EAAMuF,MAAM,GAAGC,UAAU7K,KAAI,SAAA2G,GAAI,OACnD,cAAC6D,GAAA,EAAD,CAAM7B,MAAI,EAACmK,GAAI,EAAG3T,QAAS,kBA9Dd,SAACwH,GACtBkQ,EAAclQ,GACd4O,GAAc,GA4D2BmC,CAAiB/Q,IAAlD,SACA,sBAAK7N,UAAU,eAAe6e,SAAS,IAAvC,UACI,qBAAK7I,IAAKnI,EAAKhL,MAAO7C,UAAU,gBAAgBiW,IAAI,KACpD,qBAAKjW,UAAU,oBAAf,SACI,+BACI,qBAAIA,UAAU,qBAAd,UAAmC,sBAAMA,UAAU,kBAAhB,oBAAnC,IAAmF,cAAC,KAAD,IAAnF,IAAoG6N,EAAKtC,SACzG,qBAAIvL,UAAU,wBAAd,UAAsC,sBAAMA,UAAU,kBAAhB,uBAAkD,cAAC,KAAD,IAAxF,IAAkH6N,EAAKoP,SAAS1X,uBAMhJ,sBAAKvF,UAAU,cAAf,UACI,8CACA,yFAUX,cAAC,EAAD,IAED,cAAC,GAAD,CAAamd,MAAOA,EAAOC,SAAUA,IACrC,cAAC,GAAD,CAAmBZ,WAAYA,EAAYC,cAAeA,EAAeC,WAAYA,S,wEH9J/Etc,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCiL,MAAO,CACL3F,MAAO,UACP3F,SAAS,OACTkB,WAAY,OAEduK,oBAAqB,CACjBC,UAAW,IACX7K,OAAQ,WACRF,MAAM,MACNgL,QAAQ,aAuJDkT,GAlJM,SAAC,GAAwB,IAAtB3X,EAAqB,EAArBA,KAAM4X,EAAe,EAAfA,SAAe,EACT7f,mBAAS,IADA,mBAClC8f,EADkC,KACxBC,EADwB,OAEjB/f,mBAAS,IAFQ,mBAElCgG,EAFkC,KAE5Bga,EAF4B,OAGXhgB,mBAAS,IAHE,mBAGlCiD,EAHkC,KAGzBC,EAHyB,KAInC+c,EAAiB/D,mBACjBgE,EAAgB9c,KAAKC,MAAMC,aAAaC,QAAQ,SAChDf,EAAUtB,KAIVif,EAAqB,CACvB,wBAAyB,EACzB,qBAAwB,WACxB,QAAY,IACZ,WAAe,CAAC,cAGdC,EAAiB,WAAO,IAAD,EAC3B,UAAAH,EAAevD,eAAf,SAAwB2D,eAAe,CAAEC,SAAU,YAG/CC,EAAW,uCAAG,WAAOra,GAAP,SAAA9F,EAAA,yDAChB8F,EAAEsa,kBAECvd,EAHa,uBAIZ6Y,GAAO2E,KAAK,cAAe,CAAEza,OAAK/C,YAAW,kBAAMC,EAAW,OAJlD,SAKN7C,MAAM,WAAY,CAAE6D,OAAQ,OAAQC,QAAS,CAAE,eAAe,oBACpEC,KAAMhB,KAAKiB,UAAU,CAAEL,OAAQkc,EAAcjc,GAAIyc,WAAWzY,EAAKhE,GAAI0c,UAAUT,EAAcjc,GAAIkB,QAASlC,MAN9F,uBAQN5C,MAAM,WAAY,CAAE6D,OAAQ,OAAQC,QAAS,CAAE,eAAe,oBACpEC,KAAMhB,KAAKiB,UAAU,CAAEL,OAAQiE,EAAKhE,GAAIyc,WAAWzY,EAAKhE,GAAI0c,UAAUT,EAAcjc,GAAIkB,QAASlC,MATrF,2CAAH,sDA8BjBrC,qBAAU,YACNkb,GAAS8E,KA3CI,iBA2CST,IACfM,KAAK,OAAQ,CAAExc,GAAGic,EAAcjc,OACxC,IAGHrD,qBAAU,WACRkb,GAAO+E,GAAG,WAAW,SAAC5d,GACtB8c,EAAY,GAAD,mBAAKD,GAAL,CAAe7c,KAC1BuB,YAAW,kBAAM4b,MAAkB,QAEnCtE,GAAO+E,GAAG,mBAAmB,SAAC5d,GAC5B8c,EAAY,GAAD,mBAAKD,GAAL,aAAC,eAAiB7c,GAAlB,IAA0B4c,UAAS,OAC9C3c,EAAW,IACXsB,YAAW,kBAAM4b,MAAkB,UAEpC,CAACN,IAGJ,IAAMgB,EAAe,uCAAG,gCAAA1gB,EAAA,sEACGC,MAAM,wBAAyB,CAClD6D,OAAQ,OACRC,QAAS,CACL,eAAe,oBAEnBC,KAAMhB,KAAKiB,UAAU,CAAEL,OAAOkc,EAAcjc,GAAI8c,UAAW9Y,EAAKhE,OANhD,cACd3D,EADc,gBAQSA,EAASC,OARlB,gBAQVuf,EARU,EAQVA,SACRC,EAAYD,GATM,2CAAH,qDAwBrB,OAZAlf,qBAAU,WAGN,GADF4D,YAAW,kBAAM4b,MAAkB,KAC9BnY,EAAM,CAAC,IACA+Y,EAAaC,KAAY5d,MAAMwc,EAASzK,QAAxC4L,SACRhB,EAAQgB,GACRF,OAEH,CAAC7Y,IAMG,sBAAKnH,UAAU,iBAAf,UACA,sBAAKE,MAAO,CAAC2G,SAAU,SAAWC,IAAK,KAAvC,UACD,cAACoL,GAAA,EAAD,CAEEC,OAAS,eAAC/K,EAAA,EAAD,CAAQlH,MAAO,CAACW,OAAO,OAAOD,MAAM,QAApC,UAA6C,cAAC,IAAD,CAAOwH,UAAU,cAAcC,SAAUlB,EAAKI,QAAS3G,MAAM,KAAKC,OAAO,KAAKyH,KAAK,UAAhI,OACTC,MAAO,cAAC,IAAD,CAAM6J,GAAE,WAAR,SAAsB,sBAAMpS,UAAW0B,EAAQ6J,MAAzB,SAAiCpE,EAAKG,aACnEiM,UAAU,uBAEZ,cAACX,GAAA,EAAD,OAEF,sBAAK5S,UAAU,eAAf,UACIgf,GAAYA,EAAS9X,KAAI,SAAC/E,EAASie,GAAV,OACrB,qBAAapgB,UAAWmC,EAAQ0d,YAAcT,EAAcjc,GAAK,cAAgB,kBAAjF,SACI,qBAAKnD,UAAWmC,EAAQ0d,YAAcT,EAAcjc,GAAK,oBAAsB,kBAA/E,SACI,qBAAKnD,UAAWmC,EAAQ0d,YAAcT,EAAcjc,GAAK,UAAY,cAArE,SACEhB,EAAQ4c,SACT,mBAAG1Z,OAAO,SAAUgb,IAAI,aAAa5H,KAAMtW,EAAQkC,QAAnD,yBAEDlC,EAAQkC,aANN+b,MAaf,qBAAK9D,IAAK6C,OAIV,cAACrM,GAAA,EAAD,CAAWwN,WAAY,SAAAlb,GAAC,MAAa,UAATA,EAAEmb,IAAiBd,EAAYra,GAAI,MAAMD,SAAU,SAACC,GAAD,OAAOhD,EAAWgD,EAAEC,OAAO2N,QAAQA,MAAO7Q,EAASnC,UAAW0B,EAAQgK,oBAAqB7F,QAAQ,WAAWZ,KAAK,OAAO8N,MAAM,UAChNE,WAAY,CACVC,eACE,cAACC,GAAA,EAAD,CAAgBtM,SAAS,QAAzB,SACE,eAACT,EAAA,EAAD,eAAa,cAAC,KAAD,SAGjBgN,aACE,eAACD,GAAA,EAAD,CAAgBtM,SAAS,MAAzB,UACC,eAACnB,EAAA,EAAD,CAAQW,QAnGG,WACpB,IAAIma,UAAUC,YACV,OAAOC,MAAM,0CAEjBF,UAAUC,YAAYE,oBAAmB,SAAA9Z,GACvCmU,GAAO2E,KAAK,eAAgB,CAACiB,SAAU/Z,EAASga,OAAOD,SAAUE,UAAWja,EAASga,OAAOC,UAAW5b,QAAvG,sBAA8G,sBAAA5F,EAAA,sEACtGC,MAAM,WAAY,CAAE6D,OAAQ,OAAQC,QAAS,CAAE,eAAe,oBACpEC,KAAMhB,KAAKiB,UAAU,CAAEL,OAAQkc,EAAcjc,GAAIyc,WAAWzY,EAAKhE,GAAI0c,UAAUT,EAAcjc,GAAIkB,QAASlC,MAFE,uBAItG5C,MAAM,WAAY,CAAE6D,OAAQ,OAAQC,QAAS,CAAE,eAAe,oBACpEC,KAAMhB,KAAKiB,UAAU,CAAEL,OAAQiE,EAAKhE,GAAIyc,WAAWzY,EAAKhE,GAAI0c,UAAUT,EAAcjc,GAAIkB,QAASlC,MALW,gDA8FvG,cAAkC,cAAC,KAAD,CAAgBjC,MAAO,CAAC0L,QAAQ,SAAlE,OACC,cAAClG,EAAA,EAAD,CAASW,QAAS,SAACjB,GAAD,OAAOqa,EAAYra,IAAKQ,MAAM,UAAhD,4BIpJDmb,GAfW,WACtB,OACI,sBAAK/gB,UAAU,YAAf,UACI,sBAAMghB,MAAM,MAAZ,SACI,qBAAKhhB,UAAU,cAAf,SACI,cAAC,KAAD,CAAYE,MAAO,CAAED,SAAU,WAIxC,+CACA,oBAAGD,UAAU,UAAb,uDAAiE,uBAAjE,iECJLI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCiL,MAAO,CACL3F,MAAO,UACP3F,SAAS,OACTkB,WAAY,OAEd2P,MAAO,CACHmQ,OAAO,UACP,UAAW,CACPlN,WAAY,mBA+CTmN,GAzCG,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YAC3BhC,EAAgB9c,KAAKC,MAAMC,aAAaC,QAAQ,SAChDf,EAAUtB,KAFmC,EAGzBlB,mBAAS,IAHgB,mBAG5C4R,EAH4C,KAGrCqD,EAHqC,KAM7CkN,EAAQ,uCAAG,gCAAA/hB,EAAA,sEACKC,MAAM,gBAAD,OAAiB6f,EAAcjc,KADzC,cACPyM,EADO,gBAEWA,EAAInQ,OAFf,gBAELqR,EAFK,EAELA,MACRqD,EAASrD,GAHI,2CAAH,qDAUd,OAHAhR,qBAAU,WACPuhB,MACA,IAEC,qCACA,qBAAKrhB,UAAU,eAAf,SACA,6BAAKof,EAAc9X,aAEnB,cAACsL,GAAA,EAAD,IACA,qBAAK5S,UAAU,iBAAf,SACC8Q,GAASA,EAAM5J,KAAI,SAACC,EAAKiZ,GAAN,OAChB,cAAC,IAAD,CAAMhO,GAAE,gBAAWjL,EAAKhE,GAAhB,qBAA+BgE,EAAKG,UAA5C,SACA,cAAC4K,GAAA,EAAD,CACA7L,QAAS,kBAAM8a,GAAgBC,IAC/BjP,OAAS,eAAC/K,EAAA,EAAD,CAAQlH,MAAO,CAACW,OAAO,OAAOD,MAAM,QAApC,UAA6C,cAAC,IAAD,CAAOwH,UAAU,cAAcC,SAAUlB,EAAKI,QAAS3G,MAAM,KAAKC,OAAO,KAAKyH,KAAK,UAAhI,OACTC,MAAO,sBAAOvI,UAAW0B,EAAQ6J,MAA1B,SAAkCpE,EAAKG,WAC9CiM,UAAU,qBACVvT,UAAW0B,EAAQoP,SAN0CsP,YCH1DkB,GAtCF,SAACviB,GAAW,IACboE,EAAOpE,EAAM8e,MAAMC,OAAnB3a,GACA4b,EAAahgB,EAAbggB,SAFY,EAI0B7f,mBAAS,IAJnC,mBAIbqiB,EAJa,KAIIC,EAJJ,OAKkBtiB,oBAAS,GAL3B,mBAKbkiB,EALa,KAKAD,EALA,KAMd3D,EAAO,uCAAG,gCAAAle,EAAA,sEACMC,MAAM,SAAD,OAAU4D,IADrB,cACNyM,EADM,gBAEWA,EAAInQ,OAFf,gBAEJ0H,EAFI,EAEJA,KACRqa,EAAmBra,GAHP,2CAAH,qDAab,OAPArH,qBAAU,WACN0d,MACD,CAAC4D,IAOA,qBAAKphB,UAAU,iBAAf,SACG,eAAC0R,GAAA,EAAD,CAAMC,WAAS,EAACzR,MAAO,CAACkL,gBAAgB,aAAcqW,UAAU,QAASpa,OAAO,uBAAhF,UACK,cAACqK,GAAA,EAAD,CAAM7B,MAAI,EAACmK,GAAI,EAAG9Z,MAAO,CAAGmH,OAAO,uBAAnC,SACI,cAAC,GAAD,CAAW+Z,YAAaA,EAAaD,eAAgBA,MAEzD,cAACzP,GAAA,EAAD,CAAM7B,MAAI,EAACmK,GAAI,EAAf,SACKuH,GAAuC,OAApBA,EAA4B,cAAC,GAAD,CAAcpa,KAAMoa,EAAiBxC,SAAUA,IAC9F,cAAC,GAAD,YCIN2C,GAzBA,WAAO,IAAD,EACWxiB,oBAAS,GADpB,mBACVC,EADU,KACFC,EADE,KAKjB,OACI,mCACA,eAAC,IAAD,WACCD,GAAU,cAAC,GAAD,IACP,eAAC,IAAD,WACA,cAAC,IAAD,CAAOwiB,KAAK,YAAYzJ,UAAWoJ,KAE/B,cAAC,IAAD,CAAOK,KAAK,eAAezJ,UAAW0J,EAAUhE,GAASxe,KACzD,cAAC,IAAD,CAAOuiB,KAAK,UAAUE,OAAQ,kBAAM,cAAC,GAAD,CAAQziB,UAAWA,OACvD,cAAC,IAAD,CAAOuiB,KAAK,UAAUE,OAAQ,kBAAM,cAAC,GAAD,CAASziB,UAAWA,OACxD,cAAC,IAAD,CAAOuiB,KAAK,UAAUE,OAAQ,kBAAM,cAAC,GAAD,CAASziB,UAAWA,OAGxD,cAAC,IAAD,CAAOuiB,KAAK,IAAIzJ,UAAW0J,EAAUtV,GAAMlN,c,4BC5B3D,IAGe0iB,GAHIC,aAAgB,CAC/BjR,MCJW,WAA+C,IAAzBkR,EAAwB,uDAAlB,CAACxe,KAAK,IAAI2C,EAAQ,uCACzD,OAAOA,EAAOlB,MACV,IAAK,YACD,OAAO,2BAAI+c,GAAX,IAAiBxe,KAAK,2BAAIwe,EAAMxe,MAAQ2C,EAAO6V,WACnD,QACI,OAAOgG,MCQJC,GATI,WACf,IAAMC,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAMvG,OAJUC,aACVR,GACAI,EAAiBK,aAAgBC,SCHzCC,IAASZ,OACP,cAAC,IAAMa,WAAP,UACC,cAAC,KAAD,CAAUC,MAAOV,KAAjB,SACC,cAACW,GAAD,QAGFC,SAASC,eAAe,W","file":"static/js/main.e87c5157.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react' // imrse\nimport { useHistory } from \"react-router-dom\"\n        \nexport default function authgaurd(ComposedComponent, setIsAuthenticate) {\n    const AuthenticationCheck = (props) => {\n        const history = useHistory()\n        const [isAuth, setIsAuth] = useState(false)\n\n        const isUserAuthenticate = async () => {\n          const response = await fetch('/auth/isauth')\n          const { success } = await response.json()\n          if (success) {\n            setIsAuthenticate(true)\n            console.log('auth');\n            setIsAuth(true) \n          }\n          else {\n            setIsAuthenticate(false)\n            setIsAuth(false)\n            console.log('not auth');\n            history.push('/signin')\n          } \n        }     \n\n        useEffect(() => {\n           isUserAuthenticate()\n        }, [])\n        \n          return(\n            <>\n            { isAuth ?\n             <ComposedComponent {...props} /> \n            : null}\n            </>\n            )\n        }\n    return AuthenticationCheck\n}\n    \n        ","import React from 'react'\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport './style.css'\nconst Loader = () => {\n    return (\n        <div>\n            <div className=\"overlay\"></div>\n            <div className=\"loaders\"> <InstagramIcon fontSize=\"large\" style={{fill:\"grey\"}}/> </div>\n        </div>\n    )\n}\n\nexport default Loader\n","import React, { useState, useEffect } from 'react';\n// Formik\nimport { Formik, Form} from 'formik';\nimport * as Yup from 'yup';\n// Cloudinary\nimport {Image} from 'cloudinary-react';\n\n// material ui icons\nimport ShareIcon from '@material-ui/icons/Share';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ImageIcon from '@material-ui/icons/Image';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n// Bootstrap\nimport Modal from 'react-bootstrap/Modal'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Input, IconButton, Card, CardActions, CardHeader, CardMedia, Collapse, Avatar,TextField, Button } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display:'flex',\n      justifyContent:'center',\n      marginTop:'30px'\n    },\n    previewcard:{\n      width:'300px',\n      height:'340px',\n      margin:'auto'\n    },\n    media: {\n      height: '550px',\n      width:'550px',\n      paddingTop: '56.25%', // 16:9\n    },\n    previewmedia: {\n      width:'300px',\n      height:'200px'\n    },\n    modalHeader: {\n     display: 'flex',\n     justifyContent: 'center',\n     fontWeight:'bold',\n    },\n    imageIcon: {\n        marginBottom:'8px',\n        marginRight:'5px'\n      },\n   \n  }))\n  \n\nconst StoryModal = ({storyModal, setStoryModal}) => {\n    const classes = useStyles()\n    const [fileName, setFileName] = useState('')\n    const [previewSource, setPreviewSource] = useState('')\n    const [isProfile, setIsProfile] = useState(false)\n    const [openAlert, setOpenAlert] = useState(false)\n    const [isBedAlert, setIsBedAlert] = useState(false)\n    const [message, setMessage] = useState('')\n    const user = JSON.parse(localStorage.getItem('user'))\n\n    const closeModal = () => setStoryModal(false)\n     // formik validation\n    const validationSchema = Yup.object().shape({\n        photo:Yup.string()\n        .required('photo is required')\n    })\n\n    // Edit the profile image\n    const editImage =  (values) => {\n        values.fileName = fileName\n        if(typeof values.photo === 'object' ) {\n        const reader = new FileReader()\n        reader.readAsDataURL(values.photo)\n        reader.onloadend = () => {\n        setPreviewSource(reader.result)\n        values.photo = reader.result\n        addNewStory(values)\n        }\n        } else {\n            addNewStory(values)\n        }\n    }\n\n      // Add new Post\n  const addNewStory = async (values) => {\n    const newStory = {\n      photo: values.photo,\n      UserId : JSON.parse(localStorage.getItem('user')).id,\n      fileName: values.fileName,\n    }\n      try {\n        const response = await fetch('/story', { \n        method: 'POST',\n        headers: {\n            'Content-Type':'application/json'\n        },\n        body: JSON.stringify(newStory)\n      })\n\n      const data = await response.json()\n      if(data.story){\n        setIsBedAlert(false)\n        setMessage('Story Added')\n        setOpenAlert(true)\n        setTimeout(() =>  {\n            closeModal()\n            setOpenAlert(false)\n        },1000)\n      } else {\n        setIsBedAlert(true)\n        setMessage(data.error)\n        setOpenAlert(true)\n      }\n\n    } catch (error) {\n        console.error(error)\n      }\n}\n\n       // Makes the preview image\n       const handleChangeImage = (e,setFieldValue) => {\n        const reader = new FileReader()\n        setFieldValue(\"photo\", e.target.files[0])\n        if(e.target.files.length === 0) {\n          setIsProfile(false)\n          setFileName('')\n          setPreviewSource('')\n        } \n        else {\n          reader.readAsDataURL(e.target.files[0])\n          reader.onloadend = () => {\n            setPreviewSource(reader.result)\n          }\n          setIsProfile(true)\n          setFileName(e.target.files[0].name)\n        }\n      }\n\n    return (\n        <>\n               <Modal size=\"lg\" centered show={storyModal} onHide={closeModal}>\n                 <Modal.Header className={classes.modalHeader}> <Modal.Title style={{fontWeight:'700'}}> Add new story </Modal.Title> </Modal.Header>\n                 <Modal.Body>\n                 <Formik \n                   initialValues={{photo:'',content:''}}\n                   validationSchema={validationSchema}\n                   onSubmit={ editImage }>\n                    {({ errors, touched, setFieldValue }) => (\n                      <Form style={{textAlign:'center'}}>\n                      <Input id=\"file\" className=\"inputfile\" type=\"file\" name=\"photo\" onChange={(e) => handleChangeImage(e,setFieldValue )} hidden/> \n                        <Button className={classes.profileBtn} color='primary'  variant=\"outlined\"><ImageIcon className={classes.imageIcon}/><label htmlFor=\"file\">{fileName ? `${fileName} UPLOADED` : 'UPLPOAD IMAGE'} </label></Button>\n                      {errors.photo && touched.photo ?  <div className=\"error\">{errors.photo}</div>  : null}\n                        <Collapse in={openAlert}>\n                            <Alert \n                            style={{margin:'10px'}}\n                            severity={isBedAlert ? \"error\": \"success\"}\n                            action={ <IconButton color=\"inherit\" size=\"small\" onClick={() => setOpenAlert(false) }> <CloseIcon fontSize=\"inherit\" /> </IconButton>}>\n                            {message}\n                            </Alert>\n                          </Collapse>\n                        <Button style={{margin:'10px'}} variant=\"outlined\" color=\"primary\" type=\"Submit\">Submit</Button>\n                      </Form>\n                    )}\n                  </Formik>\n                 </Modal.Body>\n            </Modal>\n        </>\n    )\n}\n\nexport default StoryModal\n","import React, { useState, useEffect } from 'react'\nimport StoryModal from './StoryModal'\n// material ui\nimport { Avatar } from '@material-ui/core';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n// react-stories\nimport Stories from 'react-insta-stories';\n// Cloudinary\nimport {Image} from 'cloudinary-react';\n// css\nimport './style.css'\n\nconst Story = ({ storiesUsers }) => {\n    const [storyUsers, setStoryUsers] = useState([])\n    const [stories, setStories] = useState([])\n    const [storyModal, setStoryModal] = useState(false)\n\n    const openStory = (stories,username,profile) => {\n       const storiesArr = []\n       stories.forEach(story => {\n           const photoArr = story.photo.split(\"upload/\")\n           const storyObj = {\n                url:`${photoArr[0]}upload/w_432,h_500,c_scale/${photoArr[1]}`,\n                header: {\n                        heading: username,\n                        profileImage: profile , \n                    }\n                }\n                storiesArr.push(storyObj)    \n    })\n    setStories(storiesArr)\n}\n\n    useEffect(() => {\n        setStoryUsers(storiesUsers)\n    }, [])\n  \n   \n    return (\n    <StylesProvider>\n        {stories.length !== 0 && \n        <>\n        <div className=\"overlays\"></div>\n        <div style={{position: 'fixed', top:'20%', left:'30%', zIndex:'2'}}>\n          <Stories  width={432} height={500} stories={stories} onAllStoriesEnd={() => setStories([])}/>\n        </div>\n        </>\n        }\n        <div className=\"stories\">\n            <div className=\"story_users\">\n                {storyUsers && storyUsers.map(user => (\n                    <div key={user.id} className=\"story-div\"> <Avatar style={{height:'70px', width:'70px', border:'2px solid #D82B7D'}} onClick={() => openStory(user.Stories,user.username,user.profileUrl)}>\n                    <Image cloudName=\"malachcloud\" publicId={user.profile} width=\"70\" height=\"70\" crop=\"scale\" />\n                    </Avatar>\n                    <span className=\"story_username\">{user.username}</span>\n                    </div>\n                ))}\n        </div>\n        <div className=\"add_Story_btn\" id=\"stepThree\" title=\"Add story\"> <AddCircleIcon onClick={() => setStoryModal(true)} style={{fill:'#ED4A4D'}} fontSize=\"large\"/> </div>\n    </div>\n    <StoryModal storyModal={storyModal} setStoryModal={setStoryModal}/>\n</StylesProvider>\n    ) \n}\n\nexport default Story\n\n ","import React, { useState } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { Button } from '@material-ui/core'\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\n\nconst NewUserModal = ({ stepsEnabled ,setStepsEnabled })  =>  {\n    const user = JSON.parse(localStorage.getItem('user'))\n    const [show, setShow] = useState(true)\n\n    // Close the modal\n    const handleClose = () => setShow(false)\n \n    // Start the introduction\n    const hanleIntro = () => {\n        handleClose() \n        toggleSteps()\n      \n    }\n    \n     const toggleSteps = () => {\n        setStepsEnabled(true)\n      }\n\n    return (\n      <>\n        <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false} style={{textAlign:'center'}}>\n          <Modal.Header closeButton>\n    \n            <Modal.Title style={{margin:'auto',fontWeight:'600'}}>Hello {user.username} </Modal.Title>\n     \n          </Modal.Header>\n          <Modal.Body  className=\"world\" >\n            Welcome to instagram! the most popular social media in the world with more than 100 million users!\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"outlined\" color=\"primary\" onClick={() => hanleIntro() } style={{margin:'auto'}}>\n              Let's get started! <DoneOutlineIcon style={{margin:'10px 10px 12'}}/>\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\nexport default NewUserModal;","import React, { useState } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { Button } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { FacebookShareButton, FacebookIcon, FacebookMessengerShareButton, FacebookMessengerIcon, \n        EmailIcon, TwitterIcon, TwitterShareButton, TelegramShareButton, TelegramIcon,\n        WhatsappShareButton, WhatsappIcon, EmailShareButton } from 'react-share' \nimport './style.css'\n\nconst NewUserModal = ({ shareModalOpen ,setShareModalOpen })  =>  {\n  \n    // Close the modal\n    const handleClose = () => setShareModalOpen(false)\n   \n    return (\n      <>\n        <Modal show={shareModalOpen} onHide={handleClose} backdrop=\"static\" keyboard={false} style={{textAlign:'center',width:'30%'}}>\n          <Modal.Header closeButton>\n            <Modal.Title style={{fontWeight:'600'}}>Share Post </Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"world\">\n\n          <FacebookShareButton className=\"icon\" url='https://www.instagram.com/' quote=\"Come and visit insragram!\">\n            <FacebookIcon size={32} round />\n          </FacebookShareButton>\n\n          <FacebookMessengerShareButton className=\"icon\" url='https://www.instagram.com/' appId=\"521270401588372\">\n            <FacebookMessengerIcon size={32} round />\n          </FacebookMessengerShareButton>\n\n          <TwitterShareButton className=\"icon\" url='https://www.instagram.com/' title=\"come alone man\">\n            <TwitterIcon size={32} round />\n          </TwitterShareButton>\n\n          <TelegramShareButton className=\"icon\" url='https://www.instagram.com/' title='he man'>\n            <TelegramIcon size={32} round />\n          </TelegramShareButton>\n\n          <WhatsappShareButton className=\"icon\" url='https://www.instagram.com/' title='come and visit instagram!' separator=\":\">\n            <WhatsappIcon size={32} round />\n          </WhatsappShareButton>\n\n          <EmailShareButton  className=\"icon\" url='https://www.instagram.com/' subject='come and visit instagram' body=\"body\" >\n            <EmailIcon size={32} round />\n          </EmailShareButton>\n\n        </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"outlined\" color=\"secondary\" onClick={() => handleClose() } style={{margin:'auto'}}>\n             Close <CancelIcon style={{margin:'10px 10px 12'}}/>\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\nexport default NewUserModal;","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport Loader from '../loader/Loader'\nimport Story from '../story/Story'\nimport NewUserModal from './newUserModal/NewUserModal'\nimport ShareModal from './shareModal/ShareModal'\n// material ui components\nimport { Divider, Grid, Input, IconButton, Card, CardActions, CardContent, CardHeader, CardMedia, Collapse, Avatar, Typography, TextField, Button, InputAdornment, Hidden, Tooltip  } from '@material-ui/core';\nimport { makeStyles, StylesProvider } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\n// material ui icons\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport ShareIcon from '@material-ui/icons/Share';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ImageIcon from '@material-ui/icons/Image';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MoodIcon from '@material-ui/icons/Mood';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n// Formik\nimport { Formik, Form} from 'formik';\nimport * as Yup from 'yup';\n// Cloudinary\nimport {Image} from 'cloudinary-react';\n// Bootstrap\nimport Modal from 'react-bootstrap/Modal'\n// intro js\nimport { Steps } from 'intro.js-react';\nimport 'intro.js/introjs.css';\n// Css\nimport './style.css'\n\n// moment.js\nconst moment = require('moment')\n\n// material ui style\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display:'flex',\n    justifyContent:'center',\n    marginTop:'30px'\n  },\n  previewcard:{\n    width:'300px',\n    height:'340px',\n    margin:'auto'\n  },\n  media: {\n    height: '550px',\n    width:'550px',\n    paddingTop: '56.25%', // 16:9\n  },\n  previewmedia: {\n    width:'300px',\n    height:'200px'\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  modalHeader: {\n   display: 'flex',\n   justifyContent: 'center',\n   fontWeight:'bold',\n  },\n  fab: {\n    position:'fixed',\n    bottom: '10px',\n    left: '75%',\n    whiteSpace: 'nowrap',\n    zIndex: '50px',\n    borderRadius:'20px',\n    backgroundColor:'lightblue'\n  },\n  profileBtn: {\n    paddingTop:'10px',\n    marginTop:'10px',\n    marginBottom:'10px'\n  },\n  imageIcon: {\n    marginBottom:'8px',\n    marginRight:'5px'\n  },\n  extendedIcon: { \n    marginRight: theme.spacing(1),\n  },\n  likes: {\n    color: \"#262626\",\n    fontSize:'14px',\n    fontWeight: '600',\n  },\n  comment: {\n    display:'flex',\n    alignItems:'center',\n    marginTop:'18px',\n    color: \"#262626\",\n    fontSize:'14px',\n    fontWeight: '600',\n  },\n  AddCommenttextField: {\n    flexBasis: 280,\n    margin: '20px 2px',\n    width:'100%',\n    padding:'1% 0%',\n    \n  },\n  divider: {\n    margin:'15px 0px'\n  },\n  iconButton: {\n    '&:hover': {\n      color:'red'\n    },\n    '&:click': {\n      outline: 'none'\n    },\n  },\n  suggestion: {\n    position: 'fixed',\n    right: '100px',\n    top: '100px',\n    display:'flex',\n    flexDirection: 'column',\n    width: '100%',\n    overflowY:'auto',\n    height:'100%',\n    paddingRight:'20px',\n    scrollbarWidth: 'none'\n  },\n  story: {\n    height:'118px',\n    width:'614px',\n    display:'flex',\n    marginLeft:'360px'\n  }\n}))\n\n const Home = () => {\n  const classes = useStyles()\n  const user = JSON.parse(localStorage.getItem('user'))\n  const [posts, setPosts] = useState([])\n  const [shareModalOpen, setShareModalOpen] = useState(false)\n  const [isBedAlert, setIsBedAlert] = useState(false)\n  const [commentValue, setCommentValue] = useState('')\n  const [previewSource, setPreviewSource] = useState('')\n  const [suggestionUsers, setSuggestionUsers] = useState([])\n  const [isFollowed, setIsFollowed] = useState(false)\n  const [isLike, setIsLike] = useState(false)\n  const [storiesList, setStoriesList] = useState([])\n  const [storiesUsers, setStoriesUsers] = useState([])\n  const [isProfile, setIsProfile] = useState(false)\n  const [message, setMessage] = useState('')\n  const [openAlert, setOpenAlert] = useState(false)\n  const [fileName, setFileName] = useState('')\n  const [emailModal, setEmailModal] = useState(false)\n  // intro js states\n  const [firstEntry, setFirstEntry] = useState(false)\n  const [stepsEnabled, setStepsEnabled] = useState(false)\n  const [initialStep, setInitialStep] = useState(0)\n  const [steps, setSteps] = useState([\n      { element:\"#stepOne\", intro: \"Start following users to see their special moments and experiences 😎\", position: 'left', tooltipClass: 'myTooltipClass' },\n      { element:\"#stepTwo\", intro: \"Add your own photo's and video's and start share your feelings with the world! 📷\", position: 'left', tooltipClass: 'myTooltipClass' },\n      { element:\"#stepThree\", intro: \"Upload a story daily to update your followers on how you are doing today 🥳. The story is completely gone after 24 hours\", position: 'left', tooltipClass: 'myTooltipClass' },\n  ])\n\n  // Modal functions\n  const closeModal = () => setEmailModal(false)\n  const openModal = () => setEmailModal(true)\n\n  // formik validation\n  const validationSchema = Yup.object().shape({\n    photo:Yup.string()\n    .required('photo is required'),\n    content:Yup.string()\n    .required('content is required')\n  })\n\n// Post functions\n\n// Edit the profile image\n  const editImage =  (values) => {\n    values.fileName = fileName\n    if(typeof values.photo === 'object' ) {\n    const reader = new FileReader()\n    reader.readAsDataURL(values.photo)\n    reader.onloadend = () => {\n      setPreviewSource(reader.result)\n      values.photo = reader.result\n      addNewPost(values)\n    }\n    } else {\n      addNewPost(values)\n    }\n  }\n\n  // Add new Post\n  const addNewPost = async (values) => {\n      const newPost = {\n        photo: values.photo,\n        likes: 0,\n        content: values.content,\n        UserId : JSON.parse(localStorage.getItem('user')).id,\n        fileName: values.fileName,\n        date: moment().format('MMMM Do, h:mm a').toString()\n      }\n        try {\n          const response = await fetch('/post', { \n          method: 'POST',\n          headers: {\n              'Content-Type':'application/json'\n          },\n          body: JSON.stringify(newPost)\n        })\n        const data = await response.json()\n        if(data.post){\n          console.log(data.post);\n          const newPostArray = [...posts]\n          const postObj = {\n            index: posts.length,\n            publisher_id: user.id,\n            publisher_username: user.username,\n            publisher_profile: user.profile,\n            post_id: data.post.id,\n            post_content: data.post.content,\n            post_likes: [],\n            post_likes_old: [],\n            post_likeby: [],\n            post_photo: data.post.photo,\n            post_date: data.post.date,\n            post_comments: []\n          }\n          newPostArray.push(postObj)\n          console.log(newPostArray)\n          setPosts([...newPostArray])\n          setIsBedAlert(false)\n          setMessage('Post Added!')\n          setOpenAlert(true)\n          setTimeout(() => {\n            setOpenAlert(false)\n            closeModal()\n          },1000)\n        } else {\n          setIsBedAlert(true)\n          setMessage(data.error)\n          setOpenAlert(true)\n        }\n\n      } catch (error) {\n          console.error(error)\n        }\n  }\n\n  // Makes the preview image\n  const handleChangeImage = (e,setFieldValue) => {\n      const reader = new FileReader()\n      setFieldValue(\"photo\", e.target.files[0])\n      if(e.target.files.length === 0) {\n        setIsProfile(false)\n        setFileName('')\n        setPreviewSource('')\n      } \n      else {\n        reader.readAsDataURL(e.target.files[0])\n        reader.onloadend = () => {\n          setPreviewSource(reader.result)\n        }\n        setIsProfile(true)\n        setFileName(e.target.files[0].name)\n      }\n  }\n\n  // Add comment \n  const sendComment = async (PostId, index) => {\n    const newArr = posts\n    const renderComment = {\n      time: moment().startOf('hour').fromNow().toString(),\n      content: commentValue,\n      commenter:JSON.parse(localStorage.getItem('user')).username,\n      commenter_profile:JSON.parse(localStorage.getItem('user')).profile,\n    }\n    console.log(newArr[index].post_comments);\n    newArr[index].post_comments.push(renderComment)\n    console.log(newArr[index].post_comments);\n    setPosts([...newArr])\n\n    const comment = {\n      time: moment().startOf('hour').fromNow().toString(),\n      content: commentValue,\n      PostId,\n      UserId: JSON.parse(localStorage.getItem('user')).id,\n    }\n    try {\n      const response = await fetch('/comment', { \n      method: 'POST',\n      headers: {\n          'Content-Type':'application/json'\n      },\n      body: JSON.stringify(comment)\n    })\n    const data = await response.json()\n    if(data.comment){\n      // console.log(data.comment)\n    } else {\n      console.log('error')\n    }\n  } catch (error) {\n      console.error(error)\n    }\n  }\n  // Add Like\n  const addLike = async (id,index, isLike) => {\n    try {\n      const newArr = posts\n      let add\n      if(!isLike) { \n        newArr[index].post_likeby.push(user.username)\n        newArr[index].like = true\n        setPosts([...newArr])\n        add = true\n      } else {\n        console.log('remove');\n        newArr[index].post_likeby =  newArr[index].post_likeby.filter(like => like !== user.username)\n       \n        newArr[index].like = false\n        setPosts([...newArr])\n        add = false\n      }\n      await fetch('/post/like', { \n        method: 'POST',\n        headers: {\n            'Content-Type':'application/json'\n        },\n        body: JSON.stringify({ add, PostId:id, UserId:user.id })\n      })\n    } catch (error) {\n      console.log(error)\n    }\n \n  }\n  // Get all the posts\n  const getPosts = async () => {\n    const postsArr = []\n    let index = 0\n    const res = await fetch('/post')\n    const data = await res.json()\n    data.forEach((item) => {\n      if(user.Followings.find(followed => followed.followed_id === item.publisher_id) || user.id === item.publisher_id || item.publisher_username === \"instagram\"){\n        item.posts.forEach((post) => {\n          const post_likeby = []\n          post.post_likes.forEach(like => post_likeby.push(like.like_username))\n          const isLike = Boolean(post.post_likes.find(likedUser => Number(likedUser.like_userid) === Number(user.id)))\n          const postObj = {\n            index,\n            publisher_id: item.publisher_id,\n            publisher_username: item.publisher_username,\n            publisher_profile: item.publisher_profile,\n            post_id: post.post_id,\n            post_content: post.post_content,\n            post_likes: post.post_likes.length,\n            post_likes_old: post.post_likes.length,\n            post_likeby,\n            post_photo: post.post_photo,\n            post_date: post.post_date,\n            like:isLike,\n            post_comments: post.post_comments\n          }\n          index ++\n          postsArr.push(postObj)\n         \n        })\n      }\n    })\n    console.log(postsArr);\n    setPosts(postsArr)\n}\n\nconst getStories = async () => {\n  const res = await fetch('/story')\n  const { stories } = await res.json()\n  const storyArr = []\n  stories.forEach(story => {\n    if(story.User.Followers.find(follower => Number(follower.follower_id) === Number(user.id)) || Number(story.User.id) === Number(user.id) || story.User.username === \"instagram\") {\n      if(!(storyArr.find(user => user.username === story.User.username))) {\n        storyArr.push(story.User)\n      }\n    }\n  })\n  \n  setStoriesUsers(storyArr)\n}\n\n// Get all suggestion users\nconst getSuggestionUsers = async () => {\n  try {\n    const res = await fetch('/user')\n    const { users } = await res.json()\n    \n    const suggestionArr = []\n   \n    users.forEach(suggestionUser => {\n      if(!(suggestionUser.Followers.find(follower => Number(follower.follower_id) === Number(user.id))) && (Number(suggestionUser.id) !== Number(user.id)) && (suggestionUser.username !== 'instagram')){\n        suggestionArr.push(suggestionUser)\n      }\n    })\n \n\n    setSuggestionUsers(suggestionArr)\n \n} catch (error) {\n    console.error(error)\n  }\n}\n\nconst setFollow = async (id) => {\n      // make follow\n          const res = await fetch('/user/follow', {\n          method: 'POST',\n          headers: {\n              'Content-Type':'application/json'\n          },\n          body: JSON.stringify({userWhoWantToFollow: user.id , userWhoGetsFollower: id })\n        })\n        const data = await res.json()\n        if(data.success) {\n            const newSuggestedUserArr = suggestionUsers.filter(user => user.id !== id)\n            setSuggestionUsers([...newSuggestedUserArr])\n            user.Followings.push({UserId:Number(user.id), followed_id: Number(id)})\n            localStorage.setItem('user', JSON.stringify(user))\n        }\n}\n\n// intro js functions\nconst onExit = () => {\n  setStepsEnabled(false)\n  setFirstEntry(false)\n}\n  useEffect(() => {\n    if(user.newUser) {\n      setFirstEntry(true)\n      user.newUser = false\n      localStorage.setItem('user',JSON.stringify(user))\n    }\n     else {\n      setFirstEntry(false)\n     }\n   \n    getPosts()\n    getStories()\n    getSuggestionUsers()\n  \n  }, [])\n\n\n  return (\n    <>\n    {firstEntry ? \n    <>\n    <NewUserModal stepsEnabled={stepsEnabled} setStepsEnabled={setStepsEnabled}/>\n    <Steps enabled={stepsEnabled} steps={steps} initialStep={initialStep} onExit={onExit}/>\n    </>\n     : null}\n   <StylesProvider injectFirst>\n   <Grid container>\n   <Grid item className={classes.story} sm={4} md={4}>\n    {storiesUsers.length !== 0  &&  <Story storiesUsers={storiesUsers} />}\n   </Grid>\n\n       {posts ?  posts.slice(0).reverse().map(post => (\n         <Grid item sm={12} md={10} className={classes.root} >\n         <Card className={classes.card}>\n          <CardHeader\n            avatar={ <Avatar><Image cloudName=\"malachcloud\" publicId={post.publisher_profile} width=\"70\" height=\"40\" crop=\"scale\" /> </Avatar>}\n            action={ <IconButton> <MoreVertIcon /> </IconButton> }\n            title={<Link to={`/profile/${post.publisher_id}`}><span className={classes.likes}>{post.publisher_username}</span></Link>}\n          />\n\n          <CardMedia className={classes.media} image={post.post_photo}></CardMedia>\n\n          <CardActions disableSpacing>\n            <IconButton className={classes.iconButton} onClick={() => addLike(post.post_id, post.index, post.like)}>{post.like ? <FavoriteIcon style={{fill: \"red\"}}/> : <FavoriteBorderOutlinedIcon /> } </IconButton>\n            <IconButton> <ChatBubbleOutlineIcon/> </IconButton>\n            <IconButton > <ShareIcon onClick={() => setShareModalOpen(true)}/> </IconButton>\n            <ShareModal shareModalOpen={shareModalOpen} setShareModalOpen={setShareModalOpen} /> \n          </CardActions>\n\n          <CardContent>\n          <Typography className={classes.likes}> \n          {post.post_likeby.length === 0 && 'be the first one to like this post!'}\n          {post.post_likeby.length === 1 && `liked by ${post.post_likeby[0] === user.username ? 'you' : post.post_likeby[0] }`}\n          {post.post_likeby.length === 2 && `liked by ${post.post_likeby[0] === user.username ? 'you' : post.post_likeby[0] }, ${post.post_likeby[1] === user.username ? 'you' : post.post_likeby[1] }`}\n          {post.post_likeby.length > 2 && `liked by ${post.post_likeby[0] === user.username ? 'you' : post.post_likeby[0] }, ${post.post_likeby[1] === user.username ? 'you' : post.post_likeby[1] } and ${post.post_likeby.length - 2} others`}\n          </Typography>\n          <Typography className={classes.likes}><Link to={`/profile/${post.publisher_id}`} style={{color:'black'}}> {post.publisher_username} </Link> <span className=\"post-content\"> {post.post_content} </span></Typography> \n          <Divider className={classes.divider}/>\n          {post.post_comments.map(comment => (\n            <Typography  className={classes.comment}> \n            <Avatar><Image cloudName=\"malachcloud\" publicId={comment.commenter_profile} width=\"80\" /> </Avatar>\n            <Link to={`/profile/${comment.commenter_id}`} style={{color:'black'}}> <span className='commeter'>{comment.commenter} </span> </Link>\n            <span className=\"post-content\">{comment.content}</span>\n            </Typography>\n          ))}\n          <div className=\"post-date\">{post.post_date}</div>\n          <Divider className={classes.divider}/>\n          <TextField className={classes.AddCommenttextField} variant=\"outlined\" type=\"text\" label=\"Add a comment...\"\n          onChange={ e => setCommentValue(e.target.value)}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <IconButton> <MoodIcon/></IconButton>\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <Button onClick={() => sendComment(post.post_id, post.index)} color=\"primary\">Post</Button>\n              </InputAdornment>\n            ),\n          }}/>\n          </CardContent>\n        </Card>\n      </Grid>   \n       )):  <Loader /> }\n        <Hidden smDown>\n       <Grid item className={classes.suggestion} md={3}>\n       <div id=\"stepOne\"> <h6 className=\"user-suggested-headline\">Suggestions For You</h6> </div>\n         \n       {suggestionUsers && suggestionUsers.map(user => (\n        <div>\n        <CardHeader \n            avatar={ <Avatar><Image cloudName=\"malachcloud\" publicId={user.profile} width=\"70\" height=\"40\" crop=\"scale\" /> </Avatar>}\n            action={ <IconButton style={{marginRight:'10px'}} onClick={() => setFollow(user.id)}> <h6 className=\"user-suggested-follow\">Follow</h6> </IconButton> }\n            title={<Link to={`/profile/${user.id}`}><span className={classes.likes}>{user.username}</span></Link>}\n            subheader=\"New to Instagram\"\n            style={{width:'110%'}}\n          />\n           </div>\n       ))}\n       </Grid>\n       </Hidden>\n\n      {/* Fab */}\n      <Fab id=\"stepTwo\" color=\"primary\"  className={classes.fab} onClick={() => openModal()} title=\"Add new post\"> \n        <AddIcon />\n      </Fab>\n      {/* Share Modal */}\n   \n    \n       {/* Modal */}\n       <Modal size=\"lg\" centered show={emailModal} onHide={closeModal} style={{margin:'70px auto 30px' , maxHeight:'90%', overflowY:'auto'}}>\n                 <Modal.Header className={classes.modalHeader}> <Modal.Title style={{fontWeight:'700'}}> Add new post </Modal.Title> </Modal.Header>\n                 <Modal.Body>\n                 <Formik \n                   initialValues={{photo:'',content:''}}\n                   validationSchema={validationSchema}\n                   onSubmit={ editImage }>\n                    {({ errors, touched, setFieldValue }) => (\n                      <Form style={{textAlign:'center'}}>\n                      <Input id=\"file\" className=\"inputfile\" type=\"file\" name=\"photo\" onChange={(e) => handleChangeImage(e,setFieldValue )} hidden/> \n                    <Button className={classes.profileBtn} color='primary'  variant=\"outlined\"><ImageIcon className={classes.imageIcon}/><label htmlFor=\"file\">{fileName ? `${fileName} UPLOADED` : 'UPLPOAD IMAGE'} </label></Button>\n                      {errors.photo && touched.photo ?  <div className=\"error\">{errors.photo}</div>  : null}\n                      {previewSource ? \n                        <Card className={classes.previewcard}>\n                          <CardHeader avatar={ <Avatar><Image cloudName=\"malachcloud\" publicId={user.profile} width=\"80\" crop=\"scale\" /> </Avatar>} action={ <IconButton> <MoreVertIcon /> </IconButton> } title={<span className={classes.likes}>{user.username}</span>}/>\n                          <CardMedia className={classes.previewmedia} image={previewSource}></CardMedia>\n                          <CardActions disableSpacing>\n                            <IconButton className={classes.iconButton}> <FavoriteIcon style={{fill: \"red\"}}/> </IconButton>\n                            <IconButton> <ChatBubbleOutlineIcon/> </IconButton>\n                            <IconButton > <ShareIcon/> </IconButton>\n                          </CardActions>\n                       </Card>\n                      : null}\n                        <TextField  multiline rows={4} variant=\"outlined\" margin=\"normal\" fullWidth label=\"add description\" name=\"content\" onChange={(event) => setFieldValue(\"content\", event.target.value)}/>\n                        {errors.content && touched.content ?  <div className=\"error\">{errors.content}</div>  : null}\n                          {/* Alert error */}\n                        <Collapse in={openAlert}>\n                            <Alert \n                            style={{margin:'10px'}}\n                            severity={isBedAlert ? \"error\": \"success\"}\n                            action={ <IconButton color=\"inherit\" size=\"small\" onClick={() => setOpenAlert(false) }> <CloseIcon fontSize=\"inherit\" /> </IconButton>}>\n                            {message}\n                            </Alert>\n                          </Collapse>\n                        <Button  variant=\"outlined\" color=\"primary\" type=\"Submit\">Submit</Button>\n                      </Form>\n                    )}\n                  </Formik>\n                 </Modal.Body>\n            </Modal>\n      </Grid>\n       </StylesProvider>\n   \n    </>\n  )\n}\n\nexport default Home\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Popper, Divider } from '@material-ui/core';\n// Cloudinary\nimport {Image} from 'cloudinary-react';\nimport './style.css'\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    margin:'16px',\n    border: '1px solid lightgrey',\n    padding: theme.spacing(1),\n    backgroundColor: 'white',\n  },\n  divider: {\n    background:'black'\n  }\n}));\n\nexport default function SimplePopper({ users, anchorEl, open, setUsers }) {\n  const classes = useStyles();\n  return (\n    <div>\n    {users.users ? \n    users.users.length !== 0 ? \n        <Popper  open={open} anchorEl={anchorEl} style={{width:'300px'}}>\n        <div className={classes.paper}>{users.users && users.users.map(user => (\n           <Link to={`/profile/${user.id}`} style={{textDecoration:'none'}} onClick={() => setUsers([])}>\n            <div className=\"userDiv\">\n                <div > <Image className=\"userimage\" cloudName=\"malachcloud\" publicId={user.profile} width=\"60\" height=\"60\" crop=\"scale\" />  </div>\n                <div className=\"username\">{user.username}</div>\n            </div>\n         </Link>\n        \n        ))}\n   \n        </div>\n      </Popper>\n    :null : null}\n     \n    </div>\n  );\n}","import React, { useState, useEffect } from 'react'\nimport Poper from './poper/Poper'\nimport InputBase from '@material-ui/core/InputBase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Popper from '@material-ui/core/Popper';\n\nconst useStyles = makeStyles((theme) => ({\n    search: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: \"whitesmoke\",\n      '&:hover': {\n        backgroundColor: 'lightgrey',\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: '0',\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch',\n      },\n    },\n   \n    \n  }))\n\nfunction Search() {\n  \n    const [searchValue, setSearchValue] = useState('')\n    const [users, setUsers] = useState([])\n    const [anchorEl, setAnchorEl] = useState(null)\n    const classes = useStyles()\n    const open = Boolean(anchorEl)\n\n    const handleChange = (e) => {\n        setSearchValue(e.target.value)\n        if(users.users === undefined) {\n            console.log('not');\n            setAnchorEl(null)\n        } else if(users.users.length === 0) {\n            setAnchorEl(null)\n        } else {\n            setAnchorEl(e.currentTarget)\n        }\n    }\n\n    const findUsers = async () => {\n        const res = await fetch(`/user/users/${searchValue}`)\n        const data = await res.json()\n        setUsers(data)\n    }\n \n    useEffect(() => {\n       findUsers()\n    }, [searchValue])\n\n    return (\n        <>\n           <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              onChange={e => handleChange(e)}\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n            \n            />\n              <Poper users={users} open={open} anchorEl={anchorEl} setUsers={setUsers}/>\n          </div>\n        </>\n    )\n}\n\nexport default Search\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n// Components\nimport Search from '../search/Search'\n// material ui\nimport { makeStyles } from '@material-ui/core/styles';\nimport {AppBar, Toolbar, Grid, Avatar, Typography, Badge } from '@material-ui/core'\nimport IconButton from '@material-ui/core/IconButton';\nimport HomeIcon from '@material-ui/icons/Home';\nimport NearMeIcon from '@material-ui/icons/NearMe';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n// Cloudinary\nimport {Image} from 'cloudinary-react';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n    marginBottom:'60px'\n  },\n  appbar: {\n      backgroundColor:'white',\n      color:'black'\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('xs')]: {\n      display: 'flex'\n    },\n    marginRight:'35%'\n  },\n  search: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"whitesmoke\",\n    '&:hover': {\n      backgroundColor: 'lightgrey',\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: '0',\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  \n}))\n\nconst Header = () => {\n  const user = JSON.parse(localStorage.getItem('user'))\n  const classes = useStyles()\n\n  return (\n    <Grid container>\n    <div className={classes.grow}>\n\n      <AppBar className={classes.appbar} position=\"fixed\">\n      <div className=\"container\">\n        <Toolbar style={{background:'white'}}>\n          <Link to=\"/\" style={{ textDecoration: 'none', marginRight:'30%'  }}>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n            <img style={{height:'29px', width:'143px'}} src=\"https://i.imgur.com/zqpwkLQ.png\" alt=\"logo\" />\n            </Typography>\n            </Link>\n            <Search/>\n          \n          <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <Link to=\"/\" style={{ textDecoration: 'none', color:'black', marginTop:'7px' }}>\n              <IconButton color=\"inherit\">\n              <HomeIcon fontSize=\"medium\"/>\n              </IconButton>\n              </Link>\n              <Link to={`/chat/0`} style={{ textDecoration: 'none', color:'black', marginTop:'7px' }}>\n                <IconButton color=\"inherit\">\n                  <Badge badgeContent={4} color=\"secondary\">\n                    <NearMeIcon fontSize=\"medium\" />\n                  </Badge>\n                </IconButton>\n              </Link>\n                <IconButton  color=\"inherit\">\n                  <Badge badgeContent={17} color=\"secondary\">\n                    <NotificationsIcon fontSize=\"medium\"/>\n                  </Badge>\n                </IconButton>\n                <Link to={`/profile/${user.id}`}>\n                <IconButton color=\"inherit\">\n                <Avatar> <Image cloudName=\"malachcloud\" publicId={user.profile} width=\"40\" height=\"40\" crop=\"scale\" />  </Avatar>\n                </IconButton>\n                </Link>\n                <Link to=\"/logout\" style={{ textDecoration: 'none', color:'black', marginTop:'7px' }}>\n                <IconButton color=\"inherit\">\n                    <ExitToAppIcon fontSize=\"medium\"/>\n                </IconButton>\n                </Link>\n             </div>\n        </Toolbar>\n      </div>\n     </AppBar>\n    </div>\n  </Grid>\n  )\n}\nexport default Header","import React,{useEffect} from 'react'\nimport { useHistory } from 'react-router-dom'\n\nfunction LogOut({ setIsAuth }) {\n    const history = useHistory()\n\n    const logOut = async () => {\n        setIsAuth(false)\n        localStorage.removeItem('user');\n        await fetch('/auth/logout')\n        history.push('/signin') \n    }\n    \n    useEffect(() => {\n        logOut()\n    }, [])\n\n    return null   \n}\n\nexport default LogOut\n","export default __webpack_public_path__ + \"static/media/insta.3686ea84.png\";","export default __webpack_public_path__ + \"static/media/slider1.cc488f03.jpg\";","export default __webpack_public_path__ + \"static/media/slider2.678f281f.jpg\";","export default __webpack_public_path__ + \"static/media/slider3.25af168d.jpg\";","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { TextField, Button, Stepper, Step, StepLabel} from '@material-ui/core'\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 345,\n      margin:'auto',\n      padding:'10px'\n    },\n    large: {\n        width: theme.spacing(12),\n        height: theme.spacing(12),\n        margin:'auto'\n      },\n  }))\n\nconst EmailStepper = ({setEmailModal}) => {\nconst classes = useStyles();\nconst [activeStep, setActiveStep] = useState(0)\nconst [user, setUser] = useState()\nconst steps = ['Enter your Email', 'Verify account', 'Are You Sure ?','Done'];\n\n\nconst errorHelper = (formik,values) => ({\n    error: formik.errors[values] && formik.touched[values] ? true : false,\n    helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values]:null\n})\n\nconst handleNext = () => {\n    setActiveStep((prev) => prev + 1)\n}\n\nconst handleBack = () => {\n    setActiveStep((prev) => prev - 1)\n}\nconst nextBtn = () => {\n   \n        \n    \n    return(\n    <Button className=\"m-3\" variant=\"contained\" color=\"primary\" onClick={() => {\n        handleNext()\n        if (activeStep === 0) {\n            bringUser()}\n    }}>\n        next\n    </Button>\n    )\n}\nconst prevBtn = () => (\n    <Button className=\"m-3\" variant=\"contained\"  onClick={handleBack}>\n        back\n    </Button>\n)\n\nconst bringUser = async () => {\n    const response = await fetch(`/useremail/${JSON.stringify(formik.values.email)}`)\n    const data = await response.json()\n    if(data.success) setUser(data.user)\n}\n\nconst sendEmail = async (values) => {\n    const response = await fetch(`/email/${JSON.stringify(values.email)}`)\n    const data = await response.json()\n    if(data.success) console.log('email sent');\n    else console.log('email does not sent')\n}\n\nconst formik = useFormik({\n    enableReinitialize:true,\n    initialValues:{ email:''},\n    validationSchema:Yup.object({\n        email:Yup.string()\n        .required('This is required field')\n        .email('This is not a valid email'),\n    }),\n    onSubmit: (values,{resetForm}) => {\n       \n        sendEmail(values)\n    }\n})\n\n\n\n\n    return (\n        <>\n            <Stepper activeStep={activeStep}>\n            {steps.map(step => (\n                <Step key={step}> <StepLabel>{step}</StepLabel></Step>\n            ))}\n\n            </Stepper>\n\n            <form className=\"mt-3 stepper_form text-center\" onSubmit={formik.handleSumbit}>\n                { activeStep === 0 ?\n                    <div className=\"form-group\">\n                    <TextField style={{width:'100%'}} name=\"email\" label=\"Enter your email\" variant=\"outlined\" {...formik.getFieldProps('email')} {...errorHelper(formik,'email')}/>\n                    {formik.values.email && !formik.errors.email ? \n                     nextBtn() \n                    :null}\n                    </div>\n                :null}\n\n                { activeStep === 1 && user ?\n                    <div style={{textAlign:'center'}}>\n                   <Card className={classes.root}>\n                    <CardActionArea>\n                       <Avatar alt=\"Remy Sharp\" src={user.image} className={classes.large}/>\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                {user.firstname} {user.lastname}\n                            </Typography>\n                            <Typography  color=\"textSecondary\" component=\"p\"> Is that you ? </Typography>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions style={{marginLeft:'110px'}}>\n                    <Button className=\"m-3\" variant=\"contained\" size=\"large\" color=\"primary\" onClick={() => setActiveStep((prev) => prev + 1)}> Yes </Button>\n                </CardActions>\n                </Card>\n                     {prevBtn()}\n\n                    </div>\n                :null}\n\n                { activeStep === 2 ?\n                    <div className=\"form-group\">\n                       <Button className=\"m-3\" variant=\"contained\" color=\"primary\" onClick={() => {\n                           formik.submitForm()\n                           handleNext()\n                       }}> Send me new password</Button> \n                       {prevBtn()}\n                    </div>\n                :null}\n\n                { activeStep === 3 ?\n                    <div className=\"form-group\">\n                    <h5>Email sent to {formik.values.email}</h5>\n                       <Button className=\"m-3\" variant=\"contained\" color=\"primary\" onClick={() => setEmailModal(false)}> Close </Button> \n                    </div>\n                :null}\n            </form>\n        </>\n    )\n}\nexport default EmailStepper;","import React,{ useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { authUser } from '../../store/actions'\nimport InstaPhoto from '../../images/insta.png'\nimport Slider1 from '../../images/slider1.jpg'\nimport Slider2 from '../../images/slider2.jpg'\nimport Slider3 from '../../images/slider3.jpg'\nimport Grid from '@material-ui/core/Grid';\nimport { Hidden } from '@material-ui/core';\nimport {useFormik} from 'formik';\nimport * as Yup from 'yup';\nimport Modal from 'react-bootstrap/Modal'\nimport {TextField, Button} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport EmailStepper from './emailStepper'\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Carousel from 'react-bootstrap/Carousel'\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport './style.css'\n\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n          Your Website\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      marginTop:'20px'\n    },\n    image: {\n      position:'relative',\n      backgroundImage: `url(${InstaPhoto})`,\n      backgroundRepeat: 'no-repeat',\n      alignSelf: 'center',\n      backgroundPosition: '0 0',\n      backgroundSize: '454px 618px',\n      flexBasis: '454px',\n      height: '618px',\n    \n    },\n    slider: {\n      width:'54%',\n      margin: '99px 0 0 151px',\n      position: 'relative',\n      left:'-3px',\n      bottom: '3px'\n    },\n    formGrid: {\n      marginTop:'70px',\n    },\n    paper: {\n      margin: theme.spacing(8, 4),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    profileBtn: {\n      paddingTop:'10px',\n      marginTop:'10px',\n      marginBottom:'10px'\n    },\n    imageIcon: {\n      marginBottom:'8px',\n      marginRight:'5px'\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }))\n\n\n\n\n\nconst SignIn = ({ setIsAuth }) => {\n    const dispatch = useDispatch()\n    const classes = useStyles()\n    const [emailModal, setEmailModal] = useState(false)\n    const [message, setMessage] = useState('')\n    const [openAlert, setOpenAlert] = useState(false)\n    const [showPassword, setShowPassword] = useState(false)\n    const history = useHistory()\n  \n    const closeModal = () => setEmailModal(false)\n    const openModal = () => setEmailModal(true)\n    const  handleClickShowPassword = () => {\n      setShowPassword(!showPassword)\n    }\n    const formik = useFormik({\n        initialValues:{email:'',password:''},\n        validationSchema:Yup.object({\n            username:Yup.string()\n            .required('sorry username is required'),\n            password:Yup.string()\n            .required('password is required')\n            .min(6, 'password have to be at least 6 characters long')\n        }),\n        onSubmit:(values,{resetForm}) => {                               \n          loginUser(values)\n        }\n    })\n  \n    const errorHelper = (formik,values) => ({\n        error: formik.errors[values] && formik.touched[values] ? true : false,\n        helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values]:null\n    })\n\n    const loginUser = async (values) =>{\n      try {\n        const response = await fetch('/auth/login', { method: 'POST',\n            headers: {\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify(values)\n        })\n        const data = await response.json()\n       if(data.success){\n          localStorage.setItem('user',JSON.stringify(data.user))\n         setIsAuth(true)\n        history.push('/')\n       } else {\n        setMessage(data.error)\n        setOpenAlert(true)\n       }  \n    } catch(error) {\n       console.log(error)\n    }\n  }\n    return (\n        <Grid container className={classes.root}>\n            <Grid item xs={2}></Grid>\n            <Hidden mdDown>\n              {/* Instagram image */}\n              <Grid item md={4} className={classes.image}>\n                <Carousel fade className={classes.slider} interval={2000}>\n                  <Carousel.Item>\n                    <img className=\"d-block w-100\" src={Slider1} alt=\"First slide\" />\n                  </Carousel.Item>\n                  <Carousel.Item>\n                    <img className=\"d-block w-100\" src={Slider2} alt=\" Second slide\"/>\n                  </Carousel.Item>\n                  <Carousel.Item>\n                  <img className=\"d-block w-100\" src={Slider3} alt=\"Third slide\"/>\n                  </Carousel.Item>\n                </Carousel>\n              </Grid>\n          </Hidden>\n\n            {/* Sign in form */}\n            <Grid item xs={12} sm={6} md={4}  component={Paper}  square className={classes.formGrid}>\n              <div className={classes.paper}>\n              <img src=\"https://i.imgur.com/zqpwkLQ.png\" alt=\"insta\" />\n              <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\n                  <TextField  variant=\"outlined\" margin=\"normal\" fullWidth label=\"user name\" name=\"email\" autoFocus {...formik.getFieldProps('username')} {...errorHelper(formik,'username')}/>\n                  <TextField \n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton onClick={handleClickShowPassword}> {showPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}  </IconButton>\n                      </InputAdornment>\n                    )}}  \n                  variant=\"outlined\" margin=\"normal\" fullWidth name=\"password\" label=\"Password\" type={showPassword ? \"text\": \"password\"} {...formik.getFieldProps('password')} {...errorHelper(formik,'password')}/>\n                  {/* Error Alert */}\n                    <Collapse in={openAlert}>\n                      <Alert\n                      severity=\"error\"\n                      action={ <IconButton color=\"inherit\" size=\"small\" onClick={() => setOpenAlert(false) }> <CloseIcon fontSize=\"inherit\" /> </IconButton>}>\n                      {message}\n                      </Alert>\n                    </Collapse>\n\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} > Sign In </Button>\n                    <Grid container>\n                      <Grid item xs>\n                        <Link href=\"\" variant=\"body2\" onClick={() => openModal()}> Forgot password? </Link>\n                      </Grid>\n                      <Grid item>\n                        <Link href=\"/signup\" variant=\"body2\"> Don't have an account? Sign Up </Link>\n                      </Grid>\n                    </Grid>\n              <Box mt={5}>\n                <Copyright />\n              </Box>\n            </form>\n          </div>\n        </Grid>\n\n        <Grid item xs={2}></Grid>\n        \n        {/* Modal */}\n          <Modal size=\"lg\" centered show={emailModal} onHide={closeModal}>\n            <Modal.Header> <Modal.Title> Update your Password </Modal.Title> </Modal.Header>\n            <Modal.Body>\n              <EmailStepper setEmailModal={setEmailModal}/>\n            </Modal.Body>\n        </Modal>\n      </Grid>\n    )\n}\nexport default SignIn\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//     <Grid container spacing={3}>\n//         <Grid item xs={6}>\n//             <img src={TweetImage} alt=\"tweet\" className=\"tweet-image\"/>\n//         </Grid>\n        \n//         <Grid item xs={6}>\n//             <div className=\"auth-div\" style={{dispaly: 'auto',flexWrap:'wrap', justifyContent:'center'}}>\n//                 <div> \n//                     <h1 className=\"register-title\">{message}</h1>\n//                 </div>\n//             <Formik\n//             initialValues={{firstname:'', lastname:'',username:'',password:'', isregister:false}}\n//             onSubmit={(values,{resetForm}) => addUser(values)}\n//             validationSchema={validationSchema}\n//             >\n//             {(props) => (\n//                 <form className={classes.root} onSubmit={props.handleSubmit} autoComplete=\"off\">\n//                 {register ? \n//                 <>\n//                 <FormControl variant=\"outlined\" className=\"mb-3\">\n//                     <TextField name=\"firstname\" label=\"enter your first name\" variant=\"outlined\" {...props.getFieldProps('firstname')} {...errorHelper(props,'firstname')}/>   \n//                 </FormControl>\n\n//                 <FormControl variant=\"outlined\" className=\"mb-3\">\n//                     <TextField  name=\"lastname\" label=\"enter your last name\" variant=\"outlined\" {...props.getFieldProps('lastname')} {...errorHelper(props,'lastname')}/>   \n//                 </FormControl>\n\n//                 <FormControl variant=\"outlined\" className=\"mb-3\">\n//                     <TextField name=\"password\" label=\"upload your profile image\" variant=\"outlined\" {...props.getFieldProps('image')} {...errorHelper(props,'image')}/>   \n//                 </FormControl>\n//                 </>\n//                 :null}\n//                 <FormControl variant=\"outlined\" className=\"mb-3\">\n//                     <TextField name=\"username\" label=\"enter your email\" variant=\"outlined\" {...props.getFieldProps('username')} {...errorHelper(props,'username')}/>   \n//                 </FormControl>\n\n//                 <FormControl variant=\"outlined\" className=\"mb-3\">\n//                     <TextField type=\"password\" name=\"password\" label=\"enter your password\" variant=\"outlined\" {...props.getFieldProps('password')} {...errorHelper(props,'password')}/>   \n//                 </FormControl>\n\n                \n//                 <Button className=\"my-3\" variant=\"contained\" color=\"primary\" type=\"submit\" size=\"large\"> {register ? 'Register' : 'Login'} <TwitterIcon style={{margin:'5px'}}/> </Button>\n//                 <Button onClick={() => handleRegisterState(props.setFieldValue)} variant=\"outlined\" color=\"default\" size=\"small\">Want to {!register ? 'Register' : 'Login'}?</Button>\n//                 <Button onClick={() => openModal()} variant=\"outlined\" color=\"secondary\" size=\"small\" className=\"mt-3\">Forgot your password?</Button>\n//                 <h6 className=\"mt-3\">Lets do it faster!</h6>\n//                 <button type=\"button\" className=\"btn btn-primary gplus mt-2\" onClick={() => registerWithGoogle()}><i className=\"fa fa-google\"></i> Google</button> \n//             </form>\n//             )}\n//             </Formik>  \n//         </div>\n//      </Grid>\n//      <Modal size=\"lg\" centered show={emailModal} onHide={closeModal}>\n//                 <Modal.Header > <Modal.Title> Update your Password </Modal.Title> </Modal.Header>\n//                 <Modal.Body>\n//                    <EmailStepper setEmailModal={setEmailModal}/>\n//                 </Modal.Body>\n//             </Modal>\n//    </Grid>\n\n      // const handleRegisterState = (setFieldValue) => {\n        //     setFieldValue('isregister',!register)\n        //     setRegister(!register)\n            \n        // }\n\n// const validationSchema = Yup.object({\n    //     isregister:Yup.boolean(),\n    //     firstname:Yup.string()\n    //     .when('isregister',{\n    //         is: true,\n    //         then:Yup.string().required('first name is required')\n    //     }),\n    //     lastname:Yup.string()\n    //     .when('isregister',{\n    //         is: true,\n    //         then:Yup.string().required('last name is required')\n    //     }),\n    //     image:Yup.string()\n    //     .when('isregister',{\n    //         is: true,\n    //         then:Yup.string().required('profile image is required')\n    //     }),\n    //     username:Yup.string()\n    //     .required('email is required'),\n    //     password:Yup.string()\n    //     .required('password is required'),\n    // })","import React,{ useState, useRef } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport InstaPhoto from '../../images/insta.png'\nimport Slider1 from '../../images/slider1.jpg'\nimport Slider2 from '../../images/slider2.jpg'\nimport Slider3 from '../../images/slider3.jpg'\nimport Grid from '@material-ui/core/Grid';\nimport ReCaptcha from 'react-google-recaptcha'\nimport { Formik, Form} from 'formik';\nimport {Input } from '@material-ui/core'\nimport * as Yup from 'yup';\nimport {TextField, Button} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Carousel from 'react-bootstrap/Carousel'\nimport ImageIcon from '@material-ui/icons/Image';\nimport { Hidden } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Alert from '@material-ui/lab/Alert';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport './style.css'\n\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n          Your Website\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n  \n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      marginTop:'20px'\n    },\n    image: {\n      position:'relative',\n      backgroundImage: `url(${InstaPhoto})`,\n      backgroundRepeat: 'no-repeat',\n      alignSelf: 'center',\n      backgroundPosition: '0 0',\n      backgroundSize: '454px 618px',\n      flexBasis: '454px',\n      height: '618px',\n    \n    },\n    slider: {\n      width:'54%',\n      margin: '99px 0 0 151px',\n      position: 'relative',\n      left:'-3px',\n      bottom: '3px'\n    },\n    formGrid: {\n      marginTop:'70px',\n      margin:'auto'\n    },\n    paper: {\n      margin: theme.spacing(8, 4),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    profileBtn: {\n      paddingTop:'10px',\n      marginTop:'10px',\n      marginBottom:'10px'\n    },\n    imageIcon: {\n      marginBottom:'8px',\n      marginRight:'5px'\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }))\n\n\nconst SignUp = ({ setIsAuth }) => {\n    const dispatch = useDispatch()\n    const classes = useStyles()\n    const reRef = useRef()\n    const [isProfile, setIsProfile] = useState(false)\n    const [message, setMessage] = useState('')\n    const [openAlert, setOpenAlert] = useState(false)\n    const [showPassword, setShowPassword] = useState(false)\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n    const [fileName, setFileName] = useState('')\n    const history = useHistory()\n  \n    // Form validation\n    const validationSchema = Yup.object().shape({\n            username:Yup.string()\n            .required('user name is required!'),\n             password:Yup.string()\n            .required('password is required!')\n            .min(6, 'password have to be at least 6 characters long'),\n            confirmPassword:Yup.string()\n            .required('confirm your password!')\n            .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n            photo:Yup.string()\n            .required('profile image is required')\n    })\n\n    const errorHelper = (formik,values) => ({\n      error: formik.errors[values] && formik.touched[values] ? true : false,\n      helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values]:null\n  })\n\n    // Handle password visiblity \n    const  handleClickShowPassword = () => {\n      setShowPassword(!showPassword)\n    }\n    const handleClickConfirmPassword = () => {\n      setShowConfirmPassword(!showConfirmPassword)\n    }\n\n    const handleChangeImage = (e, setFieldValue) => {\n      setFieldValue(\"photo\", e.target.files[0])\n      if(e.target.files.length === 0) {\n        setIsProfile(false)\n        setFileName('')\n      } \n      else {\n        setIsProfile(true)\n        setFileName(e.target.files[0].name)\n      }\n    }\n    \n  \n    // Edit the profile image\n    const editProfile =  (values) => {\n     values.fileName = fileName\n     if(typeof values.photo === 'object' ) {\n      const reader = new FileReader()\n      reader.readAsDataURL(values.photo)\n      reader.onloadend = () => {\n        values.photo = reader.result\n        signUpUser(values)\n      }\n     } else {\n      signUpUser(values)\n     }\n    }\n        \n      // Add new user\n     const signUpUser = async (values) => {\n      try {\n            const token = await reRef.current.getValue()\n            const response = await fetch('/auth/signup', { \n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({...values, token})\n          })\n          const data = await response.json()\n          reRef.current.reset()\n          if(data.user){\n            localStorage.setItem('user', JSON.stringify({...data.user,newUser:true}))\n            dispatch(({ type:'AUTH_USER', payload:data.user }))\n            setIsAuth(true)\n            history.push('/')\n          } else {\n         \n            setMessage(data.error)\n            setOpenAlert(true)\n          }\n\n        } catch (error) {\n            console.error(error)\n          }\n    }\n  \n    return (\n      <Grid container className={classes.root}>\n\n      {/* Instagram image */}\n        <Hidden mdDown>\n            <Grid item xs={1} md={2}></Grid>\n            <Grid item xs={2} lg={4} className={classes.image} >\n              <Carousel fade className={classes.slider} interval={2000}>\n                <Carousel.Item>\n                  <img className=\"d-block w-100\" src={Slider1} alt=\"First slide\" />\n                </Carousel.Item>\n                <Carousel.Item>\n                  <img className=\"d-block w-100\" src={Slider2} alt=\" Second slide\"/>\n                </Carousel.Item>\n                <Carousel.Item>\n                <img className=\"d-block w-100\" src={Slider3} alt=\"Third slide\"/>\n                </Carousel.Item>\n              </Carousel>\n            </Grid>\n      </Hidden>\n      \n      {/* Sign up form */}\n      <Grid item xs={12} md={4}  component={Paper} elevation={6} square className={classes.formGrid}>\n          <div className={classes.paper}>\n            <img src=\"https://i.imgur.com/zqpwkLQ.png\" alt=\"logo\" />\n\n\n\n            <Formik\n                    initialValues={{username:'',password:'', photo:''}}\n                    onSubmit={(values,{resetForm}) => editProfile(values, resetForm)}\n                    validationSchema={validationSchema}\n                    enableReinitialize={true}>\n                    {(props) => (\n                        <form style={{textAlign:'center'}} onSubmit={props.handleSubmit} autoComplete=\"off\">\n  \n                                <TextField name=\"username\" label=\"User name\" variant=\"outlined\" fullWidth {...props.getFieldProps('username')} {...errorHelper(props,'username')}/>   \n                                \n                                <TextField InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton onClick={handleClickShowPassword}> {showPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}  </IconButton>\n                                        </InputAdornment>\n                                        )}}  \n                                    type={showPassword ? \"text\": \"password\"} variant=\"outlined\" margin=\"normal\" fullWidth name=\"password\" label=\"Password\" {...props.getFieldProps('password')} {...errorHelper(props,'password')} />   \n                           \n                           <TextField InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton onClick={handleClickConfirmPassword}> {showConfirmPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}  </IconButton>\n                                        </InputAdornment>\n                                        )}}  \n                                    type={showConfirmPassword ? \"text\": \"password\"} variant=\"outlined\" margin=\"normal\" fullWidth name=\"confirmPassword\" label=\"Confirm Password\" {...props.getFieldProps('confirmPassword')} {...errorHelper(props,'confirmPassword')} />\n                         \n                                <Input id=\"file\"  className=\"inputfile\" type=\"file\" name=\"photo\" onChange={(e) => handleChangeImage(e,props.setFieldValue )} hidden/> \n                                <Button style={{display:'flex', alignItems:'center', margin:'5px 0px'}} color='primary'  variant=\"outlined\">\n                                <div style={{marginRight:'7px'}}><ImageIcon/></div>\n                                <label htmlFor=\"file\">{fileName ? `${fileName} UPLOADED` : 'PROFILE IMAGE'} </label></Button>\n                                {props.errors.photo && props.touched.photo ?  <div className=\"error\">{props.errors.photo}</div>  : null}\n                                <ReCaptcha style={{margin:'10px 0px'}} sitekey=\"6LfruZ4aAAAAAAFNEQG6lPJLbJVjEThKg2DJdjEi\" ref={reRef}/> \n                                  {/* Alert error */}\n                                    <Collapse in={openAlert}>\n                                        <Alert\n                                        severity=\"error\"\n                                        action={ <IconButton color=\"inherit\" size=\"small\" onClick={() => setOpenAlert(false) }> <CloseIcon fontSize=\"inherit\" /> </IconButton>}>\n                                        {message}\n                                        </Alert>\n                                        </Collapse>\n                                <Button className=\"my-3\" variant=\"contained\" color=\"primary\" type=\"submit\" size=\"large\" fullWidth> Sign up </Button>\n                                <Grid container>\n                                  <Grid item>\n                                    <Link href=\"/signin\" variant=\"body2\"> Already have an account? Sign In </Link>\n                                  </Grid>\n                                </Grid>\n                                <Box mt={5}>\n                                  <Copyright />\n                                </Box>\n                         </form> )}\n                    </Formik>  \n                </div>\n              </Grid> \n              <Grid item xs={2}></Grid>\n       \n            </Grid>\n          \n    )\n}\nexport default SignUp\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Link } from 'react-router-dom'\nimport MoodIcon from '@material-ui/icons/Mood';\nimport { Avatar, IconButton, CardHeader, Divider, TextField, InputAdornment, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport queryString from 'query-string'\n// Cloudinary\nimport {Image} from 'cloudinary-react';\n// Css\nimport './style.css'\n//Socket io\nimport io from 'socket.io-client'\nlet socket\n\n// material ui style\nconst useStyles = makeStyles((theme) => ({\n    likes: {\n      color: \"#262626\",\n      fontSize:'14px',\n      fontWeight: '600',\n    },\n    AddCommenttextField: {\n        flexBasis: 280,\n        margin: '20px 2px',\n        width:'99%',\n        padding:'1% 0%',\n     \n      },\n  }))\n\nconst ChatMessages = ({ user, location }) => {\n    const [messages, setMessages] = useState('')\n    const [name, setName] = useState('')\n    const [message, setMessage] = useState('')\n    const messagesEndRef = useRef()\n    const connectedUser = JSON.parse(localStorage.getItem('user'))\n    const classes = useStyles()\n    \n    // Socket connection\n    const ENDPOINT = 'localhost:3001'\n    const connectionOptions =  {\n        \"force new connection\" : true,\n        \"reconnectionAttempts\": \"Infinity\", \n        \"timeout\" : 10000,                  \n        \"transports\" : [\"websocket\"]\n    }\n\n    const scrollToBottom = () => {\n      messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n    }\n\n    const sendMessage = async (e) => {\n        e.preventDefault()\n       \n        if(message) {\n            socket.emit('sendMessage', { name,message }, () => setMessage(''))    \n            await fetch('/message', { method: 'POST', headers: { 'Content-Type':'application/json' },\n            body: JSON.stringify({ UserId: connectedUser.id, reciver_id:user.id, sender_id:connectedUser.id, content: message })\n          })\n            await fetch('/message', { method: 'POST', headers: { 'Content-Type':'application/json' },\n            body: JSON.stringify({ UserId: user.id, reciver_id:user.id, sender_id:connectedUser.id, content: message })\n         })\n        }\n    }\n    \n    const sendLocation =  () => {\n      if(!navigator.geolocation) {\n          return alert('Your broswer not supported geolocation')\n      }\n      navigator.geolocation.getCurrentPosition(position => {\n        socket.emit('sendLocation', {latitude: position.coords.latitude, longitude: position.coords.longitude, name}, async () => {\n          await fetch('/message', { method: 'POST', headers: { 'Content-Type':'application/json' },\n          body: JSON.stringify({ UserId: connectedUser.id, reciver_id:user.id, sender_id:connectedUser.id, content: message })\n        })\n          await fetch('/message', { method: 'POST', headers: { 'Content-Type':'application/json' },\n          body: JSON.stringify({ UserId: user.id, reciver_id:user.id, sender_id:connectedUser.id, content: message })\n       })\n      })\n      })\n    }\n\n    useEffect(() => {\n        socket = io(ENDPOINT, connectionOptions)\n        socket.emit('join', { id:connectedUser.id } )\n    }, [])\n\n    // Handle messages\n    useEffect(() => {\n      socket.on('message', (message) => {\n      setMessages([...messages, message])\n      setTimeout(() => scrollToBottom(), 400)\n      })\n      socket.on('locationMessage', (message) => {\n        setMessages([...messages,{...message,location:true} ])\n        setMessage('')\n        setTimeout(() => scrollToBottom(), 400)\n    })\n    }, [messages])\n\n\n    const getConversation = async () => {\n        const response = await fetch('/message/conversation', { \n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({ UserId:connectedUser.id, partnerId: user.id})\n          })\n          const { messages } = await response.json()\n          setMessages(messages)\n    }\n\n    useEffect(() => {\n    \n      setTimeout(() => scrollToBottom(), 400)\n        if(user) {\n          const { chatwith } = queryString.parse(location.search)\n          setName(chatwith)\n          getConversation()\n        }\n    }, [user])\n\n\n\n    return (\n        \n           <div className=\"base-container\">\n           <div style={{position: 'sticky',  top: '0'}}>\n          <CardHeader \n           \n            avatar={ <Avatar style={{height:'56px',width:'56px'}}><Image cloudName=\"malachcloud\" publicId={user.profile} width=\"56\" height=\"56\" crop=\"scale\" /> </Avatar>}\n            title={<Link to={`/profile`}><span className={classes.likes}>{user.username}</span></Link>}\n            subheader=\"Active 2 hours ago\"\n          />\n          <Divider />\n         </div>\n        <div className=\"messages_div\">\n           {messages && messages.map((message, i) => (\n                <div key={i} className={message.sender_id === connectedUser.id ? 'my-text-div' : 'friend-text-div'}>\n                    <div className={message.sender_id === connectedUser.id ? 'my-text-container' : 'friend-text-div'}>\n                        <div className={message.sender_id === connectedUser.id ? 'my-text' : 'friend-text'}>\n                        { message.location ?\n                         <a target=\"_blank\"  rel=\"noreferrer\" href={message.content}>My location</a>\n                        :\n                        message.content\n                        }\n                       \n                        </div>\n                    </div>\n                </div>\n           ))}\n           <div ref={messagesEndRef} />\n        </div>\n          \n   \n           <TextField onKeyPress={e => e.key ==='Enter' ? sendMessage(e): null} onChange={(e) => setMessage(e.target.value)} value={message} className={classes.AddCommenttextField} variant=\"outlined\" type=\"text\" label=\"Message\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <IconButton> <MoodIcon/></IconButton>\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position=\"end\">\n               <Button onClick={ sendLocation }> <LocationOnIcon style={{padding:'0px'}}/> </Button>\n                <Button  onClick={(e) => sendMessage(e) } color=\"primary\">Send</Button>\n              </InputAdornment>\n            ),\n          }}/>\n   \n        \n        </div>\n      \n    )\n}\n\nexport default ChatMessages\n","import React, { useState, useEffect } from 'react'\nimport { Avatar, Divider, IconButton  } from '@material-ui/core'\nimport Modal from 'react-bootstrap/Modal'\nimport { Container, Row, Col, Button} from 'react-bootstrap'\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\n// Cloudinary\nimport {Image} from 'cloudinary-react';\nimport './style.css'\n\nconst ProfileImageModal = ({ imageModal, setImageModal, modalImage}) => {\n\nconsole.log(modalImage);\n// useEffect(() => {\n//     setModalImage\n// })\n\n    return (\n        <>\n  {modalImage &&\n  <Modal\n        show={imageModal}\n        onHide={() => setImageModal(false)}\n        dialogClassName=\"modal-90w\"\n        className=\"modal\"\n        aria-labelledby=\"example-custom-modal-styling-title\"\n      >\n   \n      <Modal.Body className=\"show-grid\">\n        {/* <Container> */}\n          <Row>\n            <Col xs={12} md={8}>\n              <div className=\"modal_image_div\"><img className=\"modal_image\" alt=\"modal\" src={modalImage.photo}/></div>\n            </Col>\n            <Col xs={4}>\n                <div className=\"modal_post_details\">\n                    <div className=\"modal_post_user\">\n                        <Avatar style={{height:'42px', width:'42px'}}>  <Image cloudName=\"malachcloud\" publicId={modalImage.owner_photo} width=\"42\" height=\"42\" crop=\"scale\" />  </Avatar>\n                        <h6 className=\"modal_post_user_header\">{modalImage.owner_username} <span className=\"comment-date\">{modalImage.date}</span></h6>\n                        \n                    </div>\n                    <Divider />\n                    <div className=\"modal_post_user\">\n                    <Avatar style={{height:'42px', width:'42px'}}>  <Image cloudName=\"malachcloud\" publicId={modalImage.owner_photo} width=\"42\" height=\"42\" crop=\"scale\" />  </Avatar>\n                    <h6 className=\"modal_post_user_header\">{modalImage.owner_username}</h6>\n                    <p className=\"modal_post_content\">{modalImage.content}</p>\n                    </div>\n                    {modalImage.comments.length !== 0 && modalImage.comments.map(comment => (\n                        <div className=\"modal_post_user\">\n                        <Avatar style={{height:'42px', width:'42px'}}>  <Image cloudName=\"malachcloud\" publicId={comment.User.profile} width=\"42\" height=\"42\" crop=\"scale\" />  </Avatar>\n                        <h6 className=\"modal_post_user_header\">{comment.User.username} <span className=\"comment-date\">{comment.time}</span></h6>\n                        <p className=\"modal_post_content\">{comment.content}</p>\n                    </div>\n                    )) }\n                    <Divider />\n                    <div>\n                    <IconButton > <FavoriteIcon  />  </IconButton>\n                    <IconButton> <ChatBubbleOutlineIcon/> </IconButton>\n                    <IconButton > <ShareIcon/> </IconButton>\n                    </div>\n                    <p className=\"like_p\">Liked by {modalImage.likes} pepole</p>\n                    \n\n                </div>\n              \n            </Col>\n          </Row>\n\n        {/* </Container> */}\n      </Modal.Body>\n      \n    </Modal>\n  }\n        </>\n    )\n}\n\nexport default ProfileImageModal\n","import React, { useState, useEffect } from 'react'\n// material ui\nimport { Input, IconButton, Collapse, TextField, Button, InputAdornment  } from '@material-ui/core';\nimport ImageIcon from '@material-ui/icons/Image';\nimport CloseIcon from '@material-ui/icons/Close';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport Alert from '@material-ui/lab/Alert';\n// bootstrap \nimport Modal from 'react-bootstrap/Modal'\n// Formik\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nconst EditProfile = ({ modal, setModal}) => {\n   const { id } = JSON.parse(localStorage.getItem('user'))\n    const closeModal = () => setModal(false)\n    const [message, setMessage] = useState('')\n    const [openAlert, setOpenAlert] = useState(false)\n    const [fileName, setFileName] = useState('')\n    const [previewSource, setPreviewSource] = useState('')\n    const [isProfile, setIsProfile] = useState(false)\n    const [userProfile, setUserProfile] = useState({username:'', password:'', description:''})\n    const [showPassword, setShowPassword] = useState(false)\n   \n    // Formik\n    const validationSchema = Yup.object().shape({\n        username:Yup.string()\n        .required('username is required'),\n        password:Yup.string()\n        .required('password is required'),\n        description:Yup.string()\n        .min(6, 'That it? write some more(min 6 characters)'),\n      })\n\n      const errorHelper = (formik,values) => ({\n        error: formik.errors[values] && formik.touched[values] ? true : false,\n        helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values]:null\n    })\n\n    // Get user's information\n      const getUser = async () => {\n        const res = await fetch(`/user/${id}`)\n        const data = await res.json()\n        const { username, password, profileFileName, profileDescription } = data.user\n        setUserProfile({ username, password, description: profileDescription, photo:'' })\n        setFileName(profileFileName)\n        \n      }\n\n      // turn the image file to url\n      const editProfile =  (values,resetForm) => {\n        values.fileName = fileName\n        if(typeof values.photo === 'object' ) {\n         const reader = new FileReader()\n         reader.readAsDataURL(values.photo)\n         reader.onloadend = () => {\n           values.photo = reader.result\n           updateSettings(values,resetForm)\n         }\n        } else {\n            updateSettings(values,resetForm)\n        }\n       }\n\n       // update the user profile\n      const updateSettings = async (values,resetForm) => {\n        const response = await fetch('/user', { \n        method: 'PATCH',\n        headers: {\n            'Content-Type':'application/json'\n        },\n        body: JSON.stringify({...values, id, fileName })\n    })\n        const data = await response.json()\n        if(data.user) {\n            localStorage.setItem('user', JSON.stringify(data.user))\n            resetForm()\n            setModal(false)\n        } else {\n            setMessage(data.error)\n            setOpenAlert(true)\n        }\n      }\n\n      // Handle password visiblity \n      const  handleClickShowPassword = () => {\n        setShowPassword(!showPassword)\n      }\n\n      // Handle image change  \n      const handleChangeImage = (e,setFieldValue) => {\n          const reader = new FileReader()\n          setFieldValue(\"photo\", e.target.files[0])\n          if(e.target.files.length === 0) {\n            setIsProfile(false)\n            setFileName('')\n            setPreviewSource('')\n          } \n          else {\n            reader.readAsDataURL(e.target.files[0])\n            reader.onloadend = () => {\n              setPreviewSource(reader.result)\n            }\n            setIsProfile(true)\n            setFileName(e.target.files[0].name)\n          }\n      }\n\n        useEffect(() => {\n          getUser()\n        }, [])\n\n  \n    return (\n        <div>\n            <Modal size=\"lg\" centered show={modal} onHide={closeModal}>\n                 <Modal.Header className=\"\"> <Modal.Title style={{fontWeight:'700',margin:'auto'}}> Edit your profile </Modal.Title> </Modal.Header>\n                 <Modal.Body>\n\n                 <Formik\n                    initialValues={userProfile}\n                    onSubmit={(values,{resetForm}) => editProfile(values, resetForm)}\n                    validationSchema={validationSchema}\n                    enableReinitialize={true}>\n                    {(props) => (\n                        <form style={{textAlign:'center'}} onSubmit={props.handleSubmit} autoComplete=\"off\">\n                                <TextField name=\"username\" label=\"User name\" variant=\"outlined\" fullWidth {...props.getFieldProps('username')} {...errorHelper(props,'username')}/>   \n                                \n                                <TextField InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton onClick={handleClickShowPassword}> {showPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}  </IconButton>\n                                        </InputAdornment>\n                                        )}}  \n                                    type={showPassword ? \"text\": \"password\"} variant=\"outlined\" margin=\"normal\" fullWidth name=\"password\" label=\"Password\" {...props.getFieldProps('password')} {...errorHelper(props,'password')} />   \n                           \n                                <TextField  multiline rows={4} variant=\"outlined\" margin=\"normal\" fullWidth label=\"add profile description\" name=\"description\" {...props.getFieldProps('description')} {...errorHelper(props,'description')}/>\n                         \n                                <Input id=\"file\"  className=\"inputfile\" type=\"file\" name=\"photo\" onChange={(e) => handleChangeImage(e,props.setFieldValue )} hidden/> \n                                <Button style={{display:'block', margin:'5px 0px'}} color='primary'  variant=\"outlined\"><ImageIcon className=\"\"/><label htmlFor=\"file\">{fileName ? `${fileName} UPLOADED` : 'IMAGE PROFILE'} </label></Button>\n                                {props.errors.photo && props.touched.photo ?  <div className=\"error\">{props.errors.photo}</div>  : null}\n\n                                  {/* Alert error */}\n                                    <Collapse in={openAlert}>\n                                        <Alert\n                                        severity=\"error\"\n                                        action={ <IconButton color=\"inherit\" size=\"small\" onClick={() => setOpenAlert(false) }> <CloseIcon fontSize=\"inherit\" /> </IconButton>}>\n                                        {message}\n                                        </Alert>\n                                        </Collapse>\n                                <Button className=\"my-3\" variant=\"contained\" color=\"primary\" type=\"submit\" size=\"large\"> Update user </Button>\n                         </form> )}\n                    </Formik>  \n                 </Modal.Body>\n            </Modal>\n        </div>\n    )\n}\n\nexport default EditProfile\n","import React, { useState, useEffect } from 'react'\n// Components\nimport ProfileImageModal from '../profileImageModal/ProfileImageModal'\nimport EditProfile from '../editProfile/EditProfile'\nimport Loader from '../loader/Loader'\n// Material ui\nimport { Grid } from '@material-ui/core'\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ChatBubbleRoundedIcon from '@material-ui/icons/ChatBubbleRounded';\n// Cloudinary\nimport {Image} from 'cloudinary-react';\n// Css\nimport './style.css'\n\n\nconst Profile = (props) =>  {\n    const id = props.match.params.id\n    const [userProfile, setUserProfile] = useState('')\n    const [posts, setPosts] = useState('')\n    const [imageModal, setImageModal] = useState(true)\n    const [modal, setModal] = useState(false)\n    const [modalImage, setModalImage] = useState('')\n    const [isAllowEdit, setisAllowEdit] = useState(false)\n    const [isFollowed, setIsFollowed] = useState(false)\n    const [numberOfFollowers, setnumberOfFollowers] = useState('')\n    const [numberOfFollowing, setnumberOfFollowing] = useState('')\n    const user = JSON.parse(localStorage.getItem('user'))\n    \n    const getUser = async () => {\n        const res = await fetch(`/user/${id}`)\n        const data = await res.json()\n        setUserProfile(data.user)\n    }\n\n\n    const getUserPosts = async () => {\n        const res = await fetch(`/post/${id}`)\n      \n        const { postArr, numberOfFollowers,  numberOfFollowing} = await res.json()\n        console.log(postArr);\n        setnumberOfFollowers(numberOfFollowers)\n        setnumberOfFollowing(numberOfFollowing)\n        console.log(postArr);\n        setPosts(postArr)\n    }\n\n    const setFollow = async () => {\n        // make unfolow\n        if(isFollowed) {\n            const res = await fetch('/user/unfollow', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({userWhoWantstoUnfollow: user.id , userWhoGetsUnfollowed: id })\n          })\n          const data = await res.json()\n          if(data.success) { \n            setIsFollowed(false)\n            setnumberOfFollowers(numberOfFollowers - 1)\n              user.Followings = user.Followings.filter(followed => Number(followed.followed_id) !== Number(id))\n              localStorage.setItem('user', JSON.stringify(user))\n             \n          }\n        } else {\n            // make follow\n                const res = await fetch('/user/follow', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/json'\n                },\n                body: JSON.stringify({userWhoWantToFollow: user.id , userWhoGetsFollower: id })\n              })\n              const data = await res.json()\n              if(data.success) {\n                setnumberOfFollowers(numberOfFollowers + 1)\n                  user.Followings.push({UserId:Number(user.id), followed_id: Number(id)})\n                  localStorage.setItem('user', JSON.stringify(user))\n                  setIsFollowed(true)\n              }\n        \n    }\n}\n\nconst handleImageModal = (post) => {\n    setModalImage(post)\n    setImageModal(true)\n}\n\n    useEffect(() => {\n       getUser()\n       getUserPosts() \n       if (Number(id) === Number(JSON.parse(localStorage.getItem('user')).id)) {\n        setisAllowEdit(true)\n       } else {\n        setisAllowEdit(false)\n       }\n       if(user.Followings.find(followed => Number(followed.followed_id) === Number(id))) {\n        setIsFollowed(true)\n       } else {\n        console.log(false)\n        setIsFollowed(false)\n       }\n    }, [modal,id])\n\n    return (\n        <>\n        {posts && userProfile ?\n        <div className=\"profile-main\">\n           <header>\n            <div className=\"container\">\n              <div className=\"profile\" style={{margin:'0px'}}>\n                  <div className=\"profile-image\">\n                  <Image cloudName=\"malachcloud\" publicId={userProfile.profile} width=\"200\" crop=\"scale\" />\n                  </div>\n\n                 <div className=\"profile-user-settings\">\n                    <h2 className=\"profile-user-name\"> {userProfile.username} </h2>\n                    {isAllowEdit ? \n                    <button className=\"btn profile-edit-btn\" onClick={() => setModal(true)}>Edit Profile</button>\n                    :\n                    <button className=\"btn profile-edit-btn\" onClick={() => setFollow()}>{isFollowed ? 'Unfollow' : 'Follow' }</button>\n                    }\n                    <button className=\"btn profile-settings-btn\"><SettingsIcon/></button>\n                </div>\n\n                <div className=\"profile-stats\">\n                    <ul style={{padding:'10px 2px 3px'}}>\n                        <li><span className=\"profile-stat-count\">{posts.length}</span> posts</li>\n                        <li><span className=\"profile-stat-count\">{numberOfFollowers}</span> followers</li>\n                        <li><span className=\"profile-stat-count\">{numberOfFollowing}</span> following</li>\n                    </ul>\n                </div>\n\n                <div className=\"profile-bio\">\n                    <p><span className=\"profile-real-name\">{userProfile.username}</span> {userProfile.profileDescription} 📷✈️🏕️</p>\n                </div>\n            </div>\n        </div>\n    </header>\n\n  <main>\n    <div className=\"container\">\n        <div className=\"gallery\">\n        <Grid container>\n        {posts.length !== 0 ? posts.slice(0).reverse().map(post => (\n            <Grid item xs={4} onClick={() => handleImageModal(post)}>\n            <div className=\"gallery-item\" tabIndex=\"0\">\n                <img src={post.photo} className=\"gallery-image\" alt=\"\"/>\n                <div className=\"gallery-item-info\">\n                    <ul>\n                        <li className=\"gallery-item-likes\"><span className=\"visually-hidden\">Likes:</span> <FavoriteIcon/> {post.likes}</li>\n                        <li className=\"gallery-item-comments\"><span className=\"visually-hidden\">Comments:</span><ChatBubbleRoundedIcon/> {post.comments.length}</li>\n                    </ul>\n                </div>\n            </div>\n            </Grid>\n        )):\n        <div className=\"no_post_div\">\n            <h1>No posts yet</h1>\n            <p>Go back to the home page and upload some..</p>\n        </div>\n        }\n        </Grid>\n        </div>\n    </div>\n </main> \n\n\n</div>\n:<Loader/>}\n\n<EditProfile modal={modal} setModal={setModal}/> \n<ProfileImageModal imageModal={imageModal} setImageModal={setImageModal} modalImage={modalImage}/>\n        </>\n    )\n}\n\nexport default Profile\n\n\n\n\n","import React from 'react'\nimport NearMeIcon from '@material-ui/icons/NearMe';\nimport './style.css'\nconst ChatBlankMessages = () => {\n    return (\n        <div className=\"blank_div\">\n            <span class=\"dot\">\n                <div className=\"blank_image\"> \n                    <NearMeIcon style={{ fontSize: 120 }}/>\n                </div>\n           </span>\n           \n           <h4>Your Messages</h4>\n           <p className=\"blank_p\"> Click on the user you want to chat with! <br />Send private photos and messages to a friend or group. </p>\n        </div>\n    )\n}\n\nexport default ChatBlankMessages\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Avatar, IconButton, CardHeader, Divider } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n// Cloudinary\nimport {Image} from 'cloudinary-react';\n\n\n// material ui style\nconst useStyles = makeStyles((theme) => ({\n    likes: {\n      color: \"#262626\",\n      fontSize:'14px',\n      fontWeight: '600',\n    },\n    users: {\n        cursor:'pointer',\n        '&:hover': {\n            background: 'whitesmoke',\n         },\n      \n    }\n  }))\n\nconst ChatUsers = ({ setUserChanged, userChanged }) => {\n    const connectedUser = JSON.parse(localStorage.getItem('user'))\n    const classes = useStyles()\n    const [users, setUsers] = useState('')\n\n\n    const getUsers = async () => {\n        const res = await fetch(`/user/follow/${connectedUser.id}`)\n        const { users } = await res.json()\n        setUsers(users)\n    }\n\n\n    useEffect(() => {\n       getUsers()\n    }, [])\n    return (\n        <>\n        <div className=\"users_header\">\n        <h6>{connectedUser.username}</h6>\n        </div>\n        <Divider />\n        <div className=\"base-container\">\n        {users && users.map((user,i) => (\n            <Link to={`/chat/${user.id}?chatwith=${user.username}`} key={i}>    \n            <CardHeader  \n            onClick={() => setUserChanged(!userChanged)}\n            avatar={ <Avatar style={{height:'56px',width:'56px'}}><Image cloudName=\"malachcloud\" publicId={user.profile} width=\"56\" height=\"56\" crop=\"scale\" /> </Avatar>}\n            title={<span  className={classes.likes}>{user.username}</span>}\n            subheader=\"Active 2 hours ago\"\n            className={classes.users}\n          />\n          </Link>\n        ))}\n        </div>\n           </>\n   \n     \n    )\n}\n\nexport default ChatUsers\n","import React, { useState, useEffect } from 'react'\nimport { Grid } from '@material-ui/core'\nimport ChatMessages from './ChatMessages'\nimport ChatBlankMessages from './ChatBlankMessages'\nimport ChatUsers from './ChatUsers'\n\n\nconst Chat = (props) => {\n    const { id } = props.match.params\n    const { location } = props\n  \n    const [currentChatUser, setCurrentChatUser] = useState('')\n    const [userChanged, setUserChanged] = useState(false)\n    const getUser = async () => {\n        const res = await fetch(`/user/${id}`)\n        const { user } = await res.json()\n        setCurrentChatUser(user)\n    }\n\n    useEffect(() => {\n        getUser()\n    }, [userChanged])\n\n\n\n    \n    return (\n\n        <div className=\"container pt-4\">\n           <Grid container style={{backgroundColor:'whitesmoke', minHeight:'600px', border:'1px solid lightgrey'}}>\n                <Grid item xs={6} style={{  border:'1px solid lightgrey' }} >\n                    <ChatUsers userChanged={userChanged} setUserChanged={setUserChanged}/>\n                </Grid>\n                <Grid item xs={6}>\n                   { currentChatUser && currentChatUser !== null ?  <ChatMessages user={currentChatUser} location={location}/> \n                   : <ChatBlankMessages />}\n                </Grid>\n           </Grid>\n        </div>\n      \n            \n       \n    )\n}\n\nexport default Chat\n","import React, { useState, useEffect } from 'react';\nimport { Switch, BrowserRouter, Route } from 'react-router-dom'; // imrr\nimport AuthGaurd from './hoc/Auth'\nimport Home from './components/home/Home'\nimport Header from './components/header/Header'\nimport LogOut from './components/logout/LogOut'\nimport SignIn from './components/SignIn/SignIn'\nimport SignUp from './components/signup/SignUp'\nimport Profile from './components/profile/Profile'\nimport Chat from './components/chat/Chat'\n\n// import Footer from './components/Footer'\nlet socket;\n\nconst Router = () => {\n    const [isAuth, setIsAuth] = useState(false)\n\n\n\n    return (\n        <> \n        <BrowserRouter>\n        {isAuth && <Header/>}\n            <Switch>\n            <Route path='/chat/:id' component={Chat}/>\n                {/* <Route path='/chat/:id' component={AuthGaurd(Chat, setIsAuth)}/> */}\n                <Route path='/profile/:id' component={AuthGaurd(Profile, setIsAuth)}/>\n                <Route path='/logout' render={() => <LogOut setIsAuth={setIsAuth} /> } />  \n                <Route path='/signin' render={() => <SignIn  setIsAuth={setIsAuth}/> } />\n                <Route path='/signup' render={() => <SignUp  setIsAuth={setIsAuth}/> } />\n                {/* <Route path='/apartment/:id' component={AuthGaurd(Apartment)} /> */}\n                {/* <Route path='/' component={Home}/> */}\n                <Route path='/' component={AuthGaurd(Home, setIsAuth)}/>\n            </Switch>\n        </BrowserRouter>\n    </>   \n  )\n}\n\nexport default Router;","import { combineReducers } from 'redux';\nimport users from './users_reducer';\n\n\nconst appReducers =combineReducers({\n    users\n})\nexport default appReducers; // this goes to the index of the store and helps build the store","\nexport default function usersReducer(state={data:{}},action) {\n    switch(action.type){\n        case 'AUTH_USER':\n            return {...state,data:{...state.data,...action.payload}}\n        default:\n            return state;\n    }\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport appReducers from './reducers/index';\n\n\nconst ReduxStore = () => {\n    const composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n    const store = createStore (\n        appReducers,\n        composeEnhancers(applyMiddleware(thunk))\n    )\n        return store;\n}\nexport default ReduxStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Provider } from 'react-redux';\nimport ReduxStore from './store/index'\n\nReactDOM.render(\n  <React.StrictMode>\n   <Provider store={ReduxStore()}>\n    <Routes />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}