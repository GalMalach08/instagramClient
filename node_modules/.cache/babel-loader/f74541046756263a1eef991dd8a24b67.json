{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05DC\\u05D0\\u05DA \\u05D2\\u05DC\\\\Desktop\\\\Projects\\\\Instagram-master\\\\client\\\\src\\\\components\\\\editProfile\\\\EditProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // material ui\n\nimport { Input, IconButton, Collapse, TextField, Button, InputAdornment } from '@material-ui/core';\nimport ImageIcon from '@material-ui/icons/Image';\nimport CloseIcon from '@material-ui/icons/Close';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport Alert from '@material-ui/lab/Alert'; // bootstrap \n\nimport Modal from 'react-bootstrap/Modal'; // Formik\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditProfile = ({\n  modal,\n  setModal\n}) => {\n  _s();\n\n  const {\n    id\n  } = JSON.parse(localStorage.getItem('user'));\n\n  const closeModal = () => setModal(false);\n\n  const [message, setMessage] = useState('');\n  const [openAlert, setOpenAlert] = useState(false);\n  const [fileName, setFileName] = useState('');\n  const [previewSource, setPreviewSource] = useState('');\n  const [isProfile, setIsProfile] = useState(false);\n  const [userProfile, setUserProfile] = useState({\n    username: '',\n    password: '',\n    description: ''\n  });\n  const [showPassword, setShowPassword] = useState(false); // Formik\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('username is required'),\n    password: Yup.string().required('password is required'),\n    description: Yup.string().min(6, 'That it? write some more(min 6 characters)')\n  });\n\n  const errorHelper = (formik, values) => ({\n    error: formik.errors[values] && formik.touched[values] ? true : false,\n    helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values] : null\n  }); // Get user's information\n\n\n  const getUser = async () => {\n    const res = await fetch(`https://instappmalach.herokuapp.com/user/${id}`);\n    const data = await res.json();\n    const {\n      username,\n      password,\n      profileFileName,\n      profileDescription\n    } = data.user;\n    setUserProfile({\n      username,\n      password,\n      description: profileDescription,\n      photo: ''\n    });\n    setFileName(profileFileName);\n  }; // turn the image file to url\n\n\n  const editProfile = (values, resetForm) => {\n    values.fileName = fileName;\n\n    if (typeof values.photo === 'object') {\n      const reader = new FileReader();\n      reader.readAsDataURL(values.photo);\n\n      reader.onloadend = () => {\n        values.photo = reader.result;\n        updateSettings(values, resetForm);\n      };\n    } else {\n      updateSettings(values, resetForm);\n    }\n  }; // update the user profile\n\n\n  const updateSettings = async (values, resetForm) => {\n    const response = await fetch('https://instappmalach.herokuapp.com/user', {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ ...values,\n        id,\n        fileName\n      })\n    });\n    const data = await response.json();\n\n    if (data.user) {\n      localStorage.setItem('user', JSON.stringify(data.user));\n      resetForm();\n      setModal(false);\n    } else {\n      setMessage(data.error);\n      setOpenAlert(true);\n    }\n  }; // Handle password visiblity \n\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  }; // Handle image change  \n\n\n  const handleChangeImage = (e, setFieldValue) => {\n    const reader = new FileReader();\n    setFieldValue(\"photo\", e.target.files[0]);\n\n    if (e.target.files.length === 0) {\n      setIsProfile(false);\n      setFileName('');\n      setPreviewSource('');\n    } else {\n      reader.readAsDataURL(e.target.files[0]);\n\n      reader.onloadend = () => {\n        setPreviewSource(reader.result);\n      };\n\n      setIsProfile(true);\n      setFileName(e.target.files[0].name);\n    }\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      centered: true,\n      show: modal,\n      onHide: closeModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        className: \"\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Modal.Title, {\n          style: {\n            fontWeight: '700',\n            margin: 'auto'\n          },\n          children: \" Edit your profile \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 46\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: userProfile,\n          onSubmit: (values, {\n            resetForm\n          }) => editProfile(values, resetForm),\n          validationSchema: validationSchema,\n          enableReinitialize: true,\n          children: props => /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              textAlign: 'center'\n            },\n            onSubmit: props.handleSubmit,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              name: \"username\",\n              label: \"User name\",\n              variant: \"outlined\",\n              fullWidth: true,\n              ...props.getFieldProps('username'),\n              ...errorHelper(props, 'username')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              InputProps: {\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: handleClickShowPassword,\n                    children: [\" \", showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 108\n                    }, this) : /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 132\n                    }, this), \"  \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 41\n                }, this)\n              },\n              type: showPassword ? \"text\" : \"password\",\n              variant: \"outlined\",\n              margin: \"normal\",\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              ...props.getFieldProps('password'),\n              ...errorHelper(props, 'password')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              multiline: true,\n              rows: 4,\n              variant: \"outlined\",\n              margin: \"normal\",\n              fullWidth: true,\n              label: \"add profile description\",\n              name: \"description\",\n              ...props.getFieldProps('description'),\n              ...errorHelper(props, 'description')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"file\",\n              className: \"inputfile\",\n              type: \"file\",\n              name: \"photo\",\n              onChange: e => handleChangeImage(e, props.setFieldValue),\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                display: 'block',\n                margin: '5px 0px'\n              },\n              color: \"primary\",\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(ImageIcon, {\n                className: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 121\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"file\",\n                children: [fileName ? `${fileName} UPLOADED` : 'IMAGE PROFILE', \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 146\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this), props.errors.photo && props.touched.photo ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: props.errors.photo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 79\n            }, this) : null, /*#__PURE__*/_jsxDEV(Collapse, {\n              in: openAlert,\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"error\",\n                action: /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"inherit\",\n                  size: \"small\",\n                  onClick: () => setOpenAlert(false),\n                  children: [\" \", /*#__PURE__*/_jsxDEV(CloseIcon, {\n                    fontSize: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 129\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 50\n                }, this),\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"my-3\",\n              variant: \"contained\",\n              color: \"primary\",\n              type: \"submit\",\n              size: \"large\",\n              children: \" Update user \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditProfile, \"H7bD6OzVIvosnatdIj1o+HPfw7E=\");\n\n_c = EditProfile;\nexport default EditProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"sources":["C:/Users/מלאך גל/Desktop/Projects/Instagram-master/client/src/components/editProfile/EditProfile.js"],"names":["React","useState","useEffect","Input","IconButton","Collapse","TextField","Button","InputAdornment","ImageIcon","CloseIcon","VisibilityIcon","VisibilityOffIcon","Alert","Modal","Formik","Yup","EditProfile","modal","setModal","id","JSON","parse","localStorage","getItem","closeModal","message","setMessage","openAlert","setOpenAlert","fileName","setFileName","previewSource","setPreviewSource","isProfile","setIsProfile","userProfile","setUserProfile","username","password","description","showPassword","setShowPassword","validationSchema","object","shape","string","required","min","errorHelper","formik","values","error","errors","touched","helperText","getUser","res","fetch","data","json","profileFileName","profileDescription","user","photo","editProfile","resetForm","reader","FileReader","readAsDataURL","onloadend","result","updateSettings","response","method","headers","body","stringify","setItem","handleClickShowPassword","handleChangeImage","e","setFieldValue","target","files","length","name","fontWeight","margin","props","textAlign","handleSubmit","getFieldProps","endAdornment","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n// material ui\nimport { Input, IconButton, Collapse, TextField, Button, InputAdornment  } from '@material-ui/core';\nimport ImageIcon from '@material-ui/icons/Image';\nimport CloseIcon from '@material-ui/icons/Close';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport Alert from '@material-ui/lab/Alert';\n// bootstrap \nimport Modal from 'react-bootstrap/Modal'\n// Formik\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nconst EditProfile = ({ modal, setModal}) => {\n   const { id } = JSON.parse(localStorage.getItem('user'))\n    const closeModal = () => setModal(false)\n    const [message, setMessage] = useState('')\n    const [openAlert, setOpenAlert] = useState(false)\n    const [fileName, setFileName] = useState('')\n    const [previewSource, setPreviewSource] = useState('')\n    const [isProfile, setIsProfile] = useState(false)\n    const [userProfile, setUserProfile] = useState({username:'', password:'', description:''})\n    const [showPassword, setShowPassword] = useState(false)\n   \n    // Formik\n    const validationSchema = Yup.object().shape({\n        username:Yup.string()\n        .required('username is required'),\n        password:Yup.string()\n        .required('password is required'),\n        description:Yup.string()\n        .min(6, 'That it? write some more(min 6 characters)'),\n      })\n\n      const errorHelper = (formik,values) => ({\n        error: formik.errors[values] && formik.touched[values] ? true : false,\n        helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values]:null\n    })\n\n    // Get user's information\n      const getUser = async () => {\n        const res = await fetch(`https://instappmalach.herokuapp.com/user/${id}`)\n        const data = await res.json()\n        const { username, password, profileFileName, profileDescription } = data.user\n        setUserProfile({ username, password, description: profileDescription, photo:'' })\n        setFileName(profileFileName)\n        \n      }\n\n      // turn the image file to url\n      const editProfile =  (values,resetForm) => {\n        values.fileName = fileName\n        if(typeof values.photo === 'object' ) {\n         const reader = new FileReader()\n         reader.readAsDataURL(values.photo)\n         reader.onloadend = () => {\n           values.photo = reader.result\n           updateSettings(values,resetForm)\n         }\n        } else {\n            updateSettings(values,resetForm)\n        }\n       }\n\n       // update the user profile\n      const updateSettings = async (values,resetForm) => {\n        const response = await fetch('https://instappmalach.herokuapp.com/user', { \n        method: 'PATCH',\n        headers: {\n            'Content-Type':'application/json'\n        },\n        body: JSON.stringify({...values, id, fileName })\n    })\n        const data = await response.json()\n        if(data.user) {\n            localStorage.setItem('user', JSON.stringify(data.user))\n            resetForm()\n            setModal(false)\n        } else {\n            setMessage(data.error)\n            setOpenAlert(true)\n        }\n      }\n\n      // Handle password visiblity \n      const  handleClickShowPassword = () => {\n        setShowPassword(!showPassword)\n      }\n\n      // Handle image change  \n      const handleChangeImage = (e,setFieldValue) => {\n          const reader = new FileReader()\n          setFieldValue(\"photo\", e.target.files[0])\n          if(e.target.files.length === 0) {\n            setIsProfile(false)\n            setFileName('')\n            setPreviewSource('')\n          } \n          else {\n            reader.readAsDataURL(e.target.files[0])\n            reader.onloadend = () => {\n              setPreviewSource(reader.result)\n            }\n            setIsProfile(true)\n            setFileName(e.target.files[0].name)\n          }\n      }\n\n        useEffect(() => {\n          getUser()\n        }, [])\n\n  \n    return (\n        <div>\n            <Modal size=\"lg\" centered show={modal} onHide={closeModal}>\n                 <Modal.Header className=\"\"> <Modal.Title style={{fontWeight:'700',margin:'auto'}}> Edit your profile </Modal.Title> </Modal.Header>\n                 <Modal.Body>\n\n                 <Formik\n                    initialValues={userProfile}\n                    onSubmit={(values,{resetForm}) => editProfile(values, resetForm)}\n                    validationSchema={validationSchema}\n                    enableReinitialize={true}>\n                    {(props) => (\n                        <form style={{textAlign:'center'}} onSubmit={props.handleSubmit} autoComplete=\"off\">\n                                <TextField name=\"username\" label=\"User name\" variant=\"outlined\" fullWidth {...props.getFieldProps('username')} {...errorHelper(props,'username')}/>   \n                                \n                                <TextField InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton onClick={handleClickShowPassword}> {showPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}  </IconButton>\n                                        </InputAdornment>\n                                        )}}  \n                                    type={showPassword ? \"text\": \"password\"} variant=\"outlined\" margin=\"normal\" fullWidth name=\"password\" label=\"Password\" {...props.getFieldProps('password')} {...errorHelper(props,'password')} />   \n                           \n                                <TextField  multiline rows={4} variant=\"outlined\" margin=\"normal\" fullWidth label=\"add profile description\" name=\"description\" {...props.getFieldProps('description')} {...errorHelper(props,'description')}/>\n                         \n                                <Input id=\"file\"  className=\"inputfile\" type=\"file\" name=\"photo\" onChange={(e) => handleChangeImage(e,props.setFieldValue )} hidden/> \n                                <Button style={{display:'block', margin:'5px 0px'}} color='primary'  variant=\"outlined\"><ImageIcon className=\"\"/><label htmlFor=\"file\">{fileName ? `${fileName} UPLOADED` : 'IMAGE PROFILE'} </label></Button>\n                                {props.errors.photo && props.touched.photo ?  <div className=\"error\">{props.errors.photo}</div>  : null}\n\n                                  {/* Alert error */}\n                                    <Collapse in={openAlert}>\n                                        <Alert\n                                        severity=\"error\"\n                                        action={ <IconButton color=\"inherit\" size=\"small\" onClick={() => setOpenAlert(false) }> <CloseIcon fontSize=\"inherit\" /> </IconButton>}>\n                                        {message}\n                                        </Alert>\n                                        </Collapse>\n                                <Button className=\"my-3\" variant=\"contained\" color=\"primary\" type=\"submit\" size=\"large\"> Update user </Button>\n                         </form> )}\n                    </Formik>  \n                 </Modal.Body>\n            </Modal>\n        </div>\n    )\n}\n\nexport default EditProfile\n"]},"metadata":{},"sourceType":"module"}