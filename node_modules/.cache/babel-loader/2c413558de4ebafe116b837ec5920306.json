{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05DC\\u05D0\\u05DA \\u05D2\\u05DC\\\\Desktop\\\\Projects\\\\Instagram-master\\\\client\\\\src\\\\components\\\\SignIn\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { authUser } from '../../store/actions';\nimport InstaPhoto from '../../images/insta.png';\nimport Slider1 from '../../images/slider1.jpg';\nimport Slider2 from '../../images/slider2.jpg';\nimport Slider3 from '../../images/slider3.jpg';\nimport Grid from '@material-ui/core/Grid';\nimport { Hidden } from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Modal from 'react-bootstrap/Modal';\nimport { TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport EmailStepper from './emailStepper';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Carousel from 'react-bootstrap/Carousel';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Copyright() {\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    children: ['Copyright Â© ', /*#__PURE__*/_jsxDEV(Link, {\n      color: \"inherit\",\n      href: \"https://material-ui.com/\",\n      children: \"Your Website\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), ' ', new Date().getFullYear(), '.']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Copyright;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: '20px'\n  },\n  image: {\n    position: 'relative',\n    backgroundImage: `url(${InstaPhoto})`,\n    backgroundRepeat: 'no-repeat',\n    alignSelf: 'center',\n    backgroundPosition: '0 0',\n    backgroundSize: '454px 618px',\n    flexBasis: '454px',\n    height: '618px'\n  },\n  slider: {\n    width: '54%',\n    margin: '99px 0 0 151px',\n    position: 'relative',\n    left: '-3px',\n    bottom: '3px'\n  },\n  formGrid: {\n    marginTop: '70px'\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  profileBtn: {\n    paddingTop: '10px',\n    marginTop: '10px',\n    marginBottom: '10px'\n  },\n  imageIcon: {\n    marginBottom: '8px',\n    marginRight: '5px'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst SignIn = ({\n  setIsAuth\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [emailModal, setEmailModal] = useState(false);\n  const [message, setMessage] = useState('');\n  const [openAlert, setOpenAlert] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const history = useHistory();\n\n  const closeModal = () => setEmailModal(false);\n\n  const openModal = () => setEmailModal(true);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      username: Yup.string().required('sorry username is required'),\n      password: Yup.string().required('password is required').min(6, 'password have to be at least 6 characters long')\n    }),\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      loginUser(values);\n    }\n  });\n\n  const errorHelper = (formik, values) => ({\n    error: formik.errors[values] && formik.touched[values] ? true : false,\n    helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values] : null\n  });\n\n  const loginUser = async values => {\n    try {\n      const response = await fetch('https://instappmalach.herokuapp.com/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      });\n      const data = await response.json();\n\n      if (data.success) {\n        localStorage.setItem('user', JSON.stringify(data.user));\n        setIsAuth(true);\n        history.push('/');\n      } else {\n        setMessage(data.error);\n        setOpenAlert(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n      mdDown: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 4,\n        className: classes.image,\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          fade: true,\n          className: classes.slider,\n          interval: 2000,\n          children: [/*#__PURE__*/_jsxDEV(Carousel.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"d-block w-100\",\n              src: Slider1,\n              alt: \"First slide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Carousel.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"d-block w-100\",\n              src: Slider2,\n              alt: \" Second slide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Carousel.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"d-block w-100\",\n              src: Slider3,\n              alt: \"Third slide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      component: Paper,\n      square: true,\n      className: classes.formGrid,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://i.imgur.com/zqpwkLQ.png\",\n          alt: \"insta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            fullWidth: true,\n            label: \"user name\",\n            name: \"email\",\n            autoFocus: true,\n            ...formik.getFieldProps('username'),\n            ...errorHelper(formik, 'username')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: handleClickShowPassword,\n                  children: [\" \", showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 88\n                  }, this) : /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 112\n                  }, this), \"  \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 23\n              }, this)\n            },\n            variant: \"outlined\",\n            margin: \"normal\",\n            fullWidth: true,\n            name: \"password\",\n            label: \"Password\",\n            type: showPassword ? \"text\" : \"password\",\n            ...formik.getFieldProps('password'),\n            ...errorHelper(formik, 'password')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: openAlert,\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              action: /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"inherit\",\n                size: \"small\",\n                onClick: () => setOpenAlert(false),\n                children: [\" \", /*#__PURE__*/_jsxDEV(CloseIcon, {\n                  fontSize: \"inherit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 111\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 32\n              }, this),\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            children: \" Sign In \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"\",\n                variant: \"body2\",\n                onClick: () => openModal(),\n                children: \" Forgot password? \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/signup\",\n                variant: \"body2\",\n                children: \" Don't have an account? Sign Up \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 5,\n            children: /*#__PURE__*/_jsxDEV(Copyright, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      centered: true,\n      show: emailModal,\n      onHide: closeModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \" Update your Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 28\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(EmailStepper, {\n          setEmailModal: setEmailModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"o0GerW4G4j9XGqZ0AY8kn/pejh0=\", false, function () {\n  return [useDispatch, useStyles, useHistory, useFormik];\n});\n\n_c2 = SignIn;\nexport default SignIn; //     <Grid container spacing={3}>\n//         <Grid item xs={6}>\n//             <img src={TweetImage} alt=\"tweet\" className=\"tweet-image\"/>\n//         </Grid>\n//         <Grid item xs={6}>\n//             <div className=\"auth-div\" style={{dispaly: 'auto',flexWrap:'wrap', justifyContent:'center'}}>\n//                 <div> \n//                     <h1 className=\"register-title\">{message}</h1>\n//                 </div>\n//             <Formik\n//             initialValues={{firstname:'', lastname:'',username:'',password:'', isregister:false}}\n//             onSubmit={(values,{resetForm}) => addUser(values)}\n//             validationSchema={validationSchema}\n//             >\n//             {(props) => (\n//                 <form className={classes.root} onSubmit={props.handleSubmit} autoComplete=\"off\">\n//                 {register ? \n//                 <>\n//                 <FormControl variant=\"outlined\" className=\"mb-3\">\n//                     <TextField name=\"firstname\" label=\"enter your first name\" variant=\"outlined\" {...props.getFieldProps('firstname')} {...errorHelper(props,'firstname')}/>   \n//                 </FormControl>\n//                 <FormControl variant=\"outlined\" className=\"mb-3\">\n//                     <TextField  name=\"lastname\" label=\"enter your last name\" variant=\"outlined\" {...props.getFieldProps('lastname')} {...errorHelper(props,'lastname')}/>   \n//                 </FormControl>\n//                 <FormControl variant=\"outlined\" className=\"mb-3\">\n//                     <TextField name=\"password\" label=\"upload your profile image\" variant=\"outlined\" {...props.getFieldProps('image')} {...errorHelper(props,'image')}/>   \n//                 </FormControl>\n//                 </>\n//                 :null}\n//                 <FormControl variant=\"outlined\" className=\"mb-3\">\n//                     <TextField name=\"username\" label=\"enter your email\" variant=\"outlined\" {...props.getFieldProps('username')} {...errorHelper(props,'username')}/>   \n//                 </FormControl>\n//                 <FormControl variant=\"outlined\" className=\"mb-3\">\n//                     <TextField type=\"password\" name=\"password\" label=\"enter your password\" variant=\"outlined\" {...props.getFieldProps('password')} {...errorHelper(props,'password')}/>   \n//                 </FormControl>\n//                 <Button className=\"my-3\" variant=\"contained\" color=\"primary\" type=\"submit\" size=\"large\"> {register ? 'Register' : 'Login'} <TwitterIcon style={{margin:'5px'}}/> </Button>\n//                 <Button onClick={() => handleRegisterState(props.setFieldValue)} variant=\"outlined\" color=\"default\" size=\"small\">Want to {!register ? 'Register' : 'Login'}?</Button>\n//                 <Button onClick={() => openModal()} variant=\"outlined\" color=\"secondary\" size=\"small\" className=\"mt-3\">Forgot your password?</Button>\n//                 <h6 className=\"mt-3\">Lets do it faster!</h6>\n//                 <button type=\"button\" className=\"btn btn-primary gplus mt-2\" onClick={() => registerWithGoogle()}><i className=\"fa fa-google\"></i> Google</button> \n//             </form>\n//             )}\n//             </Formik>  \n//         </div>\n//      </Grid>\n//      <Modal size=\"lg\" centered show={emailModal} onHide={closeModal}>\n//                 <Modal.Header > <Modal.Title> Update your Password </Modal.Title> </Modal.Header>\n//                 <Modal.Body>\n//                    <EmailStepper setEmailModal={setEmailModal}/>\n//                 </Modal.Body>\n//             </Modal>\n//    </Grid>\n// const handleRegisterState = (setFieldValue) => {\n//     setFieldValue('isregister',!register)\n//     setRegister(!register)\n// }\n// const validationSchema = Yup.object({\n//     isregister:Yup.boolean(),\n//     firstname:Yup.string()\n//     .when('isregister',{\n//         is: true,\n//         then:Yup.string().required('first name is required')\n//     }),\n//     lastname:Yup.string()\n//     .when('isregister',{\n//         is: true,\n//         then:Yup.string().required('last name is required')\n//     }),\n//     image:Yup.string()\n//     .when('isregister',{\n//         is: true,\n//         then:Yup.string().required('profile image is required')\n//     }),\n//     username:Yup.string()\n//     .required('email is required'),\n//     password:Yup.string()\n//     .required('password is required'),\n// })\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Copyright\");\n$RefreshReg$(_c2, \"SignIn\");","map":{"version":3,"sources":["C:/Users/×××× ××/Desktop/Projects/Instagram-master/client/src/components/SignIn/SignIn.js"],"names":["React","useState","useDispatch","useHistory","authUser","InstaPhoto","Slider1","Slider2","Slider3","Grid","Hidden","useFormik","Yup","Modal","TextField","Button","makeStyles","Alert","EmailStepper","Link","Paper","Box","Typography","Carousel","Collapse","CloseIcon","IconButton","VisibilityOff","InputAdornment","VisibilityIcon","VisibilityOffIcon","Copyright","Date","getFullYear","useStyles","theme","root","marginTop","image","position","backgroundImage","backgroundRepeat","alignSelf","backgroundPosition","backgroundSize","flexBasis","height","slider","width","margin","left","bottom","formGrid","paper","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","profileBtn","paddingTop","marginBottom","imageIcon","marginRight","submit","SignIn","setIsAuth","dispatch","classes","emailModal","setEmailModal","message","setMessage","openAlert","setOpenAlert","showPassword","setShowPassword","history","closeModal","openModal","handleClickShowPassword","formik","initialValues","email","password","validationSchema","object","username","string","required","min","onSubmit","values","resetForm","loginUser","errorHelper","error","errors","touched","helperText","response","fetch","method","headers","body","JSON","stringify","data","json","success","localStorage","setItem","user","push","console","log","handleSubmit","getFieldProps","endAdornment"],"mappings":"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","sourcesContent":["import React,{ useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { authUser } from '../../store/actions'\nimport InstaPhoto from '../../images/insta.png'\nimport Slider1 from '../../images/slider1.jpg'\nimport Slider2 from '../../images/slider2.jpg'\nimport Slider3 from '../../images/slider3.jpg'\nimport Grid from '@material-ui/core/Grid';\nimport { Hidden } from '@material-ui/core';\nimport {useFormik} from 'formik';\nimport * as Yup from 'yup';\nimport Modal from 'react-bootstrap/Modal'\nimport {TextField, Button} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport EmailStepper from './emailStepper'\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Carousel from 'react-bootstrap/Carousel'\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport './style.css'\n\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright Â© '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n          Your Website\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      marginTop:'20px'\n    },\n    image: {\n      position:'relative',\n      backgroundImage: `url(${InstaPhoto})`,\n      backgroundRepeat: 'no-repeat',\n      alignSelf: 'center',\n      backgroundPosition: '0 0',\n      backgroundSize: '454px 618px',\n      flexBasis: '454px',\n      height: '618px',\n    \n    },\n    slider: {\n      width:'54%',\n      margin: '99px 0 0 151px',\n      position: 'relative',\n      left:'-3px',\n      bottom: '3px'\n    },\n    formGrid: {\n      marginTop:'70px',\n    },\n    paper: {\n      margin: theme.spacing(8, 4),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    profileBtn: {\n      paddingTop:'10px',\n      marginTop:'10px',\n      marginBottom:'10px'\n    },\n    imageIcon: {\n      marginBottom:'8px',\n      marginRight:'5px'\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }))\n\n\n\n\n\nconst SignIn = ({ setIsAuth }) => {\n    const dispatch = useDispatch()\n    const classes = useStyles()\n    const [emailModal, setEmailModal] = useState(false)\n    const [message, setMessage] = useState('')\n    const [openAlert, setOpenAlert] = useState(false)\n    const [showPassword, setShowPassword] = useState(false)\n    const history = useHistory()\n  \n    const closeModal = () => setEmailModal(false)\n    const openModal = () => setEmailModal(true)\n    const  handleClickShowPassword = () => {\n      setShowPassword(!showPassword)\n    }\n    const formik = useFormik({\n        initialValues:{email:'',password:''},\n        validationSchema:Yup.object({\n            username:Yup.string()\n            .required('sorry username is required'),\n            password:Yup.string()\n            .required('password is required')\n            .min(6, 'password have to be at least 6 characters long')\n        }),\n        onSubmit:(values,{resetForm}) => {                               \n          loginUser(values)\n        }\n    })\n  \n    const errorHelper = (formik,values) => ({\n        error: formik.errors[values] && formik.touched[values] ? true : false,\n        helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values]:null\n    })\n\n    const loginUser = async (values) =>{\n      try {\n        const response = await fetch('https://instappmalach.herokuapp.com/auth/login', { method: 'POST',\n            headers: {\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify(values)\n        })\n        const data = await response.json()\n       if(data.success){\n          localStorage.setItem('user',JSON.stringify(data.user))\n         setIsAuth(true)\n        history.push('/')\n       } else {\n        setMessage(data.error)\n        setOpenAlert(true)\n       }  \n    } catch(error) {\n       console.log(error)\n    }\n  }\n    return (\n        <Grid container className={classes.root}>\n            <Grid item xs={2}></Grid>\n            <Hidden mdDown>\n              {/* Instagram image */}\n              <Grid item md={4} className={classes.image}>\n                <Carousel fade className={classes.slider} interval={2000}>\n                  <Carousel.Item>\n                    <img className=\"d-block w-100\" src={Slider1} alt=\"First slide\" />\n                  </Carousel.Item>\n                  <Carousel.Item>\n                    <img className=\"d-block w-100\" src={Slider2} alt=\" Second slide\"/>\n                  </Carousel.Item>\n                  <Carousel.Item>\n                  <img className=\"d-block w-100\" src={Slider3} alt=\"Third slide\"/>\n                  </Carousel.Item>\n                </Carousel>\n              </Grid>\n          </Hidden>\n\n            {/* Sign in form */}\n            <Grid item xs={12} sm={6} md={4}  component={Paper}  square className={classes.formGrid}>\n              <div className={classes.paper}>\n              <img src=\"https://i.imgur.com/zqpwkLQ.png\" alt=\"insta\" />\n              <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\n                  <TextField  variant=\"outlined\" margin=\"normal\" fullWidth label=\"user name\" name=\"email\" autoFocus {...formik.getFieldProps('username')} {...errorHelper(formik,'username')}/>\n                  <TextField \n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton onClick={handleClickShowPassword}> {showPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}  </IconButton>\n                      </InputAdornment>\n                    )}}  \n                  variant=\"outlined\" margin=\"normal\" fullWidth name=\"password\" label=\"Password\" type={showPassword ? \"text\": \"password\"} {...formik.getFieldProps('password')} {...errorHelper(formik,'password')}/>\n                  {/* Error Alert */}\n                    <Collapse in={openAlert}>\n                      <Alert\n                      severity=\"error\"\n                      action={ <IconButton color=\"inherit\" size=\"small\" onClick={() => setOpenAlert(false) }> <CloseIcon fontSize=\"inherit\" /> </IconButton>}>\n                      {message}\n                      </Alert>\n                    </Collapse>\n\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} > Sign In </Button>\n                    <Grid container>\n                      <Grid item xs>\n                        <Link href=\"\" variant=\"body2\" onClick={() => openModal()}> Forgot password? </Link>\n                      </Grid>\n                      <Grid item>\n                        <Link href=\"/signup\" variant=\"body2\"> Don't have an account? Sign Up </Link>\n                      </Grid>\n                    </Grid>\n              <Box mt={5}>\n                <Copyright />\n              </Box>\n            </form>\n          </div>\n        </Grid>\n\n        <Grid item xs={2}></Grid>\n        \n        {/* Modal */}\n          <Modal size=\"lg\" centered show={emailModal} onHide={closeModal}>\n            <Modal.Header> <Modal.Title> Update your Password </Modal.Title> </Modal.Header>\n            <Modal.Body>\n              <EmailStepper setEmailModal={setEmailModal}/>\n            </Modal.Body>\n        </Modal>\n      </Grid>\n    )\n}\nexport default SignIn\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//     <Grid container spacing={3}>\n//         <Grid item xs={6}>\n//             <img src={TweetImage} alt=\"tweet\" className=\"tweet-image\"/>\n//         </Grid>\n        \n//         <Grid item xs={6}>\n//             <div className=\"auth-div\" style={{dispaly: 'auto',flexWrap:'wrap', justifyContent:'center'}}>\n//                 <div> \n//                     <h1 className=\"register-title\">{message}</h1>\n//                 </div>\n//             <Formik\n//             initialValues={{firstname:'', lastname:'',username:'',password:'', isregister:false}}\n//             onSubmit={(values,{resetForm}) => addUser(values)}\n//             validationSchema={validationSchema}\n//             >\n//             {(props) => (\n//                 <form className={classes.root} onSubmit={props.handleSubmit} autoComplete=\"off\">\n//                 {register ? \n//                 <>\n//                 <FormControl variant=\"outlined\" className=\"mb-3\">\n//                     <TextField name=\"firstname\" label=\"enter your first name\" variant=\"outlined\" {...props.getFieldProps('firstname')} {...errorHelper(props,'firstname')}/>   \n//                 </FormControl>\n\n//                 <FormControl variant=\"outlined\" className=\"mb-3\">\n//                     <TextField  name=\"lastname\" label=\"enter your last name\" variant=\"outlined\" {...props.getFieldProps('lastname')} {...errorHelper(props,'lastname')}/>   \n//                 </FormControl>\n\n//                 <FormControl variant=\"outlined\" className=\"mb-3\">\n//                     <TextField name=\"password\" label=\"upload your profile image\" variant=\"outlined\" {...props.getFieldProps('image')} {...errorHelper(props,'image')}/>   \n//                 </FormControl>\n//                 </>\n//                 :null}\n//                 <FormControl variant=\"outlined\" className=\"mb-3\">\n//                     <TextField name=\"username\" label=\"enter your email\" variant=\"outlined\" {...props.getFieldProps('username')} {...errorHelper(props,'username')}/>   \n//                 </FormControl>\n\n//                 <FormControl variant=\"outlined\" className=\"mb-3\">\n//                     <TextField type=\"password\" name=\"password\" label=\"enter your password\" variant=\"outlined\" {...props.getFieldProps('password')} {...errorHelper(props,'password')}/>   \n//                 </FormControl>\n\n                \n//                 <Button className=\"my-3\" variant=\"contained\" color=\"primary\" type=\"submit\" size=\"large\"> {register ? 'Register' : 'Login'} <TwitterIcon style={{margin:'5px'}}/> </Button>\n//                 <Button onClick={() => handleRegisterState(props.setFieldValue)} variant=\"outlined\" color=\"default\" size=\"small\">Want to {!register ? 'Register' : 'Login'}?</Button>\n//                 <Button onClick={() => openModal()} variant=\"outlined\" color=\"secondary\" size=\"small\" className=\"mt-3\">Forgot your password?</Button>\n//                 <h6 className=\"mt-3\">Lets do it faster!</h6>\n//                 <button type=\"button\" className=\"btn btn-primary gplus mt-2\" onClick={() => registerWithGoogle()}><i className=\"fa fa-google\"></i> Google</button> \n//             </form>\n//             )}\n//             </Formik>  \n//         </div>\n//      </Grid>\n//      <Modal size=\"lg\" centered show={emailModal} onHide={closeModal}>\n//                 <Modal.Header > <Modal.Title> Update your Password </Modal.Title> </Modal.Header>\n//                 <Modal.Body>\n//                    <EmailStepper setEmailModal={setEmailModal}/>\n//                 </Modal.Body>\n//             </Modal>\n//    </Grid>\n\n      // const handleRegisterState = (setFieldValue) => {\n        //     setFieldValue('isregister',!register)\n        //     setRegister(!register)\n            \n        // }\n\n// const validationSchema = Yup.object({\n    //     isregister:Yup.boolean(),\n    //     firstname:Yup.string()\n    //     .when('isregister',{\n    //         is: true,\n    //         then:Yup.string().required('first name is required')\n    //     }),\n    //     lastname:Yup.string()\n    //     .when('isregister',{\n    //         is: true,\n    //         then:Yup.string().required('last name is required')\n    //     }),\n    //     image:Yup.string()\n    //     .when('isregister',{\n    //         is: true,\n    //         then:Yup.string().required('profile image is required')\n    //     }),\n    //     username:Yup.string()\n    //     .required('email is required'),\n    //     password:Yup.string()\n    //     .required('password is required'),\n    // })"]},"metadata":{},"sourceType":"module"}