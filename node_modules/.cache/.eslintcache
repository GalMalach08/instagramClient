[{"C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\index.js":"1","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\Routes.js":"2","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\store\\index.js":"3","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\hoc\\Auth.js":"4","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\logout\\LogOut.js":"5","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\profile\\Profile.js":"6","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\header\\Header.js":"7","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\home\\Home.js":"8","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\SignIn\\SignIn.js":"9","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\signup\\SignUp.js":"10","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\chat\\Chat.js":"11","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\store\\reducers\\index.js":"12","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\store\\reducers\\users_reducer.js":"13","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\chat\\ChatUsers.js":"14","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\editProfile\\EditProfile.js":"15","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\loader\\Loader.js":"16","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\profileImageModal\\ProfileImageModal.js":"17","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\chat\\ChatBlankMessages.js":"18","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\chat\\ChatMessages.js":"19","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\search\\Search.js":"20","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\story\\Story.js":"21","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\home\\newUserModal\\NewUserModal.js":"22","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\home\\shareModal\\ShareModal.js":"23","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\store\\actions\\index.js":"24","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\story\\StoryModal.js":"25","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\search\\poper\\Poper.js":"26","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\store\\types.js":"27","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\SignIn\\emailStepper.js":"28"},{"size":337,"mtime":1619620876937,"results":"29","hashOfConfig":"30"},{"size":1530,"mtime":1619616939520,"results":"31","hashOfConfig":"30"},{"size":448,"mtime":1619616941083,"results":"32","hashOfConfig":"30"},{"size":1158,"mtime":1619622544327,"results":"33","hashOfConfig":"30"},{"size":429,"mtime":1619622481167,"results":"34","hashOfConfig":"30"},{"size":6826,"mtime":1619622497655,"results":"35","hashOfConfig":"30"},{"size":4208,"mtime":1619616939955,"results":"36","hashOfConfig":"30"},{"size":21885,"mtime":1619622471871,"results":"37","hashOfConfig":"30"},{"size":12672,"mtime":1619627302118,"results":"38","hashOfConfig":"30"},{"size":11287,"mtime":1619627448220,"results":"39","hashOfConfig":"30"},{"size":1397,"mtime":1619622378271,"results":"40","hashOfConfig":"30"},{"size":222,"mtime":1619616941175,"results":"41","hashOfConfig":"30"},{"size":234,"mtime":1619616941198,"results":"42","hashOfConfig":"30"},{"size":1860,"mtime":1619622427585,"results":"43","hashOfConfig":"30"},{"size":7278,"mtime":1619622437609,"results":"44","hashOfConfig":"30"},{"size":346,"mtime":1619616940233,"results":"45","hashOfConfig":"30"},{"size":3329,"mtime":1619616940446,"results":"46","hashOfConfig":"30"},{"size":607,"mtime":1619616939734,"results":"47","hashOfConfig":"30"},{"size":6643,"mtime":1619622397768,"results":"48","hashOfConfig":"30"},{"size":2833,"mtime":1619622508918,"results":"49","hashOfConfig":"30"},{"size":2471,"mtime":1619616940744,"results":"50","hashOfConfig":"30"},{"size":1441,"mtime":1619616940112,"results":"51","hashOfConfig":"30"},{"size":2470,"mtime":1619616940154,"results":"52","hashOfConfig":"30"},{"size":506,"mtime":1619616941141,"results":"53","hashOfConfig":"30"},{"size":5822,"mtime":1619616940776,"results":"54","hashOfConfig":"30"},{"size":1308,"mtime":1619616940548,"results":"55","hashOfConfig":"30"},{"size":0,"mtime":1619616941107,"results":"56","hashOfConfig":"30"},{"size":5292,"mtime":1619622528342,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"v8ftkj",{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"60"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"60"},"C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\index.js",[],["132","133"],"C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\Routes.js",["134","135"],"import React, { useState, useEffect } from 'react';\nimport { Switch, BrowserRouter, Route } from 'react-router-dom'; // imrr\nimport AuthGaurd from './hoc/Auth'\nimport Home from './components/home/Home'\nimport Header from './components/header/Header'\nimport LogOut from './components/logout/LogOut'\nimport SignIn from './components/SignIn/SignIn'\nimport SignUp from './components/signup/SignUp'\nimport Profile from './components/profile/Profile'\nimport Chat from './components/chat/Chat'\n\n// import Footer from './components/Footer'\nlet socket;\n\nconst Router = () => {\n    const [isAuth, setIsAuth] = useState(false)\n\n\n\n    return (\n        <> \n        <BrowserRouter>\n        {isAuth && <Header/>}\n            <Switch>\n            <Route path='/chat/:id' component={Chat}/>\n                {/* <Route path='/chat/:id' component={AuthGaurd(Chat, setIsAuth)}/> */}\n                <Route path='/profile/:id' component={AuthGaurd(Profile, setIsAuth)}/>\n                <Route path='/logout' render={() => <LogOut setIsAuth={setIsAuth} /> } />  \n                <Route path='/signin' render={() => <SignIn  setIsAuth={setIsAuth}/> } />\n                <Route path='/signup' render={() => <SignUp  setIsAuth={setIsAuth}/> } />\n                {/* <Route path='/apartment/:id' component={AuthGaurd(Apartment)} /> */}\n                {/* <Route path='/' component={Home}/> */}\n                <Route path='/' component={AuthGaurd(Home, setIsAuth)}/>\n            </Switch>\n        </BrowserRouter>\n    </>   \n  )\n}\n\nexport default Router;","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\store\\index.js",[],"C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\hoc\\Auth.js",["136"],"import React, { useState, useEffect } from 'react' // imrse\nimport { useHistory } from \"react-router-dom\"\n        \nexport default function authgaurd(ComposedComponent, setIsAuthenticate) {\n    const AuthenticationCheck = (props) => {\n        const history = useHistory()\n        const [isAuth, setIsAuth] = useState(false)\n\n        const isUserAuthenticate = async () => {\n          // const response = await fetch('/auth/isauth')\n          const user = JSON.parse(localStorage.getItem('user'))\n          // const { success } = await response.json()\n          if (user) {\n            setIsAuthenticate(true)\n            console.log('auth');\n            setIsAuth(true) \n          }\n          else {\n            setIsAuthenticate(false)\n            setIsAuth(false)\n            console.log('not auth');\n            history.push('/signin')\n          } \n        }     \n\n        useEffect(() => {\n           isUserAuthenticate()\n        }, [])\n        \n          return(\n            <>\n            { isAuth ?\n             <ComposedComponent {...props} /> \n            : null}\n            </>\n            )\n        }\n    return AuthenticationCheck\n}\n    \n        ","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\logout\\LogOut.js",["137","138"],"import React,{useEffect} from 'react'\nimport { useHistory } from 'react-router-dom'\n\nfunction LogOut({ setIsAuth }) {\n    const history = useHistory()\n\n    const logOut = async () => {\n        setIsAuth(false)\n        localStorage.removeItem('user');\n        // await fetch('/auth/logout')\n        history.push('/signin') \n    }\n    \n    useEffect(() => {\n        logOut()\n    }, [])\n\n    return null   \n}\n\nexport default LogOut\n","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\profile\\Profile.js",["139"],"import React, { useState, useEffect } from 'react'\n// Components\nimport ProfileImageModal from '../profileImageModal/ProfileImageModal'\nimport EditProfile from '../editProfile/EditProfile'\nimport Loader from '../loader/Loader'\n// Material ui\nimport { Grid } from '@material-ui/core'\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ChatBubbleRoundedIcon from '@material-ui/icons/ChatBubbleRounded';\n// Cloudinary\nimport {Image} from 'cloudinary-react';\n// Css\nimport './style.css'\n\n\nconst Profile = (props) =>  {\n    const id = props.match.params.id\n    const [userProfile, setUserProfile] = useState('')\n    const [posts, setPosts] = useState('')\n    const [imageModal, setImageModal] = useState(true)\n    const [modal, setModal] = useState(false)\n    const [modalImage, setModalImage] = useState('')\n    const [isAllowEdit, setisAllowEdit] = useState(false)\n    const [isFollowed, setIsFollowed] = useState(false)\n    const [numberOfFollowers, setnumberOfFollowers] = useState('')\n    const [numberOfFollowing, setnumberOfFollowing] = useState('')\n    const user = JSON.parse(localStorage.getItem('user'))\n    \n    const getUser = async () => {\n        const res = await fetch(`https://instappmalach.herokuapp.com/user/${id}`)\n        const data = await res.json()\n        setUserProfile(data.user)\n    }\n\n\n    const getUserPosts = async () => {\n        const res = await fetch(`https://instappmalach.herokuapp.com/post/${id}`)\n      \n        const { postArr, numberOfFollowers,  numberOfFollowing} = await res.json()\n        console.log(postArr);\n        setnumberOfFollowers(numberOfFollowers)\n        setnumberOfFollowing(numberOfFollowing)\n        console.log(postArr);\n        setPosts(postArr)\n    }\n\n    const setFollow = async () => {\n        // make unfolow\n        if(isFollowed) {\n            const res = await fetch('https://instappmalach.herokuapp.com/user/unfollow', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({userWhoWantstoUnfollow: user.id , userWhoGetsUnfollowed: id })\n          })\n          const data = await res.json()\n          if(data.success) { \n            setIsFollowed(false)\n            setnumberOfFollowers(numberOfFollowers - 1)\n              user.Followings = user.Followings.filter(followed => Number(followed.followed_id) !== Number(id))\n              localStorage.setItem('user', JSON.stringify(user))\n             \n          }\n        } else {\n            // make follow\n                const res = await fetch('https://instappmalach.herokuapp.com/user/follow', {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/json'\n                },\n                body: JSON.stringify({userWhoWantToFollow: user.id , userWhoGetsFollower: id })\n              })\n              const data = await res.json()\n              if(data.success) {\n                setnumberOfFollowers(numberOfFollowers + 1)\n                  user.Followings.push({UserId:Number(user.id), followed_id: Number(id)})\n                  localStorage.setItem('user', JSON.stringify(user))\n                  setIsFollowed(true)\n              }\n        \n    }\n}\n\nconst handleImageModal = (post) => {\n    setModalImage(post)\n    setImageModal(true)\n}\n\n    useEffect(() => {\n       getUser()\n       getUserPosts() \n       if (Number(id) === Number(JSON.parse(localStorage.getItem('user')).id)) {\n        setisAllowEdit(true)\n       } else {\n        setisAllowEdit(false)\n       }\n       if(user.Followings.find(followed => Number(followed.followed_id) === Number(id))) {\n        setIsFollowed(true)\n       } else {\n        console.log(false)\n        setIsFollowed(false)\n       }\n    }, [modal,id])\n\n    return (\n        <>\n        {posts && userProfile ?\n        <div className=\"profile-main\">\n           <header>\n            <div className=\"container\">\n              <div className=\"profile\" style={{margin:'0px'}}>\n                  <div className=\"profile-image\">\n                  <Image cloudName=\"malachcloud\" publicId={userProfile.profile} width=\"200\" crop=\"scale\" />\n                  </div>\n\n                 <div className=\"profile-user-settings\">\n                    <h2 className=\"profile-user-name\"> {userProfile.username} </h2>\n                    {isAllowEdit ? \n                    <button className=\"btn profile-edit-btn\" onClick={() => setModal(true)}>Edit Profile</button>\n                    :\n                    <button className=\"btn profile-edit-btn\" onClick={() => setFollow()}>{isFollowed ? 'Unfollow' : 'Follow' }</button>\n                    }\n                    <button className=\"btn profile-settings-btn\"><SettingsIcon/></button>\n                </div>\n\n                <div className=\"profile-stats\">\n                    <ul style={{padding:'10px 2px 3px'}}>\n                        <li><span className=\"profile-stat-count\">{posts.length}</span> posts</li>\n                        <li><span className=\"profile-stat-count\">{numberOfFollowers}</span> followers</li>\n                        <li><span className=\"profile-stat-count\">{numberOfFollowing}</span> following</li>\n                    </ul>\n                </div>\n\n                <div className=\"profile-bio\">\n                    <p><span className=\"profile-real-name\">{userProfile.username}</span> {userProfile.profileDescription} 📷✈️🏕️</p>\n                </div>\n            </div>\n        </div>\n    </header>\n\n  <main>\n    <div className=\"container\">\n        <div className=\"gallery\">\n        <Grid container>\n        {posts.length !== 0 ? posts.slice(0).reverse().map(post => (\n            <Grid item xs={4} onClick={() => handleImageModal(post)}>\n            <div className=\"gallery-item\" tabIndex=\"0\">\n                <img src={post.photo} className=\"gallery-image\" alt=\"\"/>\n                <div className=\"gallery-item-info\">\n                    <ul>\n                        <li className=\"gallery-item-likes\"><span className=\"visually-hidden\">Likes:</span> <FavoriteIcon/> {post.likes}</li>\n                        <li className=\"gallery-item-comments\"><span className=\"visually-hidden\">Comments:</span><ChatBubbleRoundedIcon/> {post.comments.length}</li>\n                    </ul>\n                </div>\n            </div>\n            </Grid>\n        )):\n        <div className=\"no_post_div\">\n            <h1>No posts yet</h1>\n            <p>Go back to the home page and upload some..</p>\n        </div>\n        }\n        </Grid>\n        </div>\n    </div>\n </main> \n\n\n</div>\n:<Loader/>}\n\n<EditProfile modal={modal} setModal={setModal}/> \n<ProfileImageModal imageModal={imageModal} setImageModal={setImageModal} modalImage={modalImage}/>\n        </>\n    )\n}\n\nexport default Profile\n\n\n\n\n","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\header\\Header.js",[],"C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\home\\Home.js",["140","141","142","143","144","145","146","147","148","149","150"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport Loader from '../loader/Loader'\nimport Story from '../story/Story'\nimport NewUserModal from './newUserModal/NewUserModal'\nimport ShareModal from './shareModal/ShareModal'\n// material ui components\nimport { Divider, Grid, Input, IconButton, Card, CardActions, CardContent, CardHeader, CardMedia, Collapse, Avatar, Typography, TextField, Button, InputAdornment, Hidden, Tooltip  } from '@material-ui/core';\nimport { makeStyles, StylesProvider } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\n// material ui icons\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport ShareIcon from '@material-ui/icons/Share';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ImageIcon from '@material-ui/icons/Image';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MoodIcon from '@material-ui/icons/Mood';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n// Formik\nimport { Formik, Form} from 'formik';\nimport * as Yup from 'yup';\n// Cloudinary\nimport {Image} from 'cloudinary-react';\n// Bootstrap\nimport Modal from 'react-bootstrap/Modal'\n// intro js\nimport { Steps } from 'intro.js-react';\nimport 'intro.js/introjs.css';\n// Css\nimport './style.css'\n\n// moment.js\nconst moment = require('moment')\n\n// material ui style\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display:'flex',\n    justifyContent:'center',\n    marginTop:'30px'\n  },\n  previewcard:{\n    width:'300px',\n    height:'340px',\n    margin:'auto'\n  },\n  media: {\n    height: '550px',\n    width:'550px',\n    paddingTop: '56.25%', // 16:9\n  },\n  previewmedia: {\n    width:'300px',\n    height:'200px'\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  modalHeader: {\n   display: 'flex',\n   justifyContent: 'center',\n   fontWeight:'bold',\n  },\n  fab: {\n    position:'fixed',\n    bottom: '10px',\n    left: '75%',\n    whiteSpace: 'nowrap',\n    zIndex: '50px',\n    borderRadius:'20px',\n    backgroundColor:'lightblue'\n  },\n  profileBtn: {\n    paddingTop:'10px',\n    marginTop:'10px',\n    marginBottom:'10px'\n  },\n  imageIcon: {\n    marginBottom:'8px',\n    marginRight:'5px'\n  },\n  extendedIcon: { \n    marginRight: theme.spacing(1),\n  },\n  likes: {\n    color: \"#262626\",\n    fontSize:'14px',\n    fontWeight: '600',\n  },\n  comment: {\n    display:'flex',\n    alignItems:'center',\n    marginTop:'18px',\n    color: \"#262626\",\n    fontSize:'14px',\n    fontWeight: '600',\n  },\n  AddCommenttextField: {\n    flexBasis: 280,\n    margin: '20px 2px',\n    width:'100%',\n    padding:'1% 0%',\n    \n  },\n  divider: {\n    margin:'15px 0px'\n  },\n  iconButton: {\n    '&:hover': {\n      color:'red'\n    },\n    '&:click': {\n      outline: 'none'\n    },\n  },\n  suggestion: {\n    position: 'fixed',\n    right: '100px',\n    top: '100px',\n    display:'flex',\n    flexDirection: 'column',\n    width: '100%',\n    overflowY:'auto',\n    height:'100%',\n    paddingRight:'20px',\n    scrollbarWidth: 'none'\n  },\n  story: {\n    height:'118px',\n    width:'614px',\n    display:'flex',\n    marginLeft:'360px'\n  }\n}))\n\n const Home = () => {\n  const classes = useStyles()\n  const user = JSON.parse(localStorage.getItem('user'))\n  const [posts, setPosts] = useState([])\n  const [shareModalOpen, setShareModalOpen] = useState(false)\n  const [isBedAlert, setIsBedAlert] = useState(false)\n  const [commentValue, setCommentValue] = useState('')\n  const [previewSource, setPreviewSource] = useState('')\n  const [suggestionUsers, setSuggestionUsers] = useState([])\n  const [isFollowed, setIsFollowed] = useState(false)\n  const [isLike, setIsLike] = useState(false)\n  const [storiesList, setStoriesList] = useState([])\n  const [storiesUsers, setStoriesUsers] = useState([])\n  const [isProfile, setIsProfile] = useState(false)\n  const [message, setMessage] = useState('')\n  const [openAlert, setOpenAlert] = useState(false)\n  const [fileName, setFileName] = useState('')\n  const [emailModal, setEmailModal] = useState(false)\n  // intro js states\n  const [firstEntry, setFirstEntry] = useState(false)\n  const [stepsEnabled, setStepsEnabled] = useState(false)\n  const [initialStep, setInitialStep] = useState(0)\n  const [steps, setSteps] = useState([\n      { element:\"#stepOne\", intro: \"Start following users to see their special moments and experiences 😎\", position: 'left', tooltipClass: 'myTooltipClass' },\n      { element:\"#stepTwo\", intro: \"Add your own photo's and video's and start share your feelings with the world! 📷\", position: 'left', tooltipClass: 'myTooltipClass' },\n      { element:\"#stepThree\", intro: \"Upload a story daily to update your followers on how you are doing today 🥳. The story is completely gone after 24 hours\", position: 'left', tooltipClass: 'myTooltipClass' },\n  ])\n\n  // Modal functions\n  const closeModal = () => setEmailModal(false)\n  const openModal = () => setEmailModal(true)\n\n  // formik validation\n  const validationSchema = Yup.object().shape({\n    photo:Yup.string()\n    .required('photo is required'),\n    content:Yup.string()\n    .required('content is required')\n  })\n\n// Post functions\n\n// Edit the profile image\n  const editImage =  (values) => {\n    values.fileName = fileName\n    if(typeof values.photo === 'object' ) {\n    const reader = new FileReader()\n    reader.readAsDataURL(values.photo)\n    reader.onloadend = () => {\n      setPreviewSource(reader.result)\n      values.photo = reader.result\n      addNewPost(values)\n    }\n    } else {\n      addNewPost(values)\n    }\n  }\n\n  // Add new Post\n  const addNewPost = async (values) => {\n      const newPost = {\n        photo: values.photo,\n        likes: 0,\n        content: values.content,\n        UserId : JSON.parse(localStorage.getItem('user')).id,\n        fileName: values.fileName,\n        date: moment().format('MMMM Do, h:mm a').toString()\n      }\n        try {\n          const response = await fetch('https://instappmalach.herokuapp.com/post', { \n          method: 'POST',\n          headers: {\n              'Content-Type':'application/json'\n          },\n          body: JSON.stringify(newPost)\n        })\n        const data = await response.json()\n        if(data.post){\n          console.log(data.post);\n          const newPostArray = [...posts]\n          const postObj = {\n            index: posts.length,\n            publisher_id: user.id,\n            publisher_username: user.username,\n            publisher_profile: user.profile,\n            post_id: data.post.id,\n            post_content: data.post.content,\n            post_likes: [],\n            post_likes_old: [],\n            post_likeby: [],\n            post_photo: data.post.photo,\n            post_date: data.post.date,\n            post_comments: []\n          }\n          newPostArray.push(postObj)\n          console.log(newPostArray)\n          setPosts([...newPostArray])\n          setIsBedAlert(false)\n          setMessage('Post Added!')\n          setOpenAlert(true)\n          setTimeout(() => {\n            setOpenAlert(false)\n            closeModal()\n          },1000)\n        } else {\n          setIsBedAlert(true)\n          setMessage(data.error)\n          setOpenAlert(true)\n        }\n\n      } catch (error) {\n          console.error(error)\n        }\n  }\n\n  // Makes the preview image\n  const handleChangeImage = (e,setFieldValue) => {\n      const reader = new FileReader()\n      setFieldValue(\"photo\", e.target.files[0])\n      if(e.target.files.length === 0) {\n        setIsProfile(false)\n        setFileName('')\n        setPreviewSource('')\n      } \n      else {\n        reader.readAsDataURL(e.target.files[0])\n        reader.onloadend = () => {\n          setPreviewSource(reader.result)\n        }\n        setIsProfile(true)\n        setFileName(e.target.files[0].name)\n      }\n  }\n\n  // Add comment \n  const sendComment = async (PostId, index) => {\n    const newArr = posts\n    const renderComment = {\n      time: moment().startOf('hour').fromNow().toString(),\n      content: commentValue,\n      commenter:JSON.parse(localStorage.getItem('user')).username,\n      commenter_profile:JSON.parse(localStorage.getItem('user')).profile,\n    }\n    console.log(newArr[index].post_comments);\n    newArr[index].post_comments.push(renderComment)\n    console.log(newArr[index].post_comments);\n    setPosts([...newArr])\n\n    const comment = {\n      time: moment().startOf('hour').fromNow().toString(),\n      content: commentValue,\n      PostId,\n      UserId: JSON.parse(localStorage.getItem('user')).id,\n    }\n    try {\n      const response = await fetch('https://instappmalach.herokuapp.com/comment', { \n      method: 'POST',\n      headers: {\n          'Content-Type':'application/json'\n      },\n      body: JSON.stringify(comment)\n    })\n    const data = await response.json()\n    if(data.comment){\n      // console.log(data.comment)\n    } else {\n      console.log('error')\n    }\n  } catch (error) {\n      console.error(error)\n    }\n  }\n  // Add Like\n  const addLike = async (id,index, isLike) => {\n    try {\n      const newArr = posts\n      let add\n      if(!isLike) { \n        newArr[index].post_likeby.push(user.username)\n        newArr[index].like = true\n        setPosts([...newArr])\n        add = true\n      } else {\n        console.log('remove');\n        newArr[index].post_likeby =  newArr[index].post_likeby.filter(like => like !== user.username)\n       \n        newArr[index].like = false\n        setPosts([...newArr])\n        add = false\n      }\n      await fetch('https://instappmalach.herokuapp.com/post/like', { \n        method: 'POST',\n        headers: {\n            'Content-Type':'application/json'\n        },\n        body: JSON.stringify({ add, PostId:id, UserId:user.id })\n      })\n    } catch (error) {\n      console.log(error)\n    }\n \n  }\n  // Get all the posts\n  const getPosts = async () => {\n    const postsArr = []\n    let index = 0\n    const res = await fetch('https://instappmalach.herokuapp.com/post')\n    const data = await res.json()\n    data.forEach((item) => {\n      if(user.Followings.find(followed => followed.followed_id === item.publisher_id) || user.id === item.publisher_id || item.publisher_username === \"instagram\"){\n        item.posts.forEach((post) => {\n          const post_likeby = []\n          post.post_likes.forEach(like => post_likeby.push(like.like_username))\n          const isLike = Boolean(post.post_likes.find(likedUser => Number(likedUser.like_userid) === Number(user.id)))\n          const postObj = {\n            index,\n            publisher_id: item.publisher_id,\n            publisher_username: item.publisher_username,\n            publisher_profile: item.publisher_profile,\n            post_id: post.post_id,\n            post_content: post.post_content,\n            post_likes: post.post_likes.length,\n            post_likes_old: post.post_likes.length,\n            post_likeby,\n            post_photo: post.post_photo,\n            post_date: post.post_date,\n            like:isLike,\n            post_comments: post.post_comments\n          }\n          index ++\n          postsArr.push(postObj)\n         \n        })\n      }\n    })\n    console.log(postsArr);\n    setPosts(postsArr)\n}\n\nconst getStories = async () => {\n  const res = await fetch('https://instappmalach.herokuapp.com/story')\n  const { stories } = await res.json()\n  const storyArr = []\n  stories.forEach(story => {\n    if(story.User.Followers.find(follower => Number(follower.follower_id) === Number(user.id)) || Number(story.User.id) === Number(user.id) || story.User.username === \"instagram\") {\n      if(!(storyArr.find(user => user.username === story.User.username))) {\n        storyArr.push(story.User)\n      }\n    }\n  })\n  \n  setStoriesUsers(storyArr)\n}\n\n// Get all suggestion users\nconst getSuggestionUsers = async () => {\n  try {\n    const res = await fetch('https://instappmalach.herokuapp.com/user')\n    const { users } = await res.json()\n    \n    const suggestionArr = []\n   \n    users.forEach(suggestionUser => {\n      if(!(suggestionUser.Followers.find(follower => Number(follower.follower_id) === Number(user.id))) && (Number(suggestionUser.id) !== Number(user.id)) && (suggestionUser.username !== 'instagram')){\n        suggestionArr.push(suggestionUser)\n      }\n    })\n \n\n    setSuggestionUsers(suggestionArr)\n \n} catch (error) {\n    console.error(error)\n  }\n}\n\nconst setFollow = async (id) => {\n      // make follow\n          const res = await fetch('https://instappmalach.herokuapp.com/user/follow', {\n          method: 'POST',\n          headers: {\n              'Content-Type':'application/json'\n          },\n          body: JSON.stringify({userWhoWantToFollow: user.id , userWhoGetsFollower: id })\n        })\n        const data = await res.json()\n        if(data.success) {\n            const newSuggestedUserArr = suggestionUsers.filter(user => user.id !== id)\n            setSuggestionUsers([...newSuggestedUserArr])\n            user.Followings.push({UserId:Number(user.id), followed_id: Number(id)})\n            localStorage.setItem('user', JSON.stringify(user))\n        }\n}\n\n// intro js functions\nconst onExit = () => {\n  setStepsEnabled(false)\n  setFirstEntry(false)\n}\n  useEffect(() => {\n    if(user.newUser) {\n      setFirstEntry(true)\n      user.newUser = false\n      localStorage.setItem('user',JSON.stringify(user))\n    }\n     else {\n      setFirstEntry(false)\n     }\n   \n    getPosts()\n    getStories()\n    getSuggestionUsers()\n  \n  }, [])\n\n\n  return (\n    <>\n    {firstEntry ? \n    <>\n    <NewUserModal stepsEnabled={stepsEnabled} setStepsEnabled={setStepsEnabled}/>\n    <Steps enabled={stepsEnabled} steps={steps} initialStep={initialStep} onExit={onExit}/>\n    </>\n     : null}\n   <StylesProvider injectFirst>\n   <Grid container>\n   <Grid item className={classes.story} sm={4} md={4}>\n    {storiesUsers.length !== 0  &&  <Story storiesUsers={storiesUsers} />}\n   </Grid>\n\n       {posts ?  posts.slice(0).reverse().map(post => (\n         <Grid item sm={12} md={10} className={classes.root} >\n         <Card className={classes.card}>\n          <CardHeader\n            avatar={ <Avatar><Image cloudName=\"malachcloud\" publicId={post.publisher_profile} width=\"70\" height=\"40\" crop=\"scale\" /> </Avatar>}\n            action={ <IconButton> <MoreVertIcon /> </IconButton> }\n            title={<Link to={`/profile/${post.publisher_id}`}><span className={classes.likes}>{post.publisher_username}</span></Link>}\n          />\n\n          <CardMedia className={classes.media} image={post.post_photo}></CardMedia>\n\n          <CardActions disableSpacing>\n            <IconButton className={classes.iconButton} onClick={() => addLike(post.post_id, post.index, post.like)}>{post.like ? <FavoriteIcon style={{fill: \"red\"}}/> : <FavoriteBorderOutlinedIcon /> } </IconButton>\n            <IconButton> <ChatBubbleOutlineIcon/> </IconButton>\n            <IconButton > <ShareIcon onClick={() => setShareModalOpen(true)}/> </IconButton>\n            <ShareModal shareModalOpen={shareModalOpen} setShareModalOpen={setShareModalOpen} /> \n          </CardActions>\n\n          <CardContent>\n          <Typography className={classes.likes}> \n          {post.post_likeby.length === 0 && 'be the first one to like this post!'}\n          {post.post_likeby.length === 1 && `liked by ${post.post_likeby[0] === user.username ? 'you' : post.post_likeby[0] }`}\n          {post.post_likeby.length === 2 && `liked by ${post.post_likeby[0] === user.username ? 'you' : post.post_likeby[0] }, ${post.post_likeby[1] === user.username ? 'you' : post.post_likeby[1] }`}\n          {post.post_likeby.length > 2 && `liked by ${post.post_likeby[0] === user.username ? 'you' : post.post_likeby[0] }, ${post.post_likeby[1] === user.username ? 'you' : post.post_likeby[1] } and ${post.post_likeby.length - 2} others`}\n          </Typography>\n          <Typography className={classes.likes}><Link to={`/profile/${post.publisher_id}`} style={{color:'black'}}> {post.publisher_username} </Link> <span className=\"post-content\"> {post.post_content} </span></Typography> \n          <Divider className={classes.divider}/>\n          {post.post_comments.map(comment => (\n            <Typography  className={classes.comment}> \n            <Avatar><Image cloudName=\"malachcloud\" publicId={comment.commenter_profile} width=\"80\" /> </Avatar>\n            <Link to={`/profile/${comment.commenter_id}`} style={{color:'black'}}> <span className='commeter'>{comment.commenter} </span> </Link>\n            <span className=\"post-content\">{comment.content}</span>\n            </Typography>\n          ))}\n          <div className=\"post-date\">{post.post_date}</div>\n          <Divider className={classes.divider}/>\n          <TextField className={classes.AddCommenttextField} variant=\"outlined\" type=\"text\" label=\"Add a comment...\"\n          onChange={ e => setCommentValue(e.target.value)}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <IconButton> <MoodIcon/></IconButton>\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <Button onClick={() => sendComment(post.post_id, post.index)} color=\"primary\">Post</Button>\n              </InputAdornment>\n            ),\n          }}/>\n          </CardContent>\n        </Card>\n      </Grid>   \n       )):  <Loader /> }\n        <Hidden smDown>\n       <Grid item className={classes.suggestion} md={3}>\n       <div id=\"stepOne\"> <h6 className=\"user-suggested-headline\">Suggestions For You</h6> </div>\n         \n       {suggestionUsers && suggestionUsers.map(user => (\n        <div>\n        <CardHeader \n            avatar={ <Avatar><Image cloudName=\"malachcloud\" publicId={user.profile} width=\"70\" height=\"40\" crop=\"scale\" /> </Avatar>}\n            action={ <IconButton style={{marginRight:'10px'}} onClick={() => setFollow(user.id)}> <h6 className=\"user-suggested-follow\">Follow</h6> </IconButton> }\n            title={<Link to={`/profile/${user.id}`}><span className={classes.likes}>{user.username}</span></Link>}\n            subheader=\"New to Instagram\"\n            style={{width:'110%'}}\n          />\n           </div>\n       ))}\n       </Grid>\n       </Hidden>\n\n      {/* Fab */}\n      <Fab id=\"stepTwo\" color=\"primary\"  className={classes.fab} onClick={() => openModal()} title=\"Add new post\"> \n        <AddIcon />\n      </Fab>\n      {/* Share Modal */}\n   \n    \n       {/* Modal */}\n       <Modal size=\"lg\" centered show={emailModal} onHide={closeModal} style={{margin:'70px auto 30px' , maxHeight:'90%', overflowY:'auto'}}>\n                 <Modal.Header className={classes.modalHeader}> <Modal.Title style={{fontWeight:'700'}}> Add new post </Modal.Title> </Modal.Header>\n                 <Modal.Body>\n                 <Formik \n                   initialValues={{photo:'',content:''}}\n                   validationSchema={validationSchema}\n                   onSubmit={ editImage }>\n                    {({ errors, touched, setFieldValue }) => (\n                      <Form style={{textAlign:'center'}}>\n                      <Input id=\"file\" className=\"inputfile\" type=\"file\" name=\"photo\" onChange={(e) => handleChangeImage(e,setFieldValue )} hidden/> \n                    <Button className={classes.profileBtn} color='primary'  variant=\"outlined\"><ImageIcon className={classes.imageIcon}/><label htmlFor=\"file\">{fileName ? `${fileName} UPLOADED` : 'UPLPOAD IMAGE'} </label></Button>\n                      {errors.photo && touched.photo ?  <div className=\"error\">{errors.photo}</div>  : null}\n                      {previewSource ? \n                        <Card className={classes.previewcard}>\n                          <CardHeader avatar={ <Avatar><Image cloudName=\"malachcloud\" publicId={user.profile} width=\"80\" crop=\"scale\" /> </Avatar>} action={ <IconButton> <MoreVertIcon /> </IconButton> } title={<span className={classes.likes}>{user.username}</span>}/>\n                          <CardMedia className={classes.previewmedia} image={previewSource}></CardMedia>\n                          <CardActions disableSpacing>\n                            <IconButton className={classes.iconButton}> <FavoriteIcon style={{fill: \"red\"}}/> </IconButton>\n                            <IconButton> <ChatBubbleOutlineIcon/> </IconButton>\n                            <IconButton > <ShareIcon/> </IconButton>\n                          </CardActions>\n                       </Card>\n                      : null}\n                        <TextField  multiline rows={4} variant=\"outlined\" margin=\"normal\" fullWidth label=\"add description\" name=\"content\" onChange={(event) => setFieldValue(\"content\", event.target.value)}/>\n                        {errors.content && touched.content ?  <div className=\"error\">{errors.content}</div>  : null}\n                          {/* Alert error */}\n                        <Collapse in={openAlert}>\n                            <Alert \n                            style={{margin:'10px'}}\n                            severity={isBedAlert ? \"error\": \"success\"}\n                            action={ <IconButton color=\"inherit\" size=\"small\" onClick={() => setOpenAlert(false) }> <CloseIcon fontSize=\"inherit\" /> </IconButton>}>\n                            {message}\n                            </Alert>\n                          </Collapse>\n                        <Button  variant=\"outlined\" color=\"primary\" type=\"Submit\">Submit</Button>\n                      </Form>\n                    )}\n                  </Formik>\n                 </Modal.Body>\n            </Modal>\n      </Grid>\n       </StylesProvider>\n   \n    </>\n  )\n}\n\nexport default Home\n","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\SignIn\\SignIn.js",["151","152","153"],"C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\signup\\SignUp.js",["154","155","156","157"],"C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\chat\\Chat.js",["158"],"import React, { useState, useEffect } from 'react'\nimport { Grid } from '@material-ui/core'\nimport ChatMessages from './ChatMessages'\nimport ChatBlankMessages from './ChatBlankMessages'\nimport ChatUsers from './ChatUsers'\n\n\nconst Chat = (props) => {\n    const { id } = props.match.params\n    const { location } = props\n  \n    const [currentChatUser, setCurrentChatUser] = useState('')\n    const [userChanged, setUserChanged] = useState(false)\n    const getUser = async () => {\n        const res = await fetch(`https://instappmalach.herokuapp.com/user/${id}`)\n        const { user } = await res.json()\n        setCurrentChatUser(user)\n    }\n\n    useEffect(() => {\n        getUser()\n    }, [userChanged])\n\n\n\n    \n    return (\n\n        <div className=\"container pt-4\">\n           <Grid container style={{backgroundColor:'whitesmoke', minHeight:'600px', border:'1px solid lightgrey'}}>\n                <Grid item xs={6} style={{  border:'1px solid lightgrey' }} >\n                    <ChatUsers userChanged={userChanged} setUserChanged={setUserChanged}/>\n                </Grid>\n                <Grid item xs={6}>\n                   { currentChatUser && currentChatUser !== null ?  <ChatMessages user={currentChatUser} location={location}/> \n                   : <ChatBlankMessages />}\n                </Grid>\n           </Grid>\n        </div>\n      \n            \n       \n    )\n}\n\nexport default Chat\n","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\store\\reducers\\index.js",[],"C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\store\\reducers\\users_reducer.js",[],"C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\chat\\ChatUsers.js",["159","160"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Avatar, IconButton, CardHeader, Divider } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n// Cloudinary\nimport {Image} from 'cloudinary-react';\n\n\n// material ui style\nconst useStyles = makeStyles((theme) => ({\n    likes: {\n      color: \"#262626\",\n      fontSize:'14px',\n      fontWeight: '600',\n    },\n    users: {\n        cursor:'pointer',\n        '&:hover': {\n            background: 'whitesmoke',\n         },\n      \n    }\n  }))\n\nconst ChatUsers = ({ setUserChanged, userChanged }) => {\n    const connectedUser = JSON.parse(localStorage.getItem('user'))\n    const classes = useStyles()\n    const [users, setUsers] = useState('')\n\n\n    const getUsers = async () => {\n        const res = await fetch(`https://instappmalach.herokuapp.com/user/follow/${connectedUser.id}`)\n        const { users } = await res.json()\n        setUsers(users)\n    }\n\n\n    useEffect(() => {\n       getUsers()\n    }, [])\n    return (\n        <>\n        <div className=\"users_header\">\n        <h6>{connectedUser.username}</h6>\n        </div>\n        <Divider />\n        <div className=\"base-container\">\n        {users && users.map((user,i) => (\n            <Link to={`/chat/${user.id}?chatwith=${user.username}`} key={i}>    \n            <CardHeader  \n            onClick={() => setUserChanged(!userChanged)}\n            avatar={ <Avatar style={{height:'56px',width:'56px'}}><Image cloudName=\"malachcloud\" publicId={user.profile} width=\"56\" height=\"56\" crop=\"scale\" /> </Avatar>}\n            title={<span  className={classes.likes}>{user.username}</span>}\n            subheader=\"Active 2 hours ago\"\n            className={classes.users}\n          />\n          </Link>\n        ))}\n        </div>\n           </>\n   \n     \n    )\n}\n\nexport default ChatUsers\n","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\editProfile\\EditProfile.js",["161","162","163"],"import React, { useState, useEffect } from 'react'\n// material ui\nimport { Input, IconButton, Collapse, TextField, Button, InputAdornment  } from '@material-ui/core';\nimport ImageIcon from '@material-ui/icons/Image';\nimport CloseIcon from '@material-ui/icons/Close';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport Alert from '@material-ui/lab/Alert';\n// bootstrap \nimport Modal from 'react-bootstrap/Modal'\n// Formik\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nconst EditProfile = ({ modal, setModal}) => {\n   const { id } = JSON.parse(localStorage.getItem('user'))\n    const closeModal = () => setModal(false)\n    const [message, setMessage] = useState('')\n    const [openAlert, setOpenAlert] = useState(false)\n    const [fileName, setFileName] = useState('')\n    const [previewSource, setPreviewSource] = useState('')\n    const [isProfile, setIsProfile] = useState(false)\n    const [userProfile, setUserProfile] = useState({username:'', password:'', description:''})\n    const [showPassword, setShowPassword] = useState(false)\n   \n    // Formik\n    const validationSchema = Yup.object().shape({\n        username:Yup.string()\n        .required('username is required'),\n        password:Yup.string()\n        .required('password is required'),\n        description:Yup.string()\n        .min(6, 'That it? write some more(min 6 characters)'),\n      })\n\n      const errorHelper = (formik,values) => ({\n        error: formik.errors[values] && formik.touched[values] ? true : false,\n        helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values]:null\n    })\n\n    // Get user's information\n      const getUser = async () => {\n        const res = await fetch(`https://instappmalach.herokuapp.com/user/${id}`)\n        const data = await res.json()\n        const { username, password, profileFileName, profileDescription } = data.user\n        setUserProfile({ username, password, description: profileDescription, photo:'' })\n        setFileName(profileFileName)\n        \n      }\n\n      // turn the image file to url\n      const editProfile =  (values,resetForm) => {\n        values.fileName = fileName\n        if(typeof values.photo === 'object' ) {\n         const reader = new FileReader()\n         reader.readAsDataURL(values.photo)\n         reader.onloadend = () => {\n           values.photo = reader.result\n           updateSettings(values,resetForm)\n         }\n        } else {\n            updateSettings(values,resetForm)\n        }\n       }\n\n       // update the user profile\n      const updateSettings = async (values,resetForm) => {\n        const response = await fetch('https://instappmalach.herokuapp.com/user', { \n        method: 'PATCH',\n        headers: {\n            'Content-Type':'application/json'\n        },\n        body: JSON.stringify({...values, id, fileName })\n    })\n        const data = await response.json()\n        if(data.user) {\n            localStorage.setItem('user', JSON.stringify(data.user))\n            resetForm()\n            setModal(false)\n        } else {\n            setMessage(data.error)\n            setOpenAlert(true)\n        }\n      }\n\n      // Handle password visiblity \n      const  handleClickShowPassword = () => {\n        setShowPassword(!showPassword)\n      }\n\n      // Handle image change  \n      const handleChangeImage = (e,setFieldValue) => {\n          const reader = new FileReader()\n          setFieldValue(\"photo\", e.target.files[0])\n          if(e.target.files.length === 0) {\n            setIsProfile(false)\n            setFileName('')\n            setPreviewSource('')\n          } \n          else {\n            reader.readAsDataURL(e.target.files[0])\n            reader.onloadend = () => {\n              setPreviewSource(reader.result)\n            }\n            setIsProfile(true)\n            setFileName(e.target.files[0].name)\n          }\n      }\n\n        useEffect(() => {\n          getUser()\n        }, [])\n\n  \n    return (\n        <div>\n            <Modal size=\"lg\" centered show={modal} onHide={closeModal}>\n                 <Modal.Header className=\"\"> <Modal.Title style={{fontWeight:'700',margin:'auto'}}> Edit your profile </Modal.Title> </Modal.Header>\n                 <Modal.Body>\n\n                 <Formik\n                    initialValues={userProfile}\n                    onSubmit={(values,{resetForm}) => editProfile(values, resetForm)}\n                    validationSchema={validationSchema}\n                    enableReinitialize={true}>\n                    {(props) => (\n                        <form style={{textAlign:'center'}} onSubmit={props.handleSubmit} autoComplete=\"off\">\n                                <TextField name=\"username\" label=\"User name\" variant=\"outlined\" fullWidth {...props.getFieldProps('username')} {...errorHelper(props,'username')}/>   \n                                \n                                <TextField InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton onClick={handleClickShowPassword}> {showPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}  </IconButton>\n                                        </InputAdornment>\n                                        )}}  \n                                    type={showPassword ? \"text\": \"password\"} variant=\"outlined\" margin=\"normal\" fullWidth name=\"password\" label=\"Password\" {...props.getFieldProps('password')} {...errorHelper(props,'password')} />   \n                           \n                                <TextField  multiline rows={4} variant=\"outlined\" margin=\"normal\" fullWidth label=\"add profile description\" name=\"description\" {...props.getFieldProps('description')} {...errorHelper(props,'description')}/>\n                         \n                                <Input id=\"file\"  className=\"inputfile\" type=\"file\" name=\"photo\" onChange={(e) => handleChangeImage(e,props.setFieldValue )} hidden/> \n                                <Button style={{display:'block', margin:'5px 0px'}} color='primary'  variant=\"outlined\"><ImageIcon className=\"\"/><label htmlFor=\"file\">{fileName ? `${fileName} UPLOADED` : 'IMAGE PROFILE'} </label></Button>\n                                {props.errors.photo && props.touched.photo ?  <div className=\"error\">{props.errors.photo}</div>  : null}\n\n                                  {/* Alert error */}\n                                    <Collapse in={openAlert}>\n                                        <Alert\n                                        severity=\"error\"\n                                        action={ <IconButton color=\"inherit\" size=\"small\" onClick={() => setOpenAlert(false) }> <CloseIcon fontSize=\"inherit\" /> </IconButton>}>\n                                        {message}\n                                        </Alert>\n                                        </Collapse>\n                                <Button className=\"my-3\" variant=\"contained\" color=\"primary\" type=\"submit\" size=\"large\"> Update user </Button>\n                         </form> )}\n                    </Formik>  \n                 </Modal.Body>\n            </Modal>\n        </div>\n    )\n}\n\nexport default EditProfile\n","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\loader\\Loader.js",[],"C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\profileImageModal\\ProfileImageModal.js",["164","165","166","167"],"import React, { useState, useEffect } from 'react'\nimport { Avatar, Divider, IconButton  } from '@material-ui/core'\nimport Modal from 'react-bootstrap/Modal'\nimport { Container, Row, Col, Button} from 'react-bootstrap'\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\n// Cloudinary\nimport {Image} from 'cloudinary-react';\nimport './style.css'\n\nconst ProfileImageModal = ({ imageModal, setImageModal, modalImage}) => {\n\nconsole.log(modalImage);\n// useEffect(() => {\n//     setModalImage\n// })\n\n    return (\n        <>\n  {modalImage &&\n  <Modal\n        show={imageModal}\n        onHide={() => setImageModal(false)}\n        dialogClassName=\"modal-90w\"\n        className=\"modal\"\n        aria-labelledby=\"example-custom-modal-styling-title\"\n      >\n   \n      <Modal.Body className=\"show-grid\">\n        {/* <Container> */}\n          <Row>\n            <Col xs={12} md={8}>\n              <div className=\"modal_image_div\"><img className=\"modal_image\" alt=\"modal\" src={modalImage.photo}/></div>\n            </Col>\n            <Col xs={4}>\n                <div className=\"modal_post_details\">\n                    <div className=\"modal_post_user\">\n                        <Avatar style={{height:'42px', width:'42px'}}>  <Image cloudName=\"malachcloud\" publicId={modalImage.owner_photo} width=\"42\" height=\"42\" crop=\"scale\" />  </Avatar>\n                        <h6 className=\"modal_post_user_header\">{modalImage.owner_username} <span className=\"comment-date\">{modalImage.date}</span></h6>\n                        \n                    </div>\n                    <Divider />\n                    <div className=\"modal_post_user\">\n                    <Avatar style={{height:'42px', width:'42px'}}>  <Image cloudName=\"malachcloud\" publicId={modalImage.owner_photo} width=\"42\" height=\"42\" crop=\"scale\" />  </Avatar>\n                    <h6 className=\"modal_post_user_header\">{modalImage.owner_username}</h6>\n                    <p className=\"modal_post_content\">{modalImage.content}</p>\n                    </div>\n                    {modalImage.comments.length !== 0 && modalImage.comments.map(comment => (\n                        <div className=\"modal_post_user\">\n                        <Avatar style={{height:'42px', width:'42px'}}>  <Image cloudName=\"malachcloud\" publicId={comment.User.profile} width=\"42\" height=\"42\" crop=\"scale\" />  </Avatar>\n                        <h6 className=\"modal_post_user_header\">{comment.User.username} <span className=\"comment-date\">{comment.time}</span></h6>\n                        <p className=\"modal_post_content\">{comment.content}</p>\n                    </div>\n                    )) }\n                    <Divider />\n                    <div>\n                    <IconButton > <FavoriteIcon  />  </IconButton>\n                    <IconButton> <ChatBubbleOutlineIcon/> </IconButton>\n                    <IconButton > <ShareIcon/> </IconButton>\n                    </div>\n                    <p className=\"like_p\">Liked by {modalImage.likes} pepole</p>\n                    \n\n                </div>\n              \n            </Col>\n          </Row>\n\n        {/* </Container> */}\n      </Modal.Body>\n      \n    </Modal>\n  }\n        </>\n    )\n}\n\nexport default ProfileImageModal\n","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\chat\\ChatBlankMessages.js",[],"C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\chat\\ChatMessages.js",["168","169"],"import React, { useState, useEffect, useRef } from 'react'\nimport { Link } from 'react-router-dom'\nimport MoodIcon from '@material-ui/icons/Mood';\nimport { Avatar, IconButton, CardHeader, Divider, TextField, InputAdornment, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport queryString from 'query-string'\n// Cloudinary\nimport {Image} from 'cloudinary-react';\n// Css\nimport './style.css'\n//Socket io\nimport io from 'socket.io-client'\nlet socket\n\n// material ui style\nconst useStyles = makeStyles((theme) => ({\n    likes: {\n      color: \"#262626\",\n      fontSize:'14px',\n      fontWeight: '600',\n    },\n    AddCommenttextField: {\n        flexBasis: 280,\n        margin: '20px 2px',\n        width:'99%',\n        padding:'1% 0%',\n     \n      },\n  }))\n\nconst ChatMessages = ({ user, location }) => {\n    const [messages, setMessages] = useState('')\n    const [name, setName] = useState('')\n    const [message, setMessage] = useState('')\n    const messagesEndRef = useRef()\n    const connectedUser = JSON.parse(localStorage.getItem('user'))\n    const classes = useStyles()\n    \n    // Socket connection\n    const ENDPOINT = 'localhost:3001'\n    const connectionOptions =  {\n        \"force new connection\" : true,\n        \"reconnectionAttempts\": \"Infinity\", \n        \"timeout\" : 10000,                  \n        \"transports\" : [\"websocket\"]\n    }\n\n    const scrollToBottom = () => {\n      messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n    }\n\n    const sendMessage = async (e) => {\n        e.preventDefault()\n       \n        if(message) {\n            socket.emit('sendMessage', { name,message }, () => setMessage(''))    \n            await fetch('https://instappmalach.herokuapp.com/message', { method: 'POST', headers: { 'Content-Type':'application/json' },\n            body: JSON.stringify({ UserId: connectedUser.id, reciver_id:user.id, sender_id:connectedUser.id, content: message })\n          })\n            await fetch('https://instappmalach.herokuapp.com/message', { method: 'POST', headers: { 'Content-Type':'application/json' },\n            body: JSON.stringify({ UserId: user.id, reciver_id:user.id, sender_id:connectedUser.id, content: message })\n         })\n        }\n    }\n    \n    const sendLocation =  () => {\n      if(!navigator.geolocation) {\n          return alert('Your broswer not supported geolocation')\n      }\n      navigator.geolocation.getCurrentPosition(position => {\n        socket.emit('sendLocation', {latitude: position.coords.latitude, longitude: position.coords.longitude, name}, async () => {\n          await fetch('https://instappmalach.herokuapp.com/message', { method: 'POST', headers: { 'Content-Type':'application/json' },\n          body: JSON.stringify({ UserId: connectedUser.id, reciver_id:user.id, sender_id:connectedUser.id, content: message })\n        })\n          await fetch('https://instappmalach.herokuapp.com/message', { method: 'POST', headers: { 'Content-Type':'application/json' },\n          body: JSON.stringify({ UserId: user.id, reciver_id:user.id, sender_id:connectedUser.id, content: message })\n       })\n      })\n      })\n    }\n\n    useEffect(() => {\n        socket = io(ENDPOINT, connectionOptions)\n        socket.emit('join', { id:connectedUser.id } )\n    }, [])\n\n    // Handle messages\n    useEffect(() => {\n      socket.on('message', (message) => {\n      setMessages([...messages, message])\n      setTimeout(() => scrollToBottom(), 400)\n      })\n      socket.on('locationMessage', (message) => {\n        setMessages([...messages,{...message,location:true} ])\n        setMessage('')\n        setTimeout(() => scrollToBottom(), 400)\n    })\n    }, [messages])\n\n\n    const getConversation = async () => {\n        const response = await fetch('https://instappmalach.herokuapp.com/message/conversation', { \n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({ UserId:connectedUser.id, partnerId: user.id})\n          })\n          const { messages } = await response.json()\n          setMessages(messages)\n    }\n\n    useEffect(() => {\n    \n      setTimeout(() => scrollToBottom(), 400)\n        if(user) {\n          const { chatwith } = queryString.parse(location.search)\n          setName(chatwith)\n          getConversation()\n        }\n    }, [user])\n\n\n\n    return (\n        \n           <div className=\"base-container\">\n           <div style={{position: 'sticky',  top: '0'}}>\n          <CardHeader \n           \n            avatar={ <Avatar style={{height:'56px',width:'56px'}}><Image cloudName=\"malachcloud\" publicId={user.profile} width=\"56\" height=\"56\" crop=\"scale\" /> </Avatar>}\n            title={<Link to={`/profile`}><span className={classes.likes}>{user.username}</span></Link>}\n            subheader=\"Active 2 hours ago\"\n          />\n          <Divider />\n         </div>\n        <div className=\"messages_div\">\n           {messages && messages.map((message, i) => (\n                <div key={i} className={message.sender_id === connectedUser.id ? 'my-text-div' : 'friend-text-div'}>\n                    <div className={message.sender_id === connectedUser.id ? 'my-text-container' : 'friend-text-div'}>\n                        <div className={message.sender_id === connectedUser.id ? 'my-text' : 'friend-text'}>\n                        { message.location ?\n                         <a target=\"_blank\"  rel=\"noreferrer\" href={message.content}>My location</a>\n                        :\n                        message.content\n                        }\n                       \n                        </div>\n                    </div>\n                </div>\n           ))}\n           <div ref={messagesEndRef} />\n        </div>\n          \n   \n           <TextField onKeyPress={e => e.key ==='Enter' ? sendMessage(e): null} onChange={(e) => setMessage(e.target.value)} value={message} className={classes.AddCommenttextField} variant=\"outlined\" type=\"text\" label=\"Message\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <IconButton> <MoodIcon/></IconButton>\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position=\"end\">\n               <Button onClick={ sendLocation }> <LocationOnIcon style={{padding:'0px'}}/> </Button>\n                <Button  onClick={(e) => sendMessage(e) } color=\"primary\">Send</Button>\n              </InputAdornment>\n            ),\n          }}/>\n   \n        \n        </div>\n      \n    )\n}\n\nexport default ChatMessages\n","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\search\\Search.js",["170","171"],"import React, { useState, useEffect } from 'react'\nimport Poper from './poper/Poper'\nimport InputBase from '@material-ui/core/InputBase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Popper from '@material-ui/core/Popper';\n\nconst useStyles = makeStyles((theme) => ({\n    search: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: \"whitesmoke\",\n      '&:hover': {\n        backgroundColor: 'lightgrey',\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: '0',\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch',\n      },\n    },\n   \n    \n  }))\n\nfunction Search() {\n  \n    const [searchValue, setSearchValue] = useState('')\n    const [users, setUsers] = useState([])\n    const [anchorEl, setAnchorEl] = useState(null)\n    const classes = useStyles()\n    const open = Boolean(anchorEl)\n\n    const handleChange = (e) => {\n        setSearchValue(e.target.value)\n        if(users.users === undefined) {\n            console.log('not');\n            setAnchorEl(null)\n        } else if(users.users.length === 0) {\n            setAnchorEl(null)\n        } else {\n            setAnchorEl(e.currentTarget)\n        }\n    }\n\n    const findUsers = async () => {\n        const res = await fetch(`https://instappmalach.herokuapp.com/user/users/${searchValue}`)\n        const data = await res.json()\n        setUsers(data)\n    }\n \n    useEffect(() => {\n       findUsers()\n    }, [searchValue])\n\n    return (\n        <>\n           <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              onChange={e => handleChange(e)}\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n            \n            />\n              <Poper users={users} open={open} anchorEl={anchorEl} setUsers={setUsers}/>\n          </div>\n        </>\n    )\n}\n\nexport default Search\n","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\story\\Story.js",["172"],"import React, { useState, useEffect } from 'react'\nimport StoryModal from './StoryModal'\n// material ui\nimport { Avatar } from '@material-ui/core';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n// react-stories\nimport Stories from 'react-insta-stories';\n// Cloudinary\nimport {Image} from 'cloudinary-react';\n// css\nimport './style.css'\n\nconst Story = ({ storiesUsers }) => {\n    const [storyUsers, setStoryUsers] = useState([])\n    const [stories, setStories] = useState([])\n    const [storyModal, setStoryModal] = useState(false)\n\n    const openStory = (stories,username,profile) => {\n       const storiesArr = []\n       stories.forEach(story => {\n           const photoArr = story.photo.split(\"upload/\")\n           const storyObj = {\n                url:`${photoArr[0]}upload/w_432,h_500,c_scale/${photoArr[1]}`,\n                header: {\n                        heading: username,\n                        profileImage: profile , \n                    }\n                }\n                storiesArr.push(storyObj)    \n    })\n    setStories(storiesArr)\n}\n\n    useEffect(() => {\n        setStoryUsers(storiesUsers)\n    }, [])\n  \n   \n    return (\n    <StylesProvider>\n        {stories.length !== 0 && \n        <>\n        <div className=\"overlays\"></div>\n        <div style={{position: 'fixed', top:'20%', left:'30%', zIndex:'2'}}>\n          <Stories  width={432} height={500} stories={stories} onAllStoriesEnd={() => setStories([])}/>\n        </div>\n        </>\n        }\n        <div className=\"stories\">\n            <div className=\"story_users\">\n                {storyUsers && storyUsers.map(user => (\n                    <div key={user.id} className=\"story-div\"> <Avatar style={{height:'70px', width:'70px', border:'2px solid #D82B7D'}} onClick={() => openStory(user.Stories,user.username,user.profileUrl)}>\n                    <Image cloudName=\"malachcloud\" publicId={user.profile} width=\"70\" height=\"70\" crop=\"scale\" />\n                    </Avatar>\n                    <span className=\"story_username\">{user.username}</span>\n                    </div>\n                ))}\n        </div>\n        <div className=\"add_Story_btn\" id=\"stepThree\" title=\"Add story\"> <AddCircleIcon onClick={() => setStoryModal(true)} style={{fill:'#ED4A4D'}} fontSize=\"large\"/> </div>\n    </div>\n    <StoryModal storyModal={storyModal} setStoryModal={setStoryModal}/>\n</StylesProvider>\n    ) \n}\n\nexport default Story\n\n ","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\home\\newUserModal\\NewUserModal.js",[],"C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\home\\shareModal\\ShareModal.js",["173"],"import React, { useState } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { Button } from '@material-ui/core'\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { FacebookShareButton, FacebookIcon, FacebookMessengerShareButton, FacebookMessengerIcon, \n        EmailIcon, TwitterIcon, TwitterShareButton, TelegramShareButton, TelegramIcon,\n        WhatsappShareButton, WhatsappIcon, EmailShareButton } from 'react-share' \nimport './style.css'\n\nconst NewUserModal = ({ shareModalOpen ,setShareModalOpen })  =>  {\n  \n    // Close the modal\n    const handleClose = () => setShareModalOpen(false)\n   \n    return (\n      <>\n        <Modal show={shareModalOpen} onHide={handleClose} backdrop=\"static\" keyboard={false} style={{textAlign:'center',width:'30%'}}>\n          <Modal.Header closeButton>\n            <Modal.Title style={{fontWeight:'600'}}>Share Post </Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"world\">\n\n          <FacebookShareButton className=\"icon\" url='https://www.instagram.com/' quote=\"Come and visit insragram!\">\n            <FacebookIcon size={32} round />\n          </FacebookShareButton>\n\n          <FacebookMessengerShareButton className=\"icon\" url='https://www.instagram.com/' appId=\"521270401588372\">\n            <FacebookMessengerIcon size={32} round />\n          </FacebookMessengerShareButton>\n\n          <TwitterShareButton className=\"icon\" url='https://www.instagram.com/' title=\"come alone man\">\n            <TwitterIcon size={32} round />\n          </TwitterShareButton>\n\n          <TelegramShareButton className=\"icon\" url='https://www.instagram.com/' title='he man'>\n            <TelegramIcon size={32} round />\n          </TelegramShareButton>\n\n          <WhatsappShareButton className=\"icon\" url='https://www.instagram.com/' title='come and visit instagram!' separator=\":\">\n            <WhatsappIcon size={32} round />\n          </WhatsappShareButton>\n\n          <EmailShareButton  className=\"icon\" url='https://www.instagram.com/' subject='come and visit instagram' body=\"body\" >\n            <EmailIcon size={32} round />\n          </EmailShareButton>\n\n        </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"outlined\" color=\"secondary\" onClick={() => handleClose() } style={{margin:'auto'}}>\n             Close <CancelIcon style={{margin:'10px 10px 12'}}/>\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\nexport default NewUserModal;","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\store\\actions\\index.js",["174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"import {GET_ARTICLE,DELETE_ARTICLE,CHANGE_USER_EMAIL,UPDATE_USER,GET_ARTICLES,ERROR_GLOBAL,SUCCESS_GLOBAL,LOGOUT_USER,UPDATE_ARTICLE_STATUS,CLEAR_NOTIFICATIONS,ADD_ARTICLE,AUTH_USER,GET_ADMIN_ARTICLES,SITE_LAYOUT,CLEAR_CURRENT_ARTICLE} from '../types'\n\n//////////////// articles //////////////\nexport const authUser = (user) => ({ \n    type:'AUTH_USER',\n    payload:user\n})\nexport const getArticle = (article) => ({ // the action is going to the article reducer\n    type:GET_ARTICLE,\n    payload:article\n})","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\story\\StoryModal.js",["188","189","190","191","192","193","194","195","196","197","198","199","200","201","202"],"import React, { useState, useEffect } from 'react';\n// Formik\nimport { Formik, Form} from 'formik';\nimport * as Yup from 'yup';\n// Cloudinary\nimport {Image} from 'cloudinary-react';\n\n// material ui icons\nimport ShareIcon from '@material-ui/icons/Share';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ImageIcon from '@material-ui/icons/Image';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n// Bootstrap\nimport Modal from 'react-bootstrap/Modal'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Input, IconButton, Card, CardActions, CardHeader, CardMedia, Collapse, Avatar,TextField, Button } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display:'flex',\n      justifyContent:'center',\n      marginTop:'30px'\n    },\n    previewcard:{\n      width:'300px',\n      height:'340px',\n      margin:'auto'\n    },\n    media: {\n      height: '550px',\n      width:'550px',\n      paddingTop: '56.25%', // 16:9\n    },\n    previewmedia: {\n      width:'300px',\n      height:'200px'\n    },\n    modalHeader: {\n     display: 'flex',\n     justifyContent: 'center',\n     fontWeight:'bold',\n    },\n    imageIcon: {\n        marginBottom:'8px',\n        marginRight:'5px'\n      },\n   \n  }))\n  \n\nconst StoryModal = ({storyModal, setStoryModal}) => {\n    const classes = useStyles()\n    const [fileName, setFileName] = useState('')\n    const [previewSource, setPreviewSource] = useState('')\n    const [isProfile, setIsProfile] = useState(false)\n    const [openAlert, setOpenAlert] = useState(false)\n    const [isBedAlert, setIsBedAlert] = useState(false)\n    const [message, setMessage] = useState('')\n    const user = JSON.parse(localStorage.getItem('user'))\n\n    const closeModal = () => setStoryModal(false)\n     // formik validation\n    const validationSchema = Yup.object().shape({\n        photo:Yup.string()\n        .required('photo is required')\n    })\n\n    // Edit the profile image\n    const editImage =  (values) => {\n        values.fileName = fileName\n        if(typeof values.photo === 'object' ) {\n        const reader = new FileReader()\n        reader.readAsDataURL(values.photo)\n        reader.onloadend = () => {\n        setPreviewSource(reader.result)\n        values.photo = reader.result\n        addNewStory(values)\n        }\n        } else {\n            addNewStory(values)\n        }\n    }\n\n      // Add new Post\n  const addNewStory = async (values) => {\n    const newStory = {\n      photo: values.photo,\n      UserId : JSON.parse(localStorage.getItem('user')).id,\n      fileName: values.fileName,\n    }\n      try {\n        const response = await fetch('/story', { \n        method: 'POST',\n        headers: {\n            'Content-Type':'application/json'\n        },\n        body: JSON.stringify(newStory)\n      })\n\n      const data = await response.json()\n      if(data.story){\n        setIsBedAlert(false)\n        setMessage('Story Added')\n        setOpenAlert(true)\n        setTimeout(() =>  {\n            closeModal()\n            setOpenAlert(false)\n        },1000)\n      } else {\n        setIsBedAlert(true)\n        setMessage(data.error)\n        setOpenAlert(true)\n      }\n\n    } catch (error) {\n        console.error(error)\n      }\n}\n\n       // Makes the preview image\n       const handleChangeImage = (e,setFieldValue) => {\n        const reader = new FileReader()\n        setFieldValue(\"photo\", e.target.files[0])\n        if(e.target.files.length === 0) {\n          setIsProfile(false)\n          setFileName('')\n          setPreviewSource('')\n        } \n        else {\n          reader.readAsDataURL(e.target.files[0])\n          reader.onloadend = () => {\n            setPreviewSource(reader.result)\n          }\n          setIsProfile(true)\n          setFileName(e.target.files[0].name)\n        }\n      }\n\n    return (\n        <>\n               <Modal size=\"lg\" centered show={storyModal} onHide={closeModal}>\n                 <Modal.Header className={classes.modalHeader}> <Modal.Title style={{fontWeight:'700'}}> Add new story </Modal.Title> </Modal.Header>\n                 <Modal.Body>\n                 <Formik \n                   initialValues={{photo:'',content:''}}\n                   validationSchema={validationSchema}\n                   onSubmit={ editImage }>\n                    {({ errors, touched, setFieldValue }) => (\n                      <Form style={{textAlign:'center'}}>\n                      <Input id=\"file\" className=\"inputfile\" type=\"file\" name=\"photo\" onChange={(e) => handleChangeImage(e,setFieldValue )} hidden/> \n                        <Button className={classes.profileBtn} color='primary'  variant=\"outlined\"><ImageIcon className={classes.imageIcon}/><label htmlFor=\"file\">{fileName ? `${fileName} UPLOADED` : 'UPLPOAD IMAGE'} </label></Button>\n                      {errors.photo && touched.photo ?  <div className=\"error\">{errors.photo}</div>  : null}\n                        <Collapse in={openAlert}>\n                            <Alert \n                            style={{margin:'10px'}}\n                            severity={isBedAlert ? \"error\": \"success\"}\n                            action={ <IconButton color=\"inherit\" size=\"small\" onClick={() => setOpenAlert(false) }> <CloseIcon fontSize=\"inherit\" /> </IconButton>}>\n                            {message}\n                            </Alert>\n                          </Collapse>\n                        <Button style={{margin:'10px'}} variant=\"outlined\" color=\"primary\" type=\"Submit\">Submit</Button>\n                      </Form>\n                    )}\n                  </Formik>\n                 </Modal.Body>\n            </Modal>\n        </>\n    )\n}\n\nexport default StoryModal\n","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\search\\poper\\Poper.js",["203","204"],"import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Popper, Divider } from '@material-ui/core';\n// Cloudinary\nimport {Image} from 'cloudinary-react';\nimport './style.css'\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    margin:'16px',\n    border: '1px solid lightgrey',\n    padding: theme.spacing(1),\n    backgroundColor: 'white',\n  },\n  divider: {\n    background:'black'\n  }\n}));\n\nexport default function SimplePopper({ users, anchorEl, open, setUsers }) {\n  const classes = useStyles();\n  return (\n    <div>\n    {users.users ? \n    users.users.length !== 0 ? \n        <Popper  open={open} anchorEl={anchorEl} style={{width:'300px'}}>\n        <div className={classes.paper}>{users.users && users.users.map(user => (\n           <Link to={`/profile/${user.id}`} style={{textDecoration:'none'}} onClick={() => setUsers([])}>\n            <div className=\"userDiv\">\n                <div > <Image className=\"userimage\" cloudName=\"malachcloud\" publicId={user.profile} width=\"60\" height=\"60\" crop=\"scale\" />  </div>\n                <div className=\"username\">{user.username}</div>\n            </div>\n         </Link>\n        \n        ))}\n   \n        </div>\n      </Popper>\n    :null : null}\n     \n    </div>\n  );\n}","C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\store\\types.js",[],"C:\\Users\\מלאך גל\\Desktop\\Projects\\Instagram-master\\client\\src\\components\\SignIn\\emailStepper.js",["205"],"import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { TextField, Button, Stepper, Step, StepLabel} from '@material-ui/core'\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 345,\n      margin:'auto',\n      padding:'10px'\n    },\n    large: {\n        width: theme.spacing(12),\n        height: theme.spacing(12),\n        margin:'auto'\n      },\n  }))\n\nconst EmailStepper = ({setEmailModal}) => {\nconst classes = useStyles();\nconst [activeStep, setActiveStep] = useState(0)\nconst [user, setUser] = useState()\nconst steps = ['Enter your Email', 'Verify account', 'Are You Sure ?','Done'];\n\n\nconst errorHelper = (formik,values) => ({\n    error: formik.errors[values] && formik.touched[values] ? true : false,\n    helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values]:null\n})\n\nconst handleNext = () => {\n    setActiveStep((prev) => prev + 1)\n}\n\nconst handleBack = () => {\n    setActiveStep((prev) => prev - 1)\n}\nconst nextBtn = () => {\n   \n        \n    \n    return(\n    <Button className=\"m-3\" variant=\"contained\" color=\"primary\" onClick={() => {\n        handleNext()\n        if (activeStep === 0) {\n            bringUser()}\n    }}>\n        next\n    </Button>\n    )\n}\nconst prevBtn = () => (\n    <Button className=\"m-3\" variant=\"contained\"  onClick={handleBack}>\n        back\n    </Button>\n)\n\nconst bringUser = async () => {\n    const response = await fetch(`https://instappmalach.herokuapp.com/useremail/${JSON.stringify(formik.values.email)}`)\n    const data = await response.json()\n    if(data.success) setUser(data.user)\n}\n\nconst sendEmail = async (values) => {\n    const response = await fetch(`https://instappmalach.herokuapp.com/email/${JSON.stringify(values.email)}`)\n    const data = await response.json()\n    if(data.success) console.log('email sent');\n    else console.log('email does not sent')\n}\n\nconst formik = useFormik({\n    enableReinitialize:true,\n    initialValues:{ email:''},\n    validationSchema:Yup.object({\n        email:Yup.string()\n        .required('This is required field')\n        .email('This is not a valid email'),\n    }),\n    onSubmit: (values,{resetForm}) => {\n       \n        sendEmail(values)\n    }\n})\n\n\n\n\n    return (\n        <>\n            <Stepper activeStep={activeStep}>\n            {steps.map(step => (\n                <Step key={step}> <StepLabel>{step}</StepLabel></Step>\n            ))}\n\n            </Stepper>\n\n            <form className=\"mt-3 stepper_form text-center\" onSubmit={formik.handleSumbit}>\n                { activeStep === 0 ?\n                    <div className=\"form-group\">\n                    <TextField style={{width:'100%'}} name=\"email\" label=\"Enter your email\" variant=\"outlined\" {...formik.getFieldProps('email')} {...errorHelper(formik,'email')}/>\n                    {formik.values.email && !formik.errors.email ? \n                     nextBtn() \n                    :null}\n                    </div>\n                :null}\n\n                { activeStep === 1 && user ?\n                    <div style={{textAlign:'center'}}>\n                   <Card className={classes.root}>\n                    <CardActionArea>\n                       <Avatar alt=\"Remy Sharp\" src={user.image} className={classes.large}/>\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                {user.firstname} {user.lastname}\n                            </Typography>\n                            <Typography  color=\"textSecondary\" component=\"p\"> Is that you ? </Typography>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions style={{marginLeft:'110px'}}>\n                    <Button className=\"m-3\" variant=\"contained\" size=\"large\" color=\"primary\" onClick={() => setActiveStep((prev) => prev + 1)}> Yes </Button>\n                </CardActions>\n                </Card>\n                     {prevBtn()}\n\n                    </div>\n                :null}\n\n                { activeStep === 2 ?\n                    <div className=\"form-group\">\n                       <Button className=\"m-3\" variant=\"contained\" color=\"primary\" onClick={() => {\n                           formik.submitForm()\n                           handleNext()\n                       }}> Send me new password</Button> \n                       {prevBtn()}\n                    </div>\n                :null}\n\n                { activeStep === 3 ?\n                    <div className=\"form-group\">\n                    <h5>Email sent to {formik.values.email}</h5>\n                       <Button className=\"m-3\" variant=\"contained\" color=\"primary\" onClick={() => setEmailModal(false)}> Close </Button> \n                    </div>\n                :null}\n            </form>\n        </>\n    )\n}\nexport default EmailStepper;",{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":1,"column":27,"nodeType":"212","messageId":"213","endLine":1,"endColumn":36},{"ruleId":"210","severity":1,"message":"214","line":13,"column":5,"nodeType":"212","messageId":"213","endLine":13,"endColumn":11},{"ruleId":"215","severity":1,"message":"216","line":28,"column":12,"nodeType":"217","endLine":28,"endColumn":14,"suggestions":"218"},{"ruleId":"210","severity":1,"message":"219","line":1,"column":8,"nodeType":"212","messageId":"213","endLine":1,"endColumn":13},{"ruleId":"215","severity":1,"message":"220","line":16,"column":8,"nodeType":"217","endLine":16,"endColumn":10,"suggestions":"221"},{"ruleId":"215","severity":1,"message":"222","line":105,"column":8,"nodeType":"217","endLine":105,"endColumn":18,"suggestions":"223"},{"ruleId":"210","severity":1,"message":"224","line":8,"column":172,"nodeType":"212","messageId":"213","endLine":8,"endColumn":179},{"ruleId":"210","severity":1,"message":"225","line":155,"column":10,"nodeType":"212","messageId":"213","endLine":155,"endColumn":20},{"ruleId":"210","severity":1,"message":"226","line":155,"column":22,"nodeType":"212","messageId":"213","endLine":155,"endColumn":35},{"ruleId":"210","severity":1,"message":"227","line":156,"column":10,"nodeType":"212","messageId":"213","endLine":156,"endColumn":16},{"ruleId":"210","severity":1,"message":"228","line":156,"column":18,"nodeType":"212","messageId":"213","endLine":156,"endColumn":27},{"ruleId":"210","severity":1,"message":"229","line":157,"column":10,"nodeType":"212","messageId":"213","endLine":157,"endColumn":21},{"ruleId":"210","severity":1,"message":"230","line":157,"column":23,"nodeType":"212","messageId":"213","endLine":157,"endColumn":37},{"ruleId":"210","severity":1,"message":"231","line":159,"column":10,"nodeType":"212","messageId":"213","endLine":159,"endColumn":19},{"ruleId":"210","severity":1,"message":"232","line":167,"column":23,"nodeType":"212","messageId":"213","endLine":167,"endColumn":37},{"ruleId":"210","severity":1,"message":"233","line":168,"column":17,"nodeType":"212","messageId":"213","endLine":168,"endColumn":25},{"ruleId":"215","severity":1,"message":"234","line":459,"column":6,"nodeType":"217","endLine":459,"endColumn":8,"suggestions":"235"},{"ruleId":"210","severity":1,"message":"236","line":4,"column":10,"nodeType":"212","messageId":"213","endLine":4,"endColumn":18},{"ruleId":"210","severity":1,"message":"237","line":26,"column":8,"nodeType":"212","messageId":"213","endLine":26,"endColumn":21},{"ruleId":"210","severity":1,"message":"238","line":103,"column":11,"nodeType":"212","messageId":"213","endLine":103,"endColumn":19},{"ruleId":"210","severity":1,"message":"239","line":9,"column":8,"nodeType":"212","messageId":"213","endLine":9,"endColumn":17},{"ruleId":"210","severity":1,"message":"240","line":10,"column":18,"nodeType":"212","messageId":"213","endLine":10,"endColumn":22},{"ruleId":"210","severity":1,"message":"241","line":103,"column":11,"nodeType":"212","messageId":"213","endLine":103,"endColumn":16},{"ruleId":"210","severity":1,"message":"231","line":104,"column":12,"nodeType":"212","messageId":"213","endLine":104,"endColumn":21},{"ruleId":"215","severity":1,"message":"242","line":22,"column":8,"nodeType":"217","endLine":22,"endColumn":21,"suggestions":"243"},{"ruleId":"210","severity":1,"message":"244","line":3,"column":18,"nodeType":"212","messageId":"213","endLine":3,"endColumn":28},{"ruleId":"215","severity":1,"message":"245","line":40,"column":8,"nodeType":"217","endLine":40,"endColumn":10,"suggestions":"246"},{"ruleId":"210","severity":1,"message":"247","line":21,"column":12,"nodeType":"212","messageId":"213","endLine":21,"endColumn":25},{"ruleId":"210","severity":1,"message":"231","line":22,"column":12,"nodeType":"212","messageId":"213","endLine":22,"endColumn":21},{"ruleId":"215","severity":1,"message":"242","line":112,"column":12,"nodeType":"217","endLine":112,"endColumn":14,"suggestions":"248"},{"ruleId":"210","severity":1,"message":"249","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":25},{"ruleId":"210","severity":1,"message":"211","line":1,"column":27,"nodeType":"212","messageId":"213","endLine":1,"endColumn":36},{"ruleId":"210","severity":1,"message":"250","line":4,"column":10,"nodeType":"212","messageId":"213","endLine":4,"endColumn":19},{"ruleId":"210","severity":1,"message":"251","line":4,"column":31,"nodeType":"212","messageId":"213","endLine":4,"endColumn":37},{"ruleId":"215","severity":1,"message":"252","line":86,"column":8,"nodeType":"217","endLine":86,"endColumn":10,"suggestions":"253"},{"ruleId":"215","severity":1,"message":"254","line":122,"column":8,"nodeType":"217","endLine":122,"endColumn":14,"suggestions":"255"},{"ruleId":"210","severity":1,"message":"256","line":6,"column":8,"nodeType":"212","messageId":"213","endLine":6,"endColumn":14},{"ruleId":"215","severity":1,"message":"257","line":82,"column":8,"nodeType":"217","endLine":82,"endColumn":21,"suggestions":"258"},{"ruleId":"215","severity":1,"message":"259","line":37,"column":8,"nodeType":"217","endLine":37,"endColumn":10,"suggestions":"260"},{"ruleId":"210","severity":1,"message":"249","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":25},{"ruleId":"210","severity":1,"message":"261","line":1,"column":21,"nodeType":"212","messageId":"213","endLine":1,"endColumn":35},{"ruleId":"210","severity":1,"message":"262","line":1,"column":36,"nodeType":"212","messageId":"213","endLine":1,"endColumn":53},{"ruleId":"210","severity":1,"message":"263","line":1,"column":54,"nodeType":"212","messageId":"213","endLine":1,"endColumn":65},{"ruleId":"210","severity":1,"message":"264","line":1,"column":66,"nodeType":"212","messageId":"213","endLine":1,"endColumn":78},{"ruleId":"210","severity":1,"message":"265","line":1,"column":79,"nodeType":"212","messageId":"213","endLine":1,"endColumn":91},{"ruleId":"210","severity":1,"message":"266","line":1,"column":92,"nodeType":"212","messageId":"213","endLine":1,"endColumn":106},{"ruleId":"210","severity":1,"message":"267","line":1,"column":107,"nodeType":"212","messageId":"213","endLine":1,"endColumn":118},{"ruleId":"210","severity":1,"message":"268","line":1,"column":119,"nodeType":"212","messageId":"213","endLine":1,"endColumn":140},{"ruleId":"210","severity":1,"message":"269","line":1,"column":141,"nodeType":"212","messageId":"213","endLine":1,"endColumn":160},{"ruleId":"210","severity":1,"message":"270","line":1,"column":161,"nodeType":"212","messageId":"213","endLine":1,"endColumn":172},{"ruleId":"210","severity":1,"message":"271","line":1,"column":173,"nodeType":"212","messageId":"213","endLine":1,"endColumn":182},{"ruleId":"210","severity":1,"message":"272","line":1,"column":183,"nodeType":"212","messageId":"213","endLine":1,"endColumn":201},{"ruleId":"210","severity":1,"message":"273","line":1,"column":202,"nodeType":"212","messageId":"213","endLine":1,"endColumn":213},{"ruleId":"210","severity":1,"message":"274","line":1,"column":214,"nodeType":"212","messageId":"213","endLine":1,"endColumn":235},{"ruleId":"210","severity":1,"message":"211","line":1,"column":27,"nodeType":"212","messageId":"213","endLine":1,"endColumn":36},{"ruleId":"210","severity":1,"message":"275","line":6,"column":9,"nodeType":"212","messageId":"213","endLine":6,"endColumn":14},{"ruleId":"210","severity":1,"message":"276","line":9,"column":8,"nodeType":"212","messageId":"213","endLine":9,"endColumn":17},{"ruleId":"210","severity":1,"message":"277","line":10,"column":8,"nodeType":"212","messageId":"213","endLine":10,"endColumn":20},{"ruleId":"210","severity":1,"message":"278","line":12,"column":8,"nodeType":"212","messageId":"213","endLine":12,"endColumn":29},{"ruleId":"210","severity":1,"message":"279","line":14,"column":8,"nodeType":"212","messageId":"213","endLine":14,"endColumn":20},{"ruleId":"210","severity":1,"message":"280","line":18,"column":29,"nodeType":"212","messageId":"213","endLine":18,"endColumn":33},{"ruleId":"210","severity":1,"message":"281","line":18,"column":35,"nodeType":"212","messageId":"213","endLine":18,"endColumn":46},{"ruleId":"210","severity":1,"message":"282","line":18,"column":48,"nodeType":"212","messageId":"213","endLine":18,"endColumn":58},{"ruleId":"210","severity":1,"message":"283","line":18,"column":60,"nodeType":"212","messageId":"213","endLine":18,"endColumn":69},{"ruleId":"210","severity":1,"message":"284","line":18,"column":81,"nodeType":"212","messageId":"213","endLine":18,"endColumn":87},{"ruleId":"210","severity":1,"message":"285","line":18,"column":88,"nodeType":"212","messageId":"213","endLine":18,"endColumn":97},{"ruleId":"210","severity":1,"message":"247","line":56,"column":12,"nodeType":"212","messageId":"213","endLine":56,"endColumn":25},{"ruleId":"210","severity":1,"message":"231","line":57,"column":12,"nodeType":"212","messageId":"213","endLine":57,"endColumn":21},{"ruleId":"210","severity":1,"message":"286","line":61,"column":11,"nodeType":"212","messageId":"213","endLine":61,"endColumn":15},{"ruleId":"210","severity":1,"message":"211","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":26},{"ruleId":"210","severity":1,"message":"287","line":4,"column":18,"nodeType":"212","messageId":"213","endLine":4,"endColumn":25},{"ruleId":"210","severity":1,"message":"283","line":11,"column":8,"nodeType":"212","messageId":"213","endLine":11,"endColumn":17},"no-native-reassign",["288"],"no-negated-in-lhs",["289"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'socket' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isUserAuthenticate'. Either include it or remove the dependency array.","ArrayExpression",["290"],"'React' is defined but never used.","React Hook useEffect has a missing dependency: 'logOut'. Either include it or remove the dependency array.",["291"],"React Hook useEffect has missing dependencies: 'getUser', 'getUserPosts', and 'user.Followings'. Either include them or remove the dependency array.",["292"],"'Tooltip' is defined but never used.","'isFollowed' is assigned a value but never used.","'setIsFollowed' is assigned a value but never used.","'isLike' is assigned a value but never used.","'setIsLike' is assigned a value but never used.","'storiesList' is assigned a value but never used.","'setStoriesList' is assigned a value but never used.","'isProfile' is assigned a value but never used.","'setInitialStep' is assigned a value but never used.","'setSteps' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPosts', 'getStories', 'getSuggestionUsers', and 'user'. Either include them or remove the dependency array.",["293"],"'authUser' is defined but never used.","'VisibilityOff' is defined but never used.","'dispatch' is assigned a value but never used.","'ReCaptcha' is defined but never used.","'Form' is defined but never used.","'reRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["294"],"'IconButton' is defined but never used.","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["295"],"'previewSource' is assigned a value but never used.",["296"],"'useState' is defined but never used.","'Container' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'connectedUser.id' and 'connectionOptions'. Either include them or remove the dependency array.",["297"],"React Hook useEffect has missing dependencies: 'getConversation' and 'location.search'. Either include them or remove the dependency array.",["298"],"'Popper' is defined but never used.","React Hook useEffect has a missing dependency: 'findUsers'. Either include it or remove the dependency array.",["299"],"React Hook useEffect has a missing dependency: 'storiesUsers'. Either include it or remove the dependency array. If 'setStoryUsers' needs the current value of 'storiesUsers', you can also switch to useReducer instead of useState and read 'storiesUsers' in the reducer.",["300"],"'DELETE_ARTICLE' is defined but never used.","'CHANGE_USER_EMAIL' is defined but never used.","'UPDATE_USER' is defined but never used.","'GET_ARTICLES' is defined but never used.","'ERROR_GLOBAL' is defined but never used.","'SUCCESS_GLOBAL' is defined but never used.","'LOGOUT_USER' is defined but never used.","'UPDATE_ARTICLE_STATUS' is defined but never used.","'CLEAR_NOTIFICATIONS' is defined but never used.","'ADD_ARTICLE' is defined but never used.","'AUTH_USER' is defined but never used.","'GET_ADMIN_ARTICLES' is defined but never used.","'SITE_LAYOUT' is defined but never used.","'CLEAR_CURRENT_ARTICLE' is defined but never used.","'Image' is defined but never used.","'ShareIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'ChatBubbleOutlineIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'Avatar' is defined but never used.","'TextField' is defined but never used.","'user' is assigned a value but never used.","'Divider' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},"Update the dependencies array to be: [isUserAuthenticate]",{"range":"323","text":"324"},"Update the dependencies array to be: [logOut]",{"range":"325","text":"326"},"Update the dependencies array to be: [modal, id, getUser, getUserPosts, user.Followings]",{"range":"327","text":"328"},"Update the dependencies array to be: [getPosts, getStories, getSuggestionUsers, user]",{"range":"329","text":"330"},"Update the dependencies array to be: [getUser, userChanged]",{"range":"331","text":"332"},"Update the dependencies array to be: [getUsers]",{"range":"333","text":"334"},"Update the dependencies array to be: [getUser]",{"range":"335","text":"336"},"Update the dependencies array to be: [connectedUser.id, connectionOptions]",{"range":"337","text":"338"},"Update the dependencies array to be: [getConversation, location.search, user]",{"range":"339","text":"340"},"Update the dependencies array to be: [findUsers, searchValue]",{"range":"341","text":"342"},"Update the dependencies array to be: [storiesUsers]",{"range":"343","text":"344"},[936,938],"[isUserAuthenticate]",[380,382],"[logOut]",[3815,3825],"[modal, id, getUser, getUserPosts, user.Followings]",[13716,13718],"[getPosts, getStories, getSuggestionUsers, user]",[688,701],"[getUser, userChanged]",[1024,1026],"[getUsers]",[3987,3989],"[getUser]",[3334,3336],"[connectedUser.id, connectionOptions]",[4410,4416],"[getConversation, location.search, user]",[2242,2255],"[findUsers, searchValue]",[1192,1194],"[storiesUsers]"]